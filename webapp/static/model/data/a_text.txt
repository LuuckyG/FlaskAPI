 Airhub BV is ontwikkelaar van aansturingssoftware van drones. In dit project ontwikkelen we een nieuw drone Command & Control Center (CCC) omdrones centraal vanuit punt aan te sturen over lange afstand via 4G/5G netwerk(en). Een geïntegreerd Unmanned Traffic Management System(UTM, luchtverkeersleiding-software voor drones). De meest gebruikte software platformen voor drones zijn DJI en PX4. Het CCC moet drones vanbeide platformen (DJI en PX4) kunnen aansturen. Ook moet het CCC in staat zijn om telemetry data te kunnen ontvangen. Hiervoor ontwikkelen we:- Microservices platform en microservices. Een microservices plaftorm is nodig die beide platformen middels interface verbindt met het CCC, die zowel data kan ontvangen in zelfde formaat naar het CCC als het versturen naar DJI en PX4 systemen met het zelfde formaat vanuit het CCC. Dashboard/CCC frontend / Android APP Import datafunctie DJI drone en Videostreaming service iOS Het doel is om eenvoudig collectieven op te kunnen zetten voor werkgevers binnen de assurantiebranche in Nederland. De aangesloten organisaties
kunnen hiermee een voordeel bieden aan haar werknemers of leden, omdat zij met een grote groep personen eenzelfde verzekeringsproduct afsluiten
en het hierdoor goedkoper aangeboden kan worden.
Het platform moet 2 doelgroep lagen bevatten, namelijk;
1. Assurantiekantoren; kunnen eigen collectieven opstarten en uitrollen;
2. Volmachten; kunnen haar assurantiekantoren erop aansluiten.
Beide doelgroepen moeten op hun eigen wijze met ons platform kunnen gaan werken. Het is van groot belang dat we zoveel mogelijk
verzekeringsproducten van Nederlandse verzekeraars op de front-end aan kunnen bieden, want dat levert de meeste meerwaarde voor deze 2
doelgroepen. Om de gehele flow van bestellingen volledig geautomatiseerd dus STP (Straightthrough processing) te laten verlopen, lopen we tegen
technische belemmeringen aan die we graag op willen lossen.
Doelstelling
Het doel is om een volledig geautomatiseerde (STP) online bestelstraat voor verzekeringen te ontwikkelen, waarbij er geen handenarbeid meer aan
bestellingen zit, die via het internet binnen komen. Hier wordt specifieke backoffice problematiek verwacht.
Oplevering
Aan het einde van het project hopen we een prototype oplossing te hebben ontwikkeld die representatief kan worden getest bij meerdere
assurantiekantoren en volmachtbedrijven.We zien in praktijk dat we steeds vaker klanten spreken die een goede sociaal communicatieportaal voor haar organisatie wil laten ontwikkelen. Een
wens hierbij is een centraal portaal te hebben die alle data van de organisatie ontsluit, prioriteit van de content door de gebruikers bepaald wordt, snel
doorzoekbaar is, real-time gepresenteerd wordt en waarbij medewerkers kennis, informatie en ideeën, apparaat onafhankelijk met elkaar kunnen
delen. De medewerkers moeten niet informatie actief moeten zoeken en ophalen, maar het systeem moet het ze aanrijken a.d.h.v. actuele kennis van
de gebruiker (waaronder de locatie). Tevens moet het systeem bepaalde triggers hebben, die ervoor zorgen dat processen en workflows uitgevoerd
gaan worden zodat de gebruiker ontzorgt wordt in zijn dagelijkse werkzaamheden. Dit moet de olie tussen de medewerkers worden en veel onnodige
taken bij gebruikers weghalen.
Doelstelling
Een portaal dat proactief data en processen indexeert, informeert en de gebruiker signaleert. Dus een digitale assistent voor iedere medewerker zodat
deze beter en in minder tijd haar werk uit kan voeren.
Oplevering
Een universeel online platform geschikt voor alle types organisaties en locatie onafhankelijk. Ontwikkeling en eerste pilots vinden plaats in Nederland,
waarna internationale uitrol zal plaatsvinden.Aanvrager wil ten behoeve van een opdrachtgever een geautomatiseerd systeem ontwikkelen ten behoeve van sport (tickets) Het inkopen en
verkopen van (sport)tickets hen onnodig veel tijd, geld en risico kost omdat dit niet eenvoudig uit te voeren is. De inkoop van deze tickets gaat
handmatig in
portalen van aanbieders en worden bij verschillende partijen afgenomen. De beschikbaarheid van deze tickets veranderd zeer snel. Hierdoor is er geen
compleet beeld van het actueel aanbod en beschikbaarheid van tickets in de markt. Laat staan dat er een goed vergelijk te maken is tussen de
verschillende aanbieders. Daarom is het idee ontstaan om een generiek, centraal en wereldwijd ticketplatform te ontwikkelen. Het doel hiervan is om
bureaus over de hele wereld te voorzien van een compleet en actueel overzicht van het aanbod van (sport)tickets welke direct te reserveren en in te
kopen zijn. Hierdoor is makkelijk een vergelijk te maken en tickets onder eigen label of in een totaalreis in de markt aan te bieden.
Doelstelling
Het ontwikkelen van een eerste demo-versie om de verwachte knelpunten in een demo-setting op te lossen, alvorens doorontwikkeling naar een
universeel ticketplatform. Veel instellingen voor gehandicaptenzorg willen dat haar clienten beter en zelfstandiger worden en daarmee dat de afhankelijkheid van de zorginstelling afneemt. Wij geloven dat een mobiele applicatie daarbij kan ondersteunen. Middels een zorgapp kan het leven van de client verbeterd worden en ondersteuning/ handvatten bieden in het omtrent het dagelijks leven van client, vragen en hulp. Doelstelling Het doel is om een laagdrempelige app te ontwikkelen die mensen met een beperking kunnen gebruiken zonder bottlenecks waardoor de client vroegtijdig afhaakt. De app moet op alternatieve wijze, dan de regulieren apps in de stores van Apple en Google, installeerbaar zijn en de volgende functionaliteiten bieden: - Zelflerend: voorspellen op basis van gedrag en kenmerken waar cliënten behoefte aan hebben en proactief advies bieden. - Live meekijken: via de app informatie aan de omgeving van de cliënt toevoegen voor verhoogde kwaliteit van leven. We willen dat de app m.b.v. Augmented Reality (AR) informatie en kennis toe kan voegen aan het leven van de client. Aanleiding is dat wij met onze klanten over betrouwbaarheid en beschikbaarheid afspraken maken. Het blijkt dat wij hier echter geen inzage in kunnen
geven. Het ontbreekt ons aan meetmethodiek en cijfers. Hierdoor hebben we geen overzicht in performance indicatoren van onze software zowel
standaard als maatwerk gemaakte software. Tevens geen overzicht in performance indicatoren van onze hardware en ICT-infrastructuur.
Wij willen een monitoringsdashboard programmeren die op verschillende bronnen metingen kan verrichten om deze vervolgens in een dashboard op
gestandaardiseerde wijze weer te geven.Er zijn applicaties in de zorg met als doel een beveiligde snelle communicatieverbinding te realiseren tussen huisarts en patiënt t.b.v. medische
informatie-uitwisseling. Deze zorgmessenger app's draaien enkel op Android en IOS-platformen welke los staat momenteel van de door ons
ontwikkelde Vcare telefoonsoftware operator. Hierdoor bestaan er nu twee verschillende communicatiesystemen welke niet synchroon lopen. Hiervoor
willen we een centraal communicatieplatform (functie) met een beveiligde telefoonlijn en messenger functie programmeren. Zo kan de telefoniste
vanuit 1 platform werken. Hiermee wordt beveiligde art-patiënt-communicatie efficiënter met een sterk afgenomen kans op fouten/miscommunicatie/
verouderde informatie waarmee kwaliteit en gebruiksgemak wordt sterk verbeterd.Telefonisch beschikbare triagisten ontvangen veel telefoontjes voor een diversiteit aan (medische) vragen. Hierbij maken zij gebruik van een vraagantwoord
database waar a.d.h.v. de klachten de juiste antwoorden gegeven worden. Dit is een tijdsintensief proces waarin een automatiseringsslag
t.b.v. snelle hulpverlening en efficiëntie beoogd wordt en minder telefonisten benodigd zijn.
Doelstelling
De triagisten database van tekst naar spraak omzetten en te integreren in onze eigen ontwikkelde VoIP operator software zodat de beller tegen de
database aan praat en dan door middel van een vraag antwoord systeem een prioritering krijgt. Op deze wijze kan de operator ontlast worden door
een voorselectie te maken op basis van de antwoorden.Op het eigen ontw. softwareplatform BitShop (e-commerce omgeving), benaderbaar via webbrowser, kunnen gebruikers grote hoeveelheden data van
productleveranciers inzichtelijk en centraal beheren. Dit platform dient overweg te kunnen met importeren, structureren en actualiseren van grote
hoeveelheden data, al dan niet aangevuld met dataverrijking teneinde browserweergave. Hiervoor ontwikkelen we nieuwe softwarecomponenten &
functionaliteiten:
1. Data importmanager: automatische herkennen en structuren grote hoeveelheid data vanuit verschillende bronnen in een centrale repository. Hierbij
dient het platform te ‘leren’ welke kolommen uit de importbestanden waar terecht moeten komen. Het gaat om import van enkele duizenden
producten die elk ongeveer 100 kolommen aan data hebben.
2. Data updater: bij een update van (product)data zorgt deze module ervoor dat data automatisch naar de juiste locatie in de repository opgeslagen
wordt zonder dubbele data updates.
3. Flexible Grid: data wordt in een webbrowser weergegeven die zich automatisch aanpast aan de hoeveelheid data, met aparte indeling/kolommen
voor “goed lopende producten” dan voor “verouderde voorraad”.
4. Versiebeheer: gegevens worden momenteel uit drie verschillende bronnen bewerkt zonder dat gebruikers van elkaar kunnen weten wie wanneer
welke data aangepast heeft. Op het bewerkscherm moet dus steeds zichtbaar worden gemaakt wie wat op welke manier heeft aangepast. Dit is erg
omslachtig en zal worden opgelost door deze module.In veel gevallen ontwikkelen wij platform-onafhankelijke webapplicaties. Echter, soms is het toch wenselijk om een desktopapplicatie te ontwikkelen
en te gebruiken voor een specifieke taak, omdat het bijvoorbeeld wenselijk is dat de applicatie als icoontje in de taakbalk komt te staan of dat de
gebruiker met 1 druk op de knop de applicatie kan gebruiken. Bestaande oplossingen zoals een IIS (Internet Information Server) op de desktop
installeren is omslachtig, vormvast en bevat onvoldoende flexibiliteit voor onze applicaties.
We ontwikkelen een softwarefunctie waarmee we eigen webapplicaties kunnen ‘vertalen’ en direct op alle besturingssystemen kunnen laten draaien.
Data dient daarbij opgeslagen te worden en bereikbaar te zijn voor beide type applicaties. De webapplicatie mag geen last hebben van anti malware
en anti virus pakketten voor het doorzetten van de data naar centraal.Een document welke lokaal wordt geopend, kan je alleen lokaal opslaan. Wanneer je een word document via een webapplicatie opent, dan dien je
deze weer te uploaden naar de webapplicatie om het op te slaan. Het komt nu regelmatig voor dat een document wordt aangemaakt via een
webapplicatie, maar dat deze daarna niet via upload is opgeslagen in de online omgeving. Het resultaat is dan dat het document online niet aanwezig
is.
Tekortkomingen huidige oplossingen:
- De opslaan knop in MS office pakketten kijkt alleen naar lokale omgeving of aanwezige netwerkschijven, Online opslaan kan alleen in OneDrive of
SharePoint.
- Vanuit sommige browsers zoals Chrome kun je geen Word openen. Je kan alleen een document downloaden en daarna openen.
- In een online omgeving is het niet mogelijk om een netwerkschijf aan te maken.
We ontwikkelen een applicatie om bestanden van diverse aard direct op te slaan van lokaal op een weblocatie.Onze webbased softwareapplicaties zijn vaak bedrijfskritisch. In geval van storing bij onze internetprovider willen we een mogelijkheid om de virtuele
server waar websites op draaien in de Microsoft Azure omgeving verder te draaien in geval van een storing bij Equinix. Websites draaien op virtuele
servers op een Microsoft Hyper V omgeving. Dit op onze eigen hardware bij provider Equinix.
Uitdagingen:
- Hoe kom je aan een voldoende actuele stand van de software en database. (het systeem moet immers draaien in geval van grote storing in ons
reguliere serverpark)
- Hoe richt je een en ander zodanig in dat wij en onze klanten binnen een uur van de alternatieve locatie gebruik kan maken.
- Hoe laten we de koppelingen naar externe systemen werken vanaf de alternatieve locatie. Als softwareontwikkelaar testen wij frequent kopieën van productiedatabases van onze klanten testen. Omwille van dataveiligheid kunnen deze de te testen databases (klonen) geen herleidbare productiedata bevatten. Hiervoor moeten we gevoelige data anonimiseren. Om de werking van de applicatie zo betrouwbaar mogelijk te testen moet de nagebootste data zo realistisch mogelijk zijn. Een tabel vullen met willekeurige gegevens is hiervoor onvoldoende. In de testcases moeten tabellen moet zowel naar datatypes als naar de betekenis van velden, zoals bijvoorbeeld voornaam, tussenvoegsel, achternaam en email adres gekeken worden die wel als zodanig herkenbaar voor de ontwikkelaar zijn, maar zonder herleidbaarheid naar gevoelige data. Hierdoor kunnen deze velden niet zomaar met willekeurige letterreeksen worden ingevuld. Tevens moet de bijbehorende data in de database aan elkaar gerelateerd kunnen worden: een bedrijfsnaam zou bijvoorbeeld terug moeten kunnen komen in een email adres. Hiervoor ontwikkelen we een desktop applicatie “Data anonymizer” waarmee een test-profiel van een database kan worden aangemaakt. In dat profiel worden de tabellen en kolommen aangewezen die geanonimiseerd moeten worden. Vervolgens zal de beoogde tool d.m.v. dataraming en veldmatching de betekenis van velden te achterhalen en deze op een passende wijze automatisch te anonimiseren.  Binnen Assist verzuim worden afspraken ingepland voor eigen mensen en met externe partijen zoals bedrijfsartsen, arboartsen en arboverpleegkundigen. Dit inplannen gebeurt binnen de Verzuim-module m.b.v. zogenaamde “Afspraken” welke gekoppeld zijn aan een medewerker en optioneel ook aan een ziekmelding en/of preventief dossier van verschillende externe (agenda) systemen waarbij er verschillende gekoppelde partijen selectief data uit onze Verzuim-module nodig hebben voor het maken van eigen planningen met zorgverleners, en eindklanten. Technische probleem is dat medische (gevoelige) data niet tussen verschillende selectief systemen uitwisselbaar is als gevolg van zeer complexe compliance en acces rights zodat professionals een eigen agenda in kunnen plannen en eindklanten toegang krijgen tot deze agenda’s. Hiervoor ontw. we een nieuwe planningstool welke technisch integreert in het ChainWise platform als interface om om het plannen van afsprakenmakkelijker te maken en deze in agenda zichtbaar worden. Het moet ook mogelijk worden voor klanten om via het extranet met deze nieuwe gebruiksinterface zelf afspraken in te plannen waarbij bedrijven met een eigen administratie gebruik kunnen maken van ChainWise.  Four Digits krijgt van diverse klanten de vraag om blokchain toepassingen te ontwikkelen. Door Gemeente Arnhem zijn we gevraagd om een platform te ontwikkelen om een blockchain (smart contract) te ontwikkelen voor haar burgers en voor een ander toepassing willen we een blockchain ontwikkelen om te valideren dat er een bepaalde actie is gedaan. Om goede blokchain projecten te kunnen opleveren lopen we tegen verschillende uitdagingen aan. Hoe zorgen we ervoor dat de externe systemen aan kunnen sluiten op de blockhain en hoe controleren we die? Hoe optimaliseren we de rekenkracht en beperken die zodat de performance goed blijft en hoe kunnen we onze oplossingen herbruikbaar maken. Doel van dit project is om een Blockchain framework te ontwikkelen waarmee we zelf specifieke blockchain oplossingen kunnen ontwikkelen, waarin het ontworpen design, techniek en performance altijd perfect intact blijft. In het Speur- & Ontwikkelingswerk zullen we de nieuwe technische programmatuurprincipes ontwikkelen in een gebruiksvriendelijke en veilige omgeving. We ontwikkelen een beheercomponent applicatie en Interface met externe systemen (modulaire opbouw) en we ontwikkelen blockchain technologie met een oplossing om niet eindeloze transacties in de chain op te slaan, maar alleen wat nodig is en de rest via scheiding van data via metadata elders op te slaan en ook weer terug te halen. Fietscomputers lopen achter qua gebruiksvriendelijkheid. Wielrenners willen realtime nauwkeurige meetgegevens zonder dat daar sensoren op de fiets voor nodig zijn. Als wielrenner wil je zo goed en gezond mogelijk kunnen trainen. Je hebt hiervoor betrouwbare meetgegevens nodig. De metingen op huidige fietscomputers worden verkregen door de omwentelingen- sensor in het voorwiel. Deze metingen zijn echter onnauwkeurig en onbetrouwbaar. 

Four Digits ontwikkelt een component voor de ontwikkeling van de benodigde applicaties, zowel in app als website. Tevens dienen we de data te kunnen verwerken komende uit het device en andere externe devices. 

Functionaliteit / componenten:
1. Dataopslag & Sync component. We zorgen voor autoscaling van het platform met security lagen (encryptie) rekening houdende met persoonlijke data. 
2. Interface met ANT en externe device
3. Deployment naar Device: het hardware device moet kunnen worden geüpdatet via de aangesloten app. Hierbij moet rekening worden gehouden met lege batterij, mobiel en device verbinding verbreking, device is vol, sync faalt. Het device mag nooit stuk door een onklare software update. iClean Dog Wash is nu op de markt en de concurrentie is groeiende. Kortom, het product moet zich ook in de toekomst gaan onderscheiden ten opzichte van de concurrentie De huidige software / UI stack is toe aan modernisering toe, tevens wordt er nieuwe hardware ingezet en de aansturing daarvan. We ontwikkelen een nieuwe deployment / operations oplossing t.b.v. het beheer van onsite machines. Ten behoeve van beveiliging ontwikkelen we geavanceerde encryptie methodes voor de gehele software inclusief data, zodat dupliceren hiervan lastiger wordt gemaakt. Er zijn nu 250 machines, maar verwachte groei gaat komend jaar naar 2.500 stuks. We zullen hierdoor een oplossing moeten programmeren voor beheer op afstand en deployment. Functionele componenten / uitdagingen: 1. Nieuwe motion based UI op basis van nieuwste future proof technology en ansturing nieuwe hardware/ resoluties. Vooral het aansturen en stabiel krijgen nieuwe hardware (hardware is onvoorspelbaar. Verkeerde voltage etc.). We zullen een monitoringscomponent ontwikkelen. 2. DevOps Operation orchestra platform voor beheer en updates van onsite machines. Klaar voor remote updates/ cliënt support. 3. iClean wil haar producten gaan leveren aan klanten in o.a. China. Om reproductie van het product te bemoeilijken heeft ze ons gevraagd of we de huidige software beter kunnen beveiligen tegen het klonen.  Het Chat Solution Management system richt zich op het managen van online Chatsites inclusief het uitvoeren van geautomatiseerde taken. Zie het als "Chat website as a Service" voor meer dan 100 platforms en doelgroepen. Meer dan 80 websites willen we kunnen beheren via een chatfunctie. Functionaliteit/ componenten 1. We verwerken een grote hoeveelheid realtime communicatie. Hiervoor ontwikkelen we een realtime communication bus voor messaging en dataanalyse. 2. Photo/Content Recognition engine voor het filteren van ongeschikte content 3. Dynamisch genereren van userinterfaces en online chat omgevingen 4. We ontwikkelen een AI Driven Automated Triggers and Messages platform om profielen te blijven benaderen. Uitdaging is het automatische triggers genereren op basis van inhoudelijke content (analyse en interpretatie van deze content). 5. Chatbots die het werk van operators over gaan nemen. Gebruik makend van Content/text analyse en automatisch responses  Het herkennen en verwerken van grote hoeveelheden foto’s behorende bij een kavel op basis van een nummer (bijvoorbeeld bij een veilingwebsite). Een kavel heeft een nummer. De foto serie begint met een foto van het nummer en stopt tot een volgend nummer. Dezelfde nummers kunnen meerdere keren voorkomen in een reeks met foto’s, bijvoorbeeld omdat men een foto is vergeten te schieten en terug gaat naar eerdere kavels. Hiervoor zijn geen bestaande oplossingen en zullen we een nieuw systeem ontwikkelen. Functionaliteit/componenten: 1. We ontwikkelen herkenningssoftware voor de processing van nummers en daarbij behorende reeksherkenning. 2. Het uitlezen van de Exif informatie voor de rotatie en het hierna schalen van de foto naar meerdere voor web geschikt formaten en het inrichten van een processtraat welke de origineel verwijderd en de juist gedraaide scale laat staan.  Op de markt en aan de wal wordt door marktkooplieden of schepen stroom afgenomen. Dit gebeurt nu door het inpluggen van een stekker in een beschikbare stekkerdoos. Betaling vindt plaats op basis van geschatte afnamen en is achteraf. Men wilt dit omzetten naar de situatie dat er alleen stroom uit de stekkerdoos komt als de klant vooraf heeft betaald en betaald voor haar hoeveelheid kWh. Four Digits ontwikkelt een component voor de ontwikkeling van de benodigde applicaties, zowel in app als website. De data moet via LORA Long range, low power wireless platform worden verzonden en ontvangen. De stekkerdozen moeten een signaal krijgen dat ze stroom mogen leveren en hoeveel. Via de applicatie moet de marktkoopman een betaling kunnen doen per kWh. Na betaling loopt er stroom uit de stekkerdoos tot deze op is. De betaling moet dus door de applicatie worden doorgegeven aan de schakelkast. De schakelkast praat via Lora (Long range, low power wireless) met een server. Hiervoor ontwikkelen we een Dataopslag & Sync component, Interface met LORA en externe device en betaal synchronisatie tussen applicatie en devices.  Voor een regionale scholengemeenschap is er een bestaande organisatiestructuur met vele tientallen subsites welke gebruik maken van diverse eigen platformen en webmasters. We willen hiervoor een multisite oplossing ontwikkelen waarmee eenvoudig content gedeeld kan worden, uitwisseling van informatie mogelijk wordt en meertalige sites kunnen worden opgezet in een beheersbare omgeving. Deze oplossing moet geschikt zijn om te koppelen aan de diverse backend systemen. Functionaliteit/componenten: - Platform voor opslaan en beschikbaar stellen van diverse soorten informatie/data en meertalig (content, afbeeldingen, video, geluid, externe data). - Flexibel versiebeheersysteem en editor waarbij eigenaarschap van content/informatie gedeeld kan worden en te allen tijde aangepast kan worden. Webmasters kunnen bepalen of content wordt aangeboden aan het platform, dit zelf vormgeven via de editor en het platform uiteindelijk bepaald of de content wordt opgenomen weer verspreid wordt binnen het platform. - Autorisatie. Hiervoor ontwikkelen we een Query engine voor single sign-on i.c.m. met SAML Azure Ad protocol.  Het idee is om middels een frontend en REST API de toegang tot en gebruik van het rekencluster High-performance compute & deep learning (HCP) voor graan- en zaadonderzoek in de biometrische sector laagdrempeliger wordt. De frontend moet op zijn minst terug rapporteren en zaken als errors, status update, time remaining, etc. inzichtelijk maken. En het geheel moet veilig zijn, de specifieke definitie van veilig moet nog worden geformuleerd. Dit systeem zorgt er voor dat backend systemen zich via een adapter kunnen aanmelden en uitgelezen kunnen worden. Aan de hand hiervan weet het systeem welke commando’s beschikbaar zijn. Gebruikers kunnen inloggen via ADFS en mogen op basis van credentials handelingen wel of niet uitvoeren, inzien etc. binnen het systeem. De web-frontend dient als voorbeeld applicatie voor de REST API en is tevens de manier om taken in te schieten. De REST API ondersteunt Open API v2 wat tevens API-documentatie verschaft middels Swagger UI, onderdeel van Open API v2. Gebruikers kunnen inloggen via ADFS en krijgen op basis van deze credentials toegang tot het systeem (SSO). Het rechtenbeheer om handeling wel of niet uit te kunnen voeren wordt in de Django Admin geregeld. Verdere uitwerking omtrent authenticatie en autorisatie kan in een vervolgproject plaats vinden. Denk daarbij bijvoorbeeld aan externe klanten die niet in ADFS staan, gebruikers met gedeeltelijk of beperkt toegang, of additionele applicaties.  Four Digits ontwikkelt een eigen portal in de vorm van een online dashboard waarin geldtransacties veilig uitgevoerd en beheerd kunnen worden. Daarbij worden deze voorzien van automatische controles/monitoring. Dit ‘Highly secured portefeuille platform’ moet, .utf8 filesystem data omzetten naar PDF bestanden en deze weergeven aan klanten waardoor rekeninggegevens en statussen inzichtelijk worden. Doelstelling is een Highly secured portefeuille platform te ontwikkelen met de functionaliteiten: - Dashboard waarin in één oogopslag actuele cijfers te zien zijn, gerangschikt naar peildatum - Semi-automatisch inladen en verwerken periodieke bestanden van verschillende formaten (dagelijks, wekelijks of maandelijks) gerangschikt naar KPI’s en analyses/projectie tools - API-koppelingen waarbij informatie gesplitst kan worden op zowel lokale als regionale zorgaanbieders niveau. D.w.z.: aantal actieve cliënten, aantal afgegeven indicaties en filters per categorie - Gemiddelde wachttijden (lijsten) indicator per (gecontracteerde) zorgaanbieder met inzicht in lokale en regionale verschillen omdat niet zorgaanbieders bij alle gemeente gecontracteerd zijn. - Inzicht in de totale uitgaven wat kan dienen als projectie voor de toekomst.  Four Digits ontwikkeld een softwareplatform voor de Externe Ontsluiting Verkeersinformatie (EOV). Dit is een nieuw Javascript-based platform en API backend met proxy voor Rijkswaterstaat t.b.v. het realtime in kaart brengen van ‘hinderfunctionaliteit’ in het verkeer. Dit is het vervolg op het huidige calamiteiten-trackingssysteem van Rijkswaterstaat. Het platform zal worden gebruikt om automobilisten realtime informatie te geven over o.a. werkzaamheden, spitsverwachting en incidenten. Hiervoor ontwikkeld Four Digits vergaande techniek op het gebied van Javascript frameworks (ReactJS) en kaart technologie (Leaflet). Uiteindelijke doel is dat het platform geïntegreerd wordt in diverse webomgevingen (o.a. RWS) middels zodat automobilisten informatie kunnen inzien t.a.v. werkzaamheden, incidenten en spitsverwachting. Daarnaast moet de webapplicatie gebruiksvriendelijk en geschikt zijn voor zowel desktop als mobiel. Onderdelen: - Ontwikkeling van een proxy tussen website en databron (o.a. Ibera) welke met caching de vraagstelling van bezoekers kan interpreteren, verwerken en tegelijkertijd voorkomt dat de RWS EOV data publiekelijk beschikbaar is. Hiervoor is HMAC-versleuteling als beveiliging vereist welke eveneens ontwikkeld wordt. - Ontwikkeling van een Proxy backend met caching lagen en HMAC-security interfaces en een API voor back en frontend voor de React koppeling.  Four Digits ontwikkelt een registratiesysteem ‘HRS’ waarin (project)gegevens van grote Nederlandse vrijwilligersorganisaties worden geregistreerd en beheerd. Met 35.000+ vrijwilligers en 450 beroepskrachten levert dit een enorme datastroom met persoonlijke/ gevoelige informatie (bijv. data over hulp na detentie, omgangsregelingen, financiële en privézaken) die zeer veilig moet worden opgeslagen i.cm. eenvoudige verwerking. Doelstelling is het ontwikkeling van het HRS als centrale applicatie om bedrijfskritische data op een veilige manier op te slaan en inzichtelijk te beheren, geschikt voor grote (overheids)organisaties en in overeenstemming met wettelijke eisen voor het veilig opslaan van gegevens o.b.v. een hiërarchie rollensysteem. Met het hiërarchie rollensysteem zullen wij een nieuw onderdeel ontwikkelen volgens de scrum-methode tussen de SSO en de API van de verschillende pakketten; een Azure gebruikersbeheer koppeling. We ontwikkelen beoogd systeem op het op Python gebaseerde Django Framework. Hiermee zorgen we voor een flexibel en eigentijds systeem dat voldoende ruimte biedt voor nóg meer vernieuwing in de toekomst, zoals realtime communicatie, extra beveiliging met 2FA en betere API mogelijkheden.  Aanvrager ontwikkelt een ‘Sync-pendingorders’ management command systeem dat alle orders van een bezoeker automatisch synchroniseert met gegevens uit verschillende backend systemen. Momenteel worden syncs van bestaande orders gesynced met orders in het eigen ontwikkelde Oscar (SO19030435) i.p.v. data in ESB. Hierdoor is voor het synchroniseren van een order alle input nodig over die order (reserveringen, extra's, tickets, subscriptions), terwijl die data helemaal niet gebundeld wordt aangeboden aan onze Oscar applicatie. Uitbreidingen hiervan zoals meerdere reserveringen per order (groepsboekingen) maken dit complexer. Dit maakt het huidig systeem onnodig zwaar, data-intensief en gevoelig voor foutieve data-invoer als gevolg van een vergaande user requests en realtime data-aanpassingen in back-endsystemen. Hiervoor ontwikkelen we een ‘Sync-pendingorders’ systeem o.b.v. ESB-data in Python en Django Oscar om enkel per orderline de relevante data te syncen. Dit beïnvloedt de hele Order-proceslijn (communicatie-layer, triggers, pushacties en backend naar frontend communicatie (realtime). Aanvrager ontwikkelt voor haar relaties, met grote diversiteit aan producten, backend afhandelingssystemen voor e-commerce. DOEL Het ontwikkelen van een laag tussen de webshop (voor de verkoop van producten) en de backend. Uitgangspunt is een shop met talrijke artikelgroepen die makkelijk oproepbaar is en direct een contact legt naar de gebruiker. De gebruiker neemt producten af en de API zorgt ervoor dat de bestelling die gedaan worden mogelijk is en betaald kan worden. Tevens wordt de applicatie gebruikt als beheerinterface voor de klantenservice toepassingen TECHNISCH NIEUW Aanvrager heeft in dit project te maken met talrijke dataformats met zeer verschillende requests/acties etc. Hieraan gekoppeld zijn processtappen welke beinvloed worden door keuzes/acties van eindgebruikers (klant webshop), deze gegevens opslaat en realtime op een willekeurige device (pc-smartphone etc) opslaat. Technisch idee is gelegen in het ontwikkelen van een communicatielayer welke middels API's (plug in) de diverse data formats converteert in een uniforme bestandsformat die geschikt is voor elk type device; formats komen nu vaak op diverse manieren over, er worden fouten gemaakt omdat zaken niet leesbaar of onduidelijk zijn of het systeem loopt vast. Vervolgens wordt in de communicatielayer afhandeling, triggers en pushacties gegenereerd om naar backen frontendsystemen: (ERP, payment, planning: logistiek en locatie)  LeadLabel ontwikkeld een eigen softwaresysteem waarmee grote hoeveelheden interne en externe data uit verschillende databronnen verzameld worden en resultaten middels voorspellingsalgoritmen op diverse manieren presenteert. Hiertoe worden nu verschillende tools en applicaties gebruikt ter verzameling en manipulatie. Deze zijn echter onvoldoende in staat grote hoeveelheden data (meerdere scrapers, mln. input queries uit .CSV-files > 2GB) efficiënt en tijdig te verwerken en beperkt het platform in kritische functionaliteit. Om data te kunnen verzamelen, verwerken, manipuleren en te analyseren, ontwikkelen we een nieuwe structuur om data uit alle bronnen te extracten (dataverzameling) en naar een centraal punt te sturen om aldaar geïndexeerd, gemanipuleerd en geanalyseerd te worden (pipeline). Functionaliteiten 1. Automatisch schaalbare (realtime computing) dataverzameling van 1k naar miljoen search requests/dag met beperkte CPU-thread load (geschikt voor consumenten hardware) en impact op de te scrapen databronnen (in parallel) binnen tijdlimieten. 2. Dataconversie/ manipulatie ongestructureerde (web)data naar een uniforme output ter invoer van datapipeline en algoritmen teneinde datapresentatie. 3. Integratie zelflerende search engines o.b.v. scrape results en terugrapportage van databronnen en notificatie van afwijkend gedrag. 4. Automatische reporting van data-analyse results in een eenduidig format. Voor Rijkswaterstaat gaat aanvrager een systeem ontwikkelen voor scenarioplanning en automatische omleiding van dagelijks
verkeer in Nederland ontwikkelen. Momenteel werkt het systeem zodanig, dat wanneer er een weg gesloten of verstopt raakt,
de verkeersingenieur een PDF- of boekje ontvangt met schema's/scenario's. Het stroomschema geeft aan hoe een scherm of
matrixbord langs de weg (bermDRIP) of stoplicht moet worden geconfigureerd. Dit wordt vervolgens met de hand ingevoerd in
een apart systeem genaamd CDMS. We onderzoeken en ontwikkelen een softwareoplossing om dit te automatiseren in een
op een map gebaseerd visueel software systeem dat de flowchart visueel en dynamisch in kaart brengt voor RWS. De
volgende stap is om dit overbodig te maken door het gebruik big data en analytics die automatische de beste routes
genereren/ voorspellen.
Het project bestaat uit verschillende S&O-fasen:
1. Ontwikkelen van een scenario viewer en scenario editor
2. Integreren van live verkeersinformatie die inzichten (data) genereren voor optimale routing
3. Ontwikkelen van een dynamisch routesysteem
4. Ontwikkelen van een interface (api) om derde partijen aan te kunnen sluiten op het te ontwikkelen systeem. MaaS – Mobilty as a service betekent dat reizen niet meer gaat om wat je bezit – fiets, auto, ov-kaart etc-, maar dat je zo efficiënt mogelijk van A naar B komt. Het idee is dat voor een reis allerlei open vervoersvormen gecombineerd worden – Auto, deelauto, OV, deelfiets, taxi, watertaxi, ‘ridesharing’, etc. MaaS wordt door het ministerie van Infrastructuur en Waterstaat gezien als een van de oplossingen voor het mobiliteitsproblematiek die Nederland momenteel kent. MQD BV (Moqod) ontwikkelt een applicatie en back-end systeem om dit te kunnen bewerkstelligen. Het betreft een van de eerste in zijn soort in Nederland. Het gaat om het ontwikkelen van een compleet nieuwe mobiele app voor ios en android en een back-end, waarmee gepland, geboekt, betaalt, en ook daadwerkelijk gereisd kan worden. op combineren van het zeer gediversifieerde landschap van vervoerders en planningsmogelijkheden waarbij datacomplicaties en onjuiste informatie knelpunten vormen. Sluitende vervoersplanning is essentieel voor MaaS. Dit vereist technische integratie van locatie vertrekpunt, eindpunt en tussenpunten (bv. stations). Dit dient naadloos en te allen tijde sluitend te zijn. Technisch nieuw is advies o.b.v. het weer. (bv. bij slecht weer taxi i.p.v. OV-fiets). Het als fullservice samenbrengen van meerdere vervoersmodaliteiten en factoren voor MaaS is niet eerder gedaan.  IT in de bouwsector loopt erg achter. Huidige toegepaste rekenmethodes bij bouwkundige en bouwfysische ingenieursbureaus zijn verouderd en sluiten in de softwarekern niet goed aan op moderne IT capaciteiten en rekenkracht. Huidige rekenmethodes worden gekenmerkt door veel tijdrovende manuele input van de gebruiker in modellen, terwijl de eigenlijke computatie kort is. Resultaat is dat het gehele rekenproces traag verloopt door deze suboptimale inrichting van software. Ook zijn tools veelal globaal van aard waardoor zij slechts een type berekening kunnen maken(bijv. daglicht, ventilatie, brandveiligheid, constructie, etc.). Dit project behelst ontwikkeling softwarematig product dat bestaande fysische berekeningen (natuurwetten) en bestaande bouwkundige toetsen (bijv. bouwbesluit/ normeringen en codes) in één software tegelijkertijd berekend kunnen worden. Aangevuld met directe 3D representatie van de uitkomst. Dit biedt architecten de mogelijkheid gelijktijdig meerdere fysische aspecten (zwaartekracht, temperatuur, wind, vochtigheid, brand, volumes ,oppervlaktes, etc.) in een ontwerp te berekenen. Functionaliteiten: Integrale berekeningen die meerdere technische aspecten in één keer en onderling gerelateerd kunnen toepassen Realtime feedback van elke verandering in het 3D model Snelle visualisatie resultaten met complexe materialen incl. virtual reality Snel en adequaat toetsen ontwerp-alternatieven o.b.v. realtime visualisatie  Verschillende wegbeheerders (Rijkswaterstaat, Provincies en gemeenten) maken gebruik van regelscenario’s om het verkeer op het wegennet te managen. Scenwise wil nu de wegverkeersleider actief kunnen adviseren over de gewenste en meest optimale verkeersmanagementmaatregelen. Doel van dit project is: 1. Gebruik van real-time verkeersdata om de knelpunten op het wegennet te detecteren; 2. Door de toestanden op de weg te vergelijken met de inschakelvoorwaarden van de regelscenario’s kan de ScenarioVerkenner straks bepalen welke verkeersmanagementmaatregelen ingezet kunnen worden om de doorstroming op de weg te verbeteren. Het ontsluiten en combineren van verschillende databronnen is nodig om een compleet beeld van de actuele verkeerstoestand te verkrijgen. Snelheden, intensiteiten & reistijden zijn de belangrijke parameters om de verkeerstoestand te bepalen. Hiervoor gebruiken we de NDW datafeed welke meer dan 50.000 meetlocaties (telpunten) en 10.000 reistijdvakken bevat. NDW levert snelheden, intensiteiten en reistijden afhankelijk van de locaties op het wegennet. Floating Car Data (bijv. TomTom data en Google data) hebben een grotere dekking maar bevat geen intensiteiten. Bronnen correleren daarmee niet en daarbij is de kwaliteit van de data vaak onvoldoende of niet up-to-date.  Scenwise BV ontwikkelt een live traffic viewer onder de naam ‘Smart Roads’ om wegverkeersleiders pro-actief kunnen adviseren over de gewenste en meest optimale verkeersmanagementmaatregelen obv realtime verkeersdata en analyse-algoritmen. Hiervoor ontwikkelen we een realtime triggerbased alarmeringssysteem van verkeersinfarcten, onveilige situaties en verbeteren van de verkeersdoorstroming bij event-based verkeerspieken zoals voetbalwedstrijden/ concerten in stadions, wegwerkzaamheden, e.d. Componenten: - Realtime trigger-based notificatiesysteem - Live grafieken en doorstroomindicatoren (verkeersintensiteit, vertragingen) - Datalogging en traffic-tracking + analyse Het algoritme moet realtime beschikken over de volledige configuratie van het wegennet (bijv. locaties van wegversmallingen/-verbreidingen, afsplitsing/samenvoeging, kruispunt-configuraties, etc. In de opendata van NDW zijn echter alleen de configuraties van snelwegen beschikbaar, configuratie van kruispunten en provinciale wegen zijn niet via opendata te ontsluiten. Functioneel probleem is dat er frequent verkeerskundige situaties/ uitzonderlijke configuraties op het wegennet voorkomen die data-technisch op ongevallen lijken en tot valse alarmen leiden, risico: onbetrouwbaar detectiesysteem. Doel is het reatime verwerken, controleren en valideren van verkeerssnelheidsdata, verkeers-intensiteiten & reistijden uit verschillende databronnen om de acute momentane verkeerstoestand te bepalen, zonder valse alarmen.  Dit project heeft als doel een samenwerkend onderwijs platform te realiseren waarin er samengewerkt kan worden aan projecten, ook al wordt ter gestudeerd op verschillende scholen en niveaus. Je kan updates, reflecties en agendapunten in een project plaatsen. Deze worden ingedeeld volgens deze stappen in het proces; Observeren, Analyseren, Realiseren en Testen. Dit zorgt ervoor dat je multidisciplinair kan samenwerken, overzicht houdt en goed kan communiceren naar externen wie waar mee bezig is. Het centrale component van het systeem zal de content module worden. Deze moet zeer flexibel worden opgezet voor de verschillende types content: denk hierbij aan tekst, foto, video, datavisualisaties, tabellen, etc. Vervolgens bestaan er een groot aantal many-to-many en Polymorphic relaties voor deze content. Zo kan een foto behoren tot een geschreven reflectie over een workshop, onderdeel zijn van het persoonlijke portfolio van een gebruiker en ergens anders op het platform door een andere gebruiker gebruikt worden als promotiemateriaal in een blogpost. Al deze content moet veilig worden opgeslagen, waarbij ook de rechten van wie welke content in mag zien moet worden gecontroleerd. De content module bevat relaties die niet eenvoudig op te slaan zijn in conventionele databases. Hiervoor zal onderzoek moeten worden gedaan wat de beste architectuur is om het systeem mee te ontwikkelen. De blokkade hier betekent dat ondanks de beste keus voor de architectuur deze nog steeds niet afdoende kan zijn. Hierdoor zal een softwarematige oplossing geschreven moeten worden om de relaties die niet eenvoudig in de database vast kunnen worden gelegd toch te kunnen opslaan.  Goed Wijzer is een klokkijkles voor kinderen in de leeftijdscategorie 7-9 jaar in het basisonderwijs. Goed Wijzer biedt leerlingen de mogelijkheid om zelfstandig te leren binnen het klaslokaal, gebruik makend van nieuwe technologieën en embodied learning. Goed Wijzer bestaat uit een tablet applicatie die bestuurd wordt door de fysieke Goed Wijzer klok en hulpstukken. Het doel van Goed Wijzer is niet dat het een opzichzelfstaand product blijft, maar de basis vormt van een (toekomstige) productlijn. Deze (toekomstige) producten zullen samen een systeem vormen waarmee leerkracht en leerling interactief, op hun eigen manier en op hun eigen tempo gemotiveerd kunnen leren. Elk product zal zich toespitsen op een specifiek onderwerp en wederom bestaan tussen fysieke en digitale elementen. Veel van de producten uit de te ontwikkelen productlijn delen functionaliteit: (draadloze) communicatie met een ander apparaat (denk aan iPad of laptop), eigen stroomvoorziening (batterij en dus oplaadmodule), etc. Veel van de producten uit de te ontwikkelen productlijn delen functionaliteit: (draadloze) communicatie met een ander apparaat (denk aan iPad of laptop), eigen stroomvoorziening (batterij en dus oplaadmodule), etc. We ontwikkelen daarom een component dat al deze functionaliteiten op zich neemt. Daarnaast wordt een component ontwikkeld dat onderdeel wordt van elk product van de leerlijn en communiceert met het gemeenschappelijke component.  Loep is een design thinking toolkit ontwikkeld om het ontwikkelen van 21e-eeuwse vaardigheden te stimuleren en docenten te helpen deze vaardigheden te integreren in hun bestaande lessen. De toolkit bestaat uit een online platform en een fysieke set van houten tokens. Elke token beschrijft een processtap of activiteit binnen het ontwerpproces en bevat een naam en afbeelding. Deze tokens kunnen worden gescant met smartphone of computer waarna op het bijbehorende platform informatie over deze token kan worden getoond. Momenteel werkt deze scan op basis van OCR (tekstherkenning) op de foto. De toolkit wordt echter momenteel ook aangeboden in het Engels en dit levert problemen op voor de huidige scanmethode. Daarnaast is de OCR relatief foutgevoelig en is het foutpercentage voor ons op dit moment nog te hoog. We willen daarom een nieuwe scanmethode ontwikkelen die niet meer afhankelijk is van taal en ook kan worden ingezet voor toekomstige producten. FUNCTIONALITEIT De gebruiker maakt een foto van de token en het systeem stuurt deze naar onze backend ter verwerking. De component zal de huidige backend dus vervangen, voor de gebruiker is er geen verschil. Het doel is de nieuwe scanmethode op basis van Machine Learning en Neural Networks te programmeren. Dit is een relatief nieuwe technologie waarbij er niet een algoritme wordt ontwikkeld dat door een computer precies wordt uitgevoerd, maar waarbij er een model gegenereerd wordt aan de hand van voorbeelden dat zichzelf vervolgens aanleert om dit gedrag na te bootsen. Hierdoor zal veel tijd gestoken worden in onderzoek naar de technologie en het opzetten van een programmeeromgeving. Het creëren van een neuraal netwerk gebeurt door het bouwen van een model dat genoeg voorbeelddata heeft om vervolgens op basis van nieuwe data (foto) een classificatie aan deze data te koppelen. Dit wordt trainen genoemd. De oplossing bestaat dan ook programmatuur om dit model op te bouwen en te trainen aan de hand van voorbeelddata.  Klik is een online platform dat wordt ontwikkeld in samenwerking met Context&Co. Klik heeft als doel het scholen mogelijk te maken verbinding te leggen met bedrijven of experts in de omgeving van hun school door gebruik te maken van het netwerk rondom school. Samen met scholen vullen we KliK met expertises en passies van ouders, bedrijven en het schoolteam. Hiermee creëren we contextrijk leren en halen de buitenwereld de school binnen. De leerlingen vullen samen met de ouders de database met beroepen, opleidingen, ervaringen en mogelijkheden in tijd en capaciteit. Hiervoor ontwerpen wij een gebruikersvriendelijke vragenlijst. Daarnaast begeleiden wij het inzetten van KliK binnen het schoolteam en inspireren wij over de mogelijkheden voor leerkrachten en leerlingen. KliK is een zeer toegankelijke zoekmachine in een afgesloten digitale omgeving. De verschillende doelgroepen die met KliK werken (ouders, leerlingen en schoolteam), doen dat dan ook allemaal in hun eigen omgeving. We richten deze verschillende digitale omgevingen in naar de specifieke wensen van de school voor een optimaal gebruikersgemak. Naast de eigen digitale database is er een KliK platform en Klik community waarop we alle informatie, mogelijkheden en toepassingen delen met alle aangesloten scholen. Hierdoor kunnen gebruikers van elkaar leren en met elkaar delen. FUNCTIONALITEIT 1. Vanwege de schaalbaarheid van het platform moet het systeem worden ontwikkeld voor installatie: het is niet haalbaar om voor elke klant /school een eigen installatie op te tuigen. Dit betekent dat het platform dus ook gedeelde database heeft waar alle gegevens van alle klanten en scholen in opgeslagen worden. Uiteraard is sommige van de opgeslagen informatie gevoelig en moet dit veilig worden opgeslagen zonder dat er data naar andere klanten lekt. Dit moet worden opgelost door het programmeren van een goede toegangscontrole module die op een diep niveau in de applicatie verweven zit. Deze module moet voor elke actie op het platform nagaan of de actie uitgevoerd mag worden. Dit hangt naast de organisatie waar de gebruiker toe behoort daarnaast ook nog af van de specifieke rol die een gebruiker heeft: leerling, ouder en docent hebben alle toegang tot verschillende informatietypes. Dit maakt het waarborgen van de veiligheid complex. 2. Een ander knelpunt is de zoekmachine van Klik waarbij rekening moet worden gehouden met wie toegang tot welke data heeft. Hiervoor zal duseen oplossing geprogrammeerd moeten worden. Het eerst opvragen van de resultaten en vervolgens voor elk van deze resultaten een check doen of het item wel bekeken mag worden door de gebruiker is vanwege de voorziene grootte van de database niet efficiënt en legt een te zware belasting op het systeem.  Faqta is een online webapplicatie waarin kinderen met behulp van video’s en online lesmateriaal kunnen leren. In opdracht van Faqta hebben wij de ontwikkeling van zowel de Frontend als de Backend overgenomen. Over Faqta: “Faqta sluit aan bij de belevingswereld van kinderen die opgroeien in een digitale tijd. Wij leren ze spelenderwijs de wereld te ontdekken en digitaal vaardig te worden.Hoe? Met een spannende rijke digitale leeromgeving waarin beleving centraal staat. De wereld te laten zien met informatieve en bijzondere video’s. Een activerende didactiek met veel onderzoeken en creatieve opdrachten. Faqta heeft een thematische opbouw, waarbij alle thema’s vanuit samenhang zijn ontwikkeld. Faqta vult de kerndoelen in van Aardrijkskunde (inclusief Topografie), Geschiedenis en Natuur & Techniek. Er is daarnaast specifiek aandacht voor Kunst & Cultuur, Wetenschap, Burgerschap en Sociale Wereldoriëntatie in een schoolbrede opzet.” Faqta is ontwikkeld op basis van de MEAN stack: Mongo, Express, Angular en Node. Het betreft een Angular frontend in combinatie met een Node JS API als backend. Deze backend haalt zijn data uit een Mongo database. We starten met een totale refactor van de huidige programmatuur. Met deze refactor zal de oude Angular applicatie worden herschreven naar een Angular of React applicatie. Hierbij zal ook worden afgestapt van Coffeescript en gewoon in Javascript worden geprogrammeerd. FUNCTIONALITEITEN: 1. De huidige database is een Mongo database die niet-relationele data opslaat. Dit type databases kennen geen vaste structuur maar slaan hun data op in flexibele, JSON achtige documenten. Hierdoor is er geen ondersteuning voor zogenoemde migrations, operaties waarbij de indeling van de database wordt gewijzigd. Aangezien de indeling van de database tijdens de refactor op de schop gaat hebben we moeten we ondersteuning voor deze migrations zelf ontwikkelen zodat we zeker kunnen zijn dat er geen data verloren gaat. 2. Faqta wordt door leerlingen niet alleen maar gebruikt om leerstof tot zich te nemen maar ook om voor elk onderwerp op een interactieve manier vragen te beantwoorden en toetsen te maken. Hierbij worden bijna alle handelingen van leerlingen opgeslagen zodat achteraf een duidelijk beeld van de groei van de leerling gegeneerd kan worden. De docent wil bijvoorbeeld kunnen zien of een leerling de vragen van een opdracht in keer goed beantwoord, of hier altijd een extra tip voor nodig heeft. Al deze handelingen worden opgeslagen in een Big Query database van Google die gespecialiseerd is in het opslaan van zulke hoeveelheden data. Op het moment van opvragen wil de docent echter graag een overzicht zien van een klas (30 leerlingen) die allemaal met een bepaald onderwerp bezig zijn (meerdere hoofdstukken met meerdere vragen). Dit is enorm veel informatie die dan verwerkt moet worden om tot dit overzicht te komen en moet snel beschikbaar zijn.  Studio Tast ontwikkeld in dit project een digitaal platform ‘Plenda’. Plenda is innovatief systeem o.b.v. een papieren (school)agenda waarin leerlingen hun huiswerk noteren én plannen. Plenda is ontstaan vanuit het besef dat veel kinderen kampen met planningsproblemen door informatie-overload, of door ADD, ADHD, autisme of concentratieproblemen. In dit project ontwikkelen we een nieuw digitaal, online beschikbaar, platform waarin de offline (papieren) methode gedigitaliseerd wordt met toegankelijke interfaces, lay-out, flows en stappenplannen. Uitdaging is het online platform dezelfde ervaring te laten geven als de offline methode. Doel & functionaliteit Ontwikkeling van een digitaal platform o.b.v. PHP, en het Laravel framework waarin leerlingen persoonlijke data, roosterdata, huiswerkgegevens via een interface automatisch kunnen invoeren met datacommunicatie tussen de persoonlijke omgeving (dashboard) en schoolsystemen. Uitdaging is de hoeveelheid te verwerken data i.c.m. controle, validatie en performance. Voor een gemiddelde school (1500 leerlingen) met lesuren per dag geeft dit al snel 2,5 miljoen entries bij 42 lesweken. Met 10+ scholen en meerdere jaren aan historische data verwerken we 100+ miljoen entries. Hiervoor ontwikkelen we een technisch nieuwe module voor dataverwerking en opslag een dergelijke dataload mogelijk te maken (meerder scholen). Goed Idee Media (GIM) specialiseert zich in de ontwikkeling van online beheeromgevingen: web front-end, back-end en hosting als full-service
provider.
Binnen een in BubbleCMS eigen ontwikkelde omgeving faciliteert GIM dat klanten onder meerdere labels en subdomeinen producten online kunnen
etaleren. De verschillende, door GIM ontwikkelde, domeinen hebben allen een eigen website, domeinnaam en webcomponenten terwijl er in feite
slechts 1 bron is. De subdomeinen kunnen niet vanuit een bron beheert worden. Hiervoor willen wij een 'Multiple Design ‘System' ontwikkelen
waardoor actualisatie en beheer van meerdere labels binnen BubbleCMS mogelijk is.
Doel:
- Ontwikkeling van datalayer tussen eigen ontwikkelde websites/subsdomeinen, aangestuurd vanuit een bron (de beheeromgeving)
- Een set verschillende uniforme schakelbare webcomponenten
- Individuele styling (design), en instellingen per label
- Database met front-end waarin gebruikers data kunnen invoeren en aan (sub)domeinen kunnen koppelen (configureren/inrichten database is geen
onderdeel van deze S&O-aanvraag).
Op deze wijze wordt het mogelijk dat meerdere subdomeinen centraal beheert kunnen worden vanuit een databron (bijv. een auto als “product tile” te
presenteren, met titel, afbeelding, prijs en levertijd, gestyled naar de eigen huisstijl en instellingen.Goed Idee Media (GIM) specialiseert zich in de ontwikkeling van online beheeromgevingen: web front-end, back-end en hosting als full-service provider. 

(sub)domeinen in en in BubbleCMS eigen ontwikkelde omgeving zijn volledig op zichzelf staand en niet onderling compatible waarbij vanuit een bron meerdere domeinen ontworpen, beheert en aangepast kunnen worden. In project GIM 2018-01 wordt de beheeromgeving ontwikkeld. Dit project heeft betrekking op een uniform design systeem welke gekoppeld kan worden aan domeinnamen.

Doel:
De klant moet per domeinnaam bepaalde basisgegevens kunnen instellen, zoals contact info en logo’s. Op basis van deze gegevens hebben, kan vervolgens eenvoudig deze data aan het juiste domeinnaam uit die database geport worden, om ze de juiste pagina samen te stellen voor de bezoeker. Goed Idee Media (GIM) specialiseert zich in de ontwikkeling van online beheeromgevingen: web front-end, back-end en hosting als full-service provider. In dit project willen we een nieuwe softwarecomponent ontwikkelen waarmee grote hoeveelheden productdata uit een XML-feed (in dit geval (import)auto’s) als directe inputdata automatisch te verwerken en in en een front-end te presenteren aan potentiele afnemers. Hiervoor ontwikkelen we een nieuwe softwaremodule (PHP) om XML-data om te zetten van een platte naar dynamische dataset welk geschikt is voor verdere verwerking in onze eigen beheeromgeving en daarbuiten. Doel is het realiseren van een XML-data ‘omvormer’ naar dynamische online presentatie van platte data.  Goed Idee Media (GIM) specialiseert zich in de ontwikkeling van online beheeromgevingen: web front-end, back-end en hosting als full-service provider. Binnen de in-en verkoopkanalen van auto’s is er een voorraadbeheer datasysteem (XML-based) welke partijen naar ‘eigen’ websites, platforms en portalen kunnen extracten/ gepusht krijgen zodra het datasysteem wordt toegevoegd, gewijzigd of verwijderd. GIM heeft hiervoor een eigen systeem ontwikkeld (PHP) om de XML-data te ontvangen en te verwerken in een SQL-database welke via een API uitleesbaar is om de data online te presenteren (website/ database). Dit systeem is in de broncode niet schaalbaar en aanpasbaar naar specifiek klantwensen Dit gebeurt nu handmatig en middels (gedeeltelijke) kopieën van de codebase naar klantwens. Dit is traag en foutgevoelig. Daarom wil GIM dit systeem herontwerpen naar een Docker Container systeem waarin alle benodigde onderdelen (PHP, Apache, SQL) modulair in dit systeem uit te voeren zijn. Componenten: Een Docker Container systeem waarin alle benodigde onderdelen (PHP, Apache, SQL) modulair in dit systeem executabel zijn. Automatisch doorsturen en opslaan userdata naar de juiste partijen i.p.v. handmatig decision-making per site via een API-base. Integreren merk/model database t.b.v. search engine welke automatisch datacombinaties onthoudt en presenteert bij new entries die eerder voorkwamen met GraphQL ouput mogelijkheid. Aanvrager wil zijn huidige applicatie, Chainwise, een ontwikkelde applicatie
uit eerdere aanvragen, doorontwikkelen naar een nieuwe applicatie. De nieuwe
applicatie, myChainWise, wordt in tegenstelling tot huidige applicatie
aangeboden als een SaaS. Hierdoor wordt de applicatie ook interessant voor
kleine bedrijven. Dit zorgt echter wel voor de nodige technische knelpunten.
DOEL
In de eerste fase is het de bedoeling om een draaiend prototype te bouwen. De
basis functionaliteit die in deze fase gebouwd zal worden, zal een uitgeklede
CRM versie van de CRM functionaliteit zijn zoals die in de huidige ChainWise
applicatie draait. Naast het ontwikkelen van de functionaliteit zal verder
rekening gehouden moeten worden met de integratie van Bitshop.Aanvrager is van plan om een applicatie te ontwikkelen die op grafische wijze
verbanden tussen verschillende soorten data kan weergeven. Idee is op basis van
uurregistratie en geleverd werk, inzicht te geven in werkbelasting, kosten en
relaties. Hierdoor ontstaat een snel overzicht van alle verrichtingen binnen en
buiten een organisatie.
DOEL
Dit wil men bereiken door op basis van telefonie en andere communicatie vormen
, CDR records toe te wijzen aan welke individuen, organisaties en afdelingen
met elkaar in contact staan. Hierdoor moet berekend en inzichtelijk worden:
handelingstijd, kosten tijd (lk) en relatie klant-marge, belasting klant-marge,
kosten interne communicatie en interne belasting, externe belasting (mobiel).
Door een koppeling van deze databases worden correlaties zichtbaar en door
realtime vergelijking van CDR wordt tijdsbesteding inzichtelijk. De volgende
databases zullen gecombineerd worden: CDR vaste tel, CDR mobiel, HRM
Loonkosten, Omzet per Klant, Email communicatie.
Dit wordt daarna op grafische wijze gerepresenteerdMet de subscription functionaliteit moeten gebruikers de mogelijkheid hebben
zich in te kunnen schrijven om de myChainWise applicatie te gebruiken.
Het proces van de subscription model ziet alsvolgt uit:
- Gebruiker meldt zich via internet aan bij ChainWise
- Gebruiker maakt keuze uit de modules.
- Gebruiker kiest een betalingstermijn uit. (Dit kan per maand of per jaar)
- Gebruiker accepteert de voorwaarden en voert de betaling uit.
- Toegang voor gebruiker wordt aangemaakt met daarbij de modules aangekoppeld.
- Gebruiker ontvangt toegang en kan gebruik maken van de applicatie.Aanvrager wil een component ontwikkelen voor op eenvoudige wijze genereren van
word templates, dit ten behoeve van haar My Chainwise platform.
In de praktijk blijkt het voor veel gebruikers te complex om met .dot en .rtf
bestanden te werken, aanvrager wil om dit op te lossen een component
ontwikkelen dat op basis van doc (of .docx) files templates kan genereren.
Dit component moet vanuit een cloudomgeving werken aangezien veel gebruikers
aan de client-zijde geen word meer hebben en moet dus onafhankelijk te
gebruiken zijn.Aanvrager wil ten behoeven van een van haar relaties in de telecomsector een
component voor het managen van mobiele telefoniecontracten ontwikkelen:
Contracthouders willen ontzorgd worden met betrekking tot afhandeling,
verlenging, nummerbehoud en providerclaims. Dit vergt een enorme inspanning van
aanbieders die haar klanten bedienen en afspraken hebben met telecomproviders.
Het systeem moet signaleren, initiëren en afhandelen zonder dat hierbij continu
interactie met medewerkers en klant voor nodig is.De meeste applicaties sturen alleen een mail als iets fout is gegaan, maar een
aantal acties zijn zo kritiek, dat er dagelijks updates van gestuurd worden
(ook als het goed gaat).
Voor sommige klanten is dit zo veel geworden dat er wel 100 mails per weekend
klaar staan die handmatig moeten worden nagelopen.
Aanvrager wil voor het zelf ontwikkelde mailprogramma een component ontwikkelen
om foutverwerking van monitoringsmails te ondervangen. Mails moeten
gecontroleerd worden op fouten en worden ook gebruikt om te signaleren dat een
bepaalde mail niet verstuurd is (error tijdens uitvoeren).
Uitgangspunt:
- alleen mail versturen als er daadwerkelijk iets niet goed is gegaan (betere
errorafhandeling in scripts, tools / koppelingen)
- bepalen of gebruiker wel degene is die de (error)mail moet ontvangen.
Op de server lopen scripts die bepaalde acties uitvoeren. Bijvoorbeeld scripts
die via een koppeling verzuimgegevens inlezen.
De software die we gaan schrijven doet 2 dingen:
• Loggen van zaken op een andere plek
• Nalopen van de logbestanden om een alarm te sturen via email
• Op een paar plaatsen tonen dat er wellicht iets is misgegaan.ChainWise is ontwikkeld door de aanvrager in Classic ASP deze taal is echter
sterk aan het verouderen. ChainWise dient dan ook te worden overgezet naar c#
.NET. Het simpelweg herontwikkelen van het hele pakket dat kan niet daarvoor is
het veel te groot. Wanneer de talen door elkaar gebruikt kunnen worden kan de
aanvrager fasegewijs over. Probleem is dat de talen niet samengaan dit wil de
aanvrager oplossen middels dit project.
DOEL
Het mogelijk maken om programmeertalen te mixen in 1 applicatie. Allereerst
voor eigen toepassing maar wellicht secundair als product in de markt.Bij de implementatie van en bij het gebruik van ChainWise wordt er vaak
klantdata uitgewisseld. Dit gebeurt onveilig.
Binnen dit project wil Chainwise een security module realiseren zodat deze
gewaarborgd kan worden op een hoog niveau.
DOEL
Vanuit ChainWise moet men encrypted informatie, bestanden kunnen mailen naar
relaties. Vanuit ChainWise moet je relaties uit kunnen nodigen om encrypted
informatie, bestanden naar ChainWise te sturen.Het plannen van cursussen in chainwise is het vastleggen van locatie, docenten,
cursisten, middelen en inkoop. Dit is nu allemaal handwerk en vergt veel tijd
en precisie van de planner. Bij het verzetten van een cursus naar een andere
dag dan dient ook alles mee te gaan naar die nieuwe dag. Alle gemaakte
afspraken dienen dan handmatig te worden stopgezet en handmatig opnieuw in gang
te worden gezet.
Doel van het project is gebruikersvriendelijk en eenvoudig cursussen kunnen
plannen en de docenten, cursisten, middelen en inkoop hierbij opvoeren.ChainWise is ontwikkeld door de aanvrager in Classic ASP deze taal is echter sterk aan het verouderen. Chainwise dient te worden ontwikkeld in
moderne programmeertalen, omdat er steeds minder ontwikkelaars zijn die de huidige taal “Classic ASP” beheersen. Ook dient de database op een
aantal plaatsen opnieuw ontworpen te worden. We willen het mogelijk maken dat nieuwe functionaliteiten van Chainwise ontwikkeld kunnen worden in
moderne programmeertalen terwijl de bestaande functionaliteit behouden blijft. Een nieuwe feature moet op een bestaande classic asp pagina kunnen
draaien met de bestaande businessrules correct geïmplementeerd.
Er worden microservices ontwikkeld om gefaseerd functionaliteit te kunnen omzetten. Op bestaande pagina’s schrijven we de classic asp code om,
zodat deze gebruik kan maken van de microservices. Op nieuwe pagina’s roepen we deze pagina’s aan met een Javascript platform zoals Angular.
Deze applicaties met bijbehorende talen en omgevingen ‘praten’ niet met elkaar wat conflicten oplevert.ChainWise krijgt vaak verzoeken om een koppeling te maken met externe partijen. Zo een koppeling is dan altijd maatwerk en derhalve duur. Wij
worden belemmerd bij uitbreidingen van ons eigen ontwikkelde pakket omdat wij rekening moeten houden met deze maatwerkoplossingen. We zijn
voornemens om een generieke slimme connector te programmeren die ondanks de diversiteit aan modules voor een ieder te gebruiken is. ChainWise
software is een erg breed pakket met als hoofmodules crm -> offertes -> projecten -> cursusplanning -> abonnementen planning -> contractbeer ->
facturatie -> management data. Onder al deze hoofdonderwerpen hangen weer diverse subpagina’s met informatie. De inrichting is per klant weer
verschillen. Klanten kunnen ook zelf velden toevoegen aan ChainWise. De informatie dient snel, veilig en geanonimiseerd aangeboden te worden aan
de ontvangen partij.In de chainwise module “Cursusplanner” kan men cursussen aanmaken en cursisten inschrijven. Communicatie vanuit de cursusplanner gaat naar
cursist of contactpersoon of moederorganisatie of dochter of een combinatie zonder dat de communicatielijn naar cursist(en) inzichtelijk is. Daarbij is
er grote variatie in rechten en autorisaties van gebruikers (beperkte data toegang). Kortom het is absoluut niet eenduidig wat wanneer, hoe en
waarom wordt gecommuniceerd en is het leveren van support erg complex omdat de supporter niet kan zien welke gegevens gebruikers wel/niet
kunnen/mogen zien en welke communicatie er reeds geweest is. Dit willen we nu ondervangen door een mogelijkheid te ontwikkelen om als een ander
in te loggen met behoud van de rechten, rollen en autorisaties van de ander.
Doel & functionaliteiten
Ontwikkeling van een nieuwe module/functionaliteit die alle aan de cursist hangende communicatiestromen ordent, analyseert, en centraal opslaat om
deze eenduidig te kunnen presenteren aan gebruikers. Componenten en functionaliteiten:
• Berichtgeving/communicatiestromen-module
• Omzetting cursusafhankelijke naar klantafhankelijk sjablonen en vice versa.
• Organisatiecategorieën naar rol en hiërarchie van moeder dochterorganisaties
• Centrale correspondentieflow per gebruiker
• Correspondentie-middel en slabloon acces naar niveaus en rechten: mail, post of beide weergave portalen en historie bewaren
• Groeperingsmodule voor groeperen communicatie en sjablonen.Chainwise platform kent een veelheid aan (klant specifieke) settings, modules, instellingen en kenmerken. Vanwege deze semi-maatwerk software is
updaten van de diverse onderdelen complex en geen automatisch proces doordat de broncode per klant vaak gedeeltelijk verschillend is. Het resultaat
hiervan is dat wij per update van een klant ± 4 uur tijd nodig hebben om de klant specifieke code in kaart te brengen en up te daten. Elke klant krijgt
minimaal 1 update per jaar. Hierdoor zijn wij jaarlijks ruim 400 uur kwijt aan updates. Dit proces is erg kostbaar en zeer foutgevoelig. Wij willen het
klant specifieke updateproces automatiseren, rekening houdend met de bijkomende complexiteit van klant specifieke hardware/software inrichting.
Doel & functionaliteit
Doelstelling is automatiseren van custom made software van klanten waarbij de update procedure van chainwise versneld wordt d.m.v. 1 component
die als een installatie wizard de klantinrichting scant, de update-installatie uitvoert en daarna controleert.Chainwise platform heeft veel koppelingen en serverscripts draaien (VBS (visual basic script) .exe gemaakt in C#). Er is echter geen controlefunctie
die deze scripts ook daadwerkelijk volledig operationeel en foutloos zijn. Hiervoor gaan wen een uptime controler en verificatiemodule ontwikkelen die
kan signaleren of de koppeling (nog) actief is, diens functie controleert en of de scripts het oorspronkelijk doel bereiken dan wel obsoleet geworden
zijn.
Doel & functionaliteit
We ontwikkelen hiervoor de Alive Checker Monitoring tool. Deze tool dient bugs te herkennen en te signaleren of koppeling/script überhaupt gerund
heeft op het moment dat dit ook werd verwacht.Met de door ons ontwikkelde sjablonengenerator kunnen we server-side documenten genereren en deze automatisch vullen met informatie en data uit
verschillende samenvoegvelden binnen de ChainWise applicatie en vervolgens online opslaan. Voortkomend knelpunt is dat bij het muteren van online
toegankelijke documenten aan client-sides een lokale kopie wordt gemaakt welke vervolgens apart geüpload moet worden, en dus niet automatisch
synchroniseert met de server-side waardoor verschillende fouten in dataverwerking/ en in de data-actualisatie plaatvinden.
Het doel van dit project is om een nieuw eigen online versiebeheersysteem te ontwikkelen voor het online openen en realtime bewerken van
documenten met automatische datasynchronisatie tussen client- en server sides met de functionaliteiten:
1. Split editing: simultaan in twee versies (local/ client-side en server-side) muteren kunnen muteren van documenten en deze op een later tijdstip
mergen naar een bestand;
2. Change tracking & backup and restore: automatische opslag en syncing bestanden met versietracking, herstelmogelijkheden tussen files en source
tracking van wie wanneer bestanden muteert;
3. ‘Undo’ functionaliteit t.b.v. conflictloze datasyncing waarbij de nieuwste versies oudere versies kan verwerpen (simultane syncing errors) en restore
naar volledige voorgaande versies zonder tussenkomst van users. Aanvrager ontwikkelt software ter in- en extern beheer van orders, producten, inkoop en voorraaddata van bijv. webwinkels. Hiervoor is een eigen systeem ontwikkelend met o.b.v. een WMS (Warehouse Management Systeem). Door toename in de te verwerken data is het WMS onvoldoende stabiel om de continuïteit van het systeem te borgen met een service degradatie als gevolg. De huidige WMS, geholpen wordt door een ‘koppelingenplatform’ en een ‘klantportaal’, waarin data tussen het WMS en de klant uitgewisseld en gecached kan worden ter ontlasting van de WMS, zit aan de maximale capaciteit. In dit project willen aanvrager(s) een complete herbouw van het eigen ICT -systeem, waarbij het WMS enkel verantwoordelijk wordt voor de kerntaak, en alle Over-The-Top dienstverlening in beheer komt van het zelf te ontwikkelen platform die zowel de interne organisatie als klanten zal voorzien van informatie en sturingsmechanismen. Functionaliteiten Informatievoorziening voor in- en externe gebruikers volledig onafhankelijk van het WMS, waardoor in de toekomst een ander WMS "ingeplugd" kan worden Vegroot inzicht in verkoop-, inkoop- en voorraadbewegingen met ondersteuning aan inkoop- en prijsstrategische keuzes, prognoses en logistieke afhandeling. Systeem schaalbaarheid zodat deze kan voldoen aan de verwachte toename in te verwerken transacties, zonder een service degradatie plaatsvindt tijdens piekmomenten.  Le Vignaud BV gaat een innovatieve triage-platform ontwikkelen voor de arbomarkt. Traditioneel bevat een triage-protocol een deterministisch spreadsheetmodel o.b.v. Excel. Gevolg hiervan is dat de arbodiensten triageberekeningen uitvoeren o.b.v. standaard protocollen zonder variabiliteit in data, input uit andere bronnen en afwijkingen als gevolg van bijzondere situaties. Bestaande systemen sluiten niet goed aan op de recente medische ontwikkelingen als het gaat om verzuimbestrijding. Het gebruik van verouderde systemen leidt tot tot onnodige medicalisering en is kostenverhogend voor het verzuimproces. Het ontbreekt bestaande systemen aan variabiliteit en zijn daardoor ontoereikend. Le Vignaud gaat een technisch nieuw softwareplatform ontwikkelen om complexe triage-berekeningen, bestaande uit meerder variabelen en databronnen uit te voeren en inzichtelijk te maken. Doelstelling is een beheersbare softwaretool ontwikkelen waarmee een uitgebreide set aan scenarioberekeningen met de meest uiteenlopende variabelen mogelijk is. Op te zetten als neuraal netwerk waarbij voorspellingen o.b.v. data mogelijk wordt en tevens deze voorspellingen te valideren.  Enelogic leest voor vele klanten de slimme meter uit en presenteert deze gegevens op diverse manieren, waardoor energiegebruikers geholpen worden bij het besparen op hun energieverbruik. Hiervoor heeft Enelogic een eigen software-platform ontwikkeld. De broncode dateert uit 2011 en is verouderd. Ondersteuning voor security patches, dependencies en verouderde 3rde partij API’s wordt steeds lastiger en meer en meer concessies moeten gemaakt worden om de huidige systemen van Enelogic beschikbaar en veilig te houden. Hiervoor gaan we het online EL-platform (web-based app) en diens opnieuw in code schrijven. Hiervoor ontwikkelen we drie geheel nieuwe componenten: Speciale databaselayer voor data-import, tijdelijk ‘cachen’ en in batches wegschrijven in een centrale database van data uit meerdere bronnen Energie API: bi-directioneel datakoppeling tussen WCS en het nieuwe systeem met een plugin die de datastructuur van WCS kan overschrijven naar de nieuwe architectuur met ondersteuning voor single ‘subscriptions’ per gebouw. Notificatiemodule met centrale providerlijs waarmee multi-channel en provider onafhankelijke notificeren mogelijk wordt.  Met de introductie van AS4 en de uitfasering van AS2 voor de Wholesale Gas communicatie, gefaciliteerd door EDSN, dient de Wholesale Gas applicatie van SFU gekoppeld te aan ons eigen systeem. Uitfasering van het AS2 protocol is onvermijdelijk doordat dit het protocol is ingegeven door de Nederlandse overheid en EU waarbij alle gevoelige energie(data)communicatie moet voldoen aan bepaalde veiligheidsstandaarden. Ons huidige softwaresysteem is echter niet geschikt om te voldoen aan deze eisen. Hiervoor ontwikkelen we een nieuwe ‘message broker’ met dataverificatie welke SFU-gegevens koppelt aan de Wholesale Gas applicatie met een terugkoppeling vanuit de Wholesale Gas applicatie richting de nieuwe AS4 message broker.  Valori ontwikkelt in opdracht van werkgevers ‘Virtual Assets’ op diens interne netwerk(en) en software-omgeving. In dit project gaan we een nieuw, eigen softwareplatform ontwikkelen waarin meerdere Virtual Assets centraal beheerd kunnen worden als generieke oplossing. Geschikt voor o.a. netbeheerders, gemeenten, basisregistratie- en andere systemen welke in hun primaire proces gekoppeld zijn aan EDSN. Doel & functionaliteit Ontw. van ‘StubStore’: een generiek softwareplatform waar bedrijven hun eigen software ontwikkelproces op kunnen voorgeven, beheren en optimaliseren, onafhankelijk van marktregulerende of concurrerende bedrijven. We ontwikkelen aparte interfaces binnen het platform welke gebruikt worden om tussen bedrijven te communiceren en synchroniseren zonder EDSN verbinding. Hiermee bieden we oplossing aan de afhankelijkheid van een marktregulerende partij welke alleen tijdens gezette tijden (zeer beperkt) bereikbaar is voor software van leveranciers en software aanpassing. De oplossing is dermate generiek dat deze door alle organisaties gebruikt kan worden, maar dat men wel alle vrijheid heeft om te werken in een eigen afgeschermde omgeving waarbij men volledige (specifieke) controle heeft op systeemgedrag bij specifieke cases/ specifieke data. Resultaat is dat alle soorten data/ gedrag specifiek op zullen of kunnen treden en verwerkt kan worden.  Valori ontwikkelt maatwerk softwareoplossingen (m.n. in Java(script) en C#) welke uitvoerig getest worden alvorens implementatie. Dit doen we d.m.v. ‘automatisch testen’ wat doorgaans een technisch specialisme op zichzelf is, enkel uitvoerbaar door ervaren softwareontwikkelaars om resultaten te kunnen duiden en is daardoor erg tijdsintensief en kostbaar. Een investering welke veel organisaties niet over voor het automatiseren van tests. Gevolg is echter een suboptimaal werkend softwaresysteem. Hiervoor gaan we een nieuwe automatische testomgeving ‘JOSF’ ontwikkelen om de op ons eigen softwareplatform ontwikkelde maatwerk software componenten tijdseffectief en accuraat te testen. Doelstelling van het JOSF is de ontwikkeling van een automatic keyword-driven en object-driven test framework in Java/ Javascript (Typescript) waarmee gebruikers eenvoudig nieuwe testscripts kunnen schrijven voor het uitvoeren van automatische softwaretests. Dit betreft een translatie van (spreek)taal en niet-technische user input naar de technische backend (code/ scripts) van systemen om deze mee te testen. JOSF dient deze vertaalslag naar technologische ingewikkeldheden te maken zodanig dat niet technische/ onervaren testers vanuit een natuurlijke taal en op een script-loze manier testen kunnen inrichten, ontwerpen, uitvoeren en automatiseren.  Quooker installaties kennen veel verschillende technische/ hardware componenten waaronder sensoren, filters, flowmeters, druk-, temperatuur, en energiemanagementsystemen. De verschillende componenten sturen een continue, ongestructureerde datastroom uit van 100+ datapunten per seconde over de actuele staat van het systeem. Deze data is cruciaal voor effectief onderhoud van de systemen en het uitvoeren van over the air updates via bluetooth. In dit project ontwikkelen we een serviceplatform dat monteurs via specifiek onderhoudstablets in staat stelt op locatie ongestructureerde data te harmoniseren en te conversteren naar inzichtelijke data t.b.v. systeem/ componenten- onderhoud en software updates. Het gaat hierbij niet op het uitlezen van data maar om het volledig kunnen configureren, beheren en onderhouden van de installaties.  In dit project ontwikkelen een geheel nieuw online broker-platform waarop gebruikers op basis van real world voetbaldata onderling kunnen handelen met andere gebruikers en voetbalclubs in een diversiteit aan moduliteiten als een ‘beurs’ handelsomgeving. Hierin worden zeer grote hoeveelheden data realtime verwerkt ter omvang van miljoen gebruikers in uur op piekmomenten waarin per gebruiker meerdere acties, requests en responses gegenereerd, gecontroleerd en geanalyseerd moeten worden. Hiervoor ontwikkelen we een foutloze realtime datastroomafhandeling i.c.m. realtme analysemodule o.b.v. ML voor de gehele datapipeline.  Dit project betreft de ontwikkeling van een data-platform voor het ontsluiten van data- en sensorgegevens uit brandmeldkamers, rookmelders en vuur/rook detectiesysteem naar een centrale plaats. Het gaat om het ontsluiten van een ongestructureerde met vooraf onbekende afkomst/ interfaceherkenning van brandmelders data (o.a. van Schiphol, parkeergarages e.d.). Gezamenlijk is er een datastroom van 100+ berichten/sec. die verschillende systemen uitzenden. Hiervoor ontwikkelen we: Een centraal online platform waarin alle data geharmoniseerd en gestructureerd inzichtelijk wordt + herkenning van verschillende sensorsystemen en automatisch melding van fouten/ incidenten die de veiligheid van gebouwen in gevaar brengt. Data-analysemodel per systeem op afstand en uitleesbaar op locatie met foutopsporing t.b.v onderhoud van sensoren (a.g.v. vervuiling/ defecten). Het op locatie kunnen uitlezen van apparatuur a.d.h.v. de sensoren en meldkamerdata t.b.v. sensoren ‘onderhoudsbeurten’ en controle + testen van systemen. Koppeling met naar testmodus van de meldkamer/ centrale in de regelkamer Dit project betreft de ontwikkeling van een softwaresysteem dat o.b.v. verschillende databronnen automatisch werkopdrachten, facturatie en advies
kan geven op welke moment het beste transport van A naar B kan plaatsvinden door verhuizers. Hiervoor ontwikkelen we een nieuwe maatwerk
softwaresysteem om bedrijfsprocessen en planningen via applicaties onafhankelijk van bestaande koppelingen en systemen te kunnen laten
functioneren.
Functionaliteiten:
1. Automatische locatiebepaling te verhuizen inventaris o.b.v. foto’s middels objectherkenning met verificatie ERP inventarislijsten;
2. Bepaling meest optimale reisroute en tijdstip transport a.d.h.v. beschikbaarheid wagens, lengte vrachtwagens, gecorreleerd aan lokale parkeerplek
van locaties A en B, beschikbaar personeel, loopafstand parkeren en bestemming e.d.;
3. Integratie werkopdracht, facturatie en inventaris met ERP systemen klantomgeving.
Technische blokkade is het foutloos detecteren van objecten in een ruimte ter automatische bepaling van inventarislijsten welke gekoppeld dient te
worden via voor ons onbekende ERP systemen/ interfacing met borging van altijd offline beschikbaarheid data (werklocatie) voor alle partijen.Dit project betreft de ontwikkeling van modern online platform waarop gebruikers verschillende reisproducten (GVB, NS, NS business, stad/streek
vervoer, e.d.) samen worden gevoegd tot 1 reisproduct om zo klanten van dat platform te ontzorgen. Doel is een systeem waarin gebruikers in een
portaal alle zaken rond openbaar vervoer kunnen regelen.
Componenten:
1. Aanvragen, traceren en beheren van alle vormen van reisproducten in een portaal;
2. Automatische rittenregistratie en administratie op een plek met een factuurkoppeling vanuit alle verschillende vervoersaanbieders naar een
gecombineerde factuur met directe splitsing van privé/ zakelijke reizen en declaratie bij werkgevers.
Technische uitdaging is het ontwikkelen van een slim registratieproces op een locatie (lees: integratie diverse systemen van vervoerders) i.c.m.
automatisch inlezen van reizen, splitsing zakelijk/ privé, en facturatie in een systeem. Hierbij moeten we tevens rekening houden met diverse eisen
m.b.t. de AVG en performance wegens het hoge aantal gebruikers.EZVR is een, door aanvrager (hierna EZVR) ontwikkeld webbased virtual-reality-platform. Met het platform kunnen gebruikers virtual-reality-tours makendie ze vervolgens eenvoudig publiceren voor iedere apparaat (computer, tablets, smartphones, VR headsets). Om ons ook in de toekomst te onderscheiden van buitenlandse concurrenten wil men toe naar een stapsgewijze geautomatiseerd en intelligent platform. Doelstelling van de ontwikkeling van het platform is het integreren van tekstinvoer met virtual-reality-weergave (a), live besturing van virtuele tours door bijvoorbeeld presentatoren (b), en de doorontwikkeling naar een open source framework AFRAME (c). (a) Ontwikkelen en integreren van tekst(toelichting) in virtual reality (b) Ontwikkelen en integreren van een generieke live-functionaliteit (voor alle browsers toepasbaar) die ervoor zorgt dat één persoon de virtuele rondleiding ‘bestuurt’, dus bepaalt naar welke locaties de groep geleid wordt. Tenslotte willen we geen afhankelijkheid van een commercieel framework (krpano). We willen ons platform zo toegankelijk mogelijk houden, dus ook voor apparaten met minder snelle professoren en Open Source Framework biedt meer mogelijkheden voor developers. Binnen deze S&O-aanvraag is deze doorontwikkeling (c) geen onderdeel van de aanvraag en
uren.Doel is om een oplossing te bieden die bedrijfsprocessen in de tuinbouw efficiënter maken m.b.v. beschikbare data. We ontwikkelen een platform voor
onze klanten dat data importeert uit verschillende in -en externe databronnen teneinde continue analytische oplossingen, welke variëren van
dashboards die klanten helpt betere beslissingen te maken tot zelflerende algoritmen die processen volledig aansturen, en oplossingen met
combinaties van menselijke beslissingen en automatisering.
Hiervoor ontwikkelen we de volgende componenten:
1. Datavisualisatie en generieke dashboarding tools, al naar gelang klantkeuze, beschikbaar via de cloud en direct gekoppeld met de (No)SQLdatabase
t.b.v. data-inzage.
2. Data-pipeline framework dat frequent verschillende databronnen importeert in een centrale (No)SQL-database met cloud-syncing.
3. Productvraag-voorspelling o.b.v. historische transactiedata, marketingdata en externe databronnen i.c.m. notificatie/ presentatiecomponent in
dashboard.
4. Module voor (in- en externe) logistieke flow optimalisaties.
5. Energievraag-voorspelling tuinbouw om de vraag naar gas en elektriciteit te voorspellen, waaruit adviezen komen voor het innemen van
energieposities op de energiemarktmarkt d.m.v. directe datacommunicatie met de energiemarkt.Doel is om data science en artificiële intelligentie/ analysetechnieken toegankelijk te maken voor MKB+ bedrijven in de industrie zodat niet alleen de
grote spelers zoals Amazon, Bol.com, etc hiervan profiteren. Voor single use cases is de investering in krachtige digitale infrastructuur vaak uit
verhouding met de kosten voor het MKB. Wij merken echter dat de behoefte aan geavanceerde AI-gedreven toepassingen voor verschillende retailers
in datatype en data architectuur overeenkomsten hebben.
In dit project ontwikkelen we generiek data-driven retail platform met verschillende AI-technieken en data-analysemethoden ter verwerking en
analyse van bron-onafhankelijke retail-data om o.b.v. van klantdata zoals leads (locaties, email adressen, etc.), productinformatie (merken,
voorraden, etc.), contactmomenten/ klantinteracties (verkopen, website bezoeken, etc.) analytische bewerkingen, inzichten aanbevelingen en
automatisering te bieden. Denk aan de beheer, dasboarding en visualisatie van klantrelaties, voorraadsystemen, personeelsplanning, product/ service
aanbevelingen, demand forecasting, in-en verkoopmanagement, clustering algoritmen, churn voorspelling en lead scoring.
Technische blokkade is het onafhankelijk van brondata correct verwerken van alle mogelijke data teneinde clustering algoritmen, filtering en analyses
van door MKB (zelf/op maat gemaakte) systemen, met datasets die standaard niet geschikt zijn voor big data analyses door onjuiste/ onvolledige of
vervuilde data.Het vernieuwende werkingsprincipe t.a.v. de genezing is gelegen in versneld tegengaan van de degeneratie van ‘zieke cellen’ een versneld tempo dan
wel dit proces te kunnen stoppen. Het technische werkingsprincipe van de te ontwikkelen device betreft een bestralingsmethodiek met een specifieke
frequentie, timing, concentratie en tijdsduur van dit licht in combinatie met een toevoeging van een soort contrastvloeistof heeft een uitwerking op het
functioneren van het metabolisme in cellen.
Hierin is de combinatie van de hoge intensiteit en korte pulsduur die de probe moet genereren uniek, zoals ook de methode om het licht op de meest
effectieve manier aan te brengen en de meest effectieve doses te genereren .
Hiervoor ontwikkelen we eigen technische nieuwe hard- en software die dit proces dusdanig flexibel kan uitvoeren en bepalen zodat een juiste doses
snel bereikt kan worden. Dit principe is (technisch) nieuw en wordt nog niet toegepast in de geneeskunde.Ten behoeve van het uniform aansturen van “connected products”, zoals verlichting en ventilatie ontwikkelen we een modulair communicatie
framework waarbij verschillende modules met elkaar kunnen communiceren zonder afhankelijk te zijn van elkaar. Hiervoor ontwikkelen we twee
communicatie frameworks (voor iOS en Android) voor het verbinden met, monitoren van, en aansturen van “connected products“ die mogelijk met de
verschillende technieken verbonden zijn (Bluetooth/wifi) van verschillende partners, en het beheren van deze producten in het account van de
gebruiker, welke we kunnen implementeren in onze apps.
Technische uitdaging is om gegevens van verschillende producten te extraheren en weer te geven in één app/ locatie, alsook het tot stand brengen
van draadloze dataconnecties met diverse producten met elke een eigen communicatiemethodiek via lokale netwerken en device eigenschappen
(hardware) zoals bluetooth en/of wifi, en compatible moet zijn met meerdere apps, en devices.Het doel is om een online, via een App te benaderen, visualisatie te creëren van actuele vluchten en vluchtvoorspellingen voor omwonenden van
vliegvelden. Dit om interactieve vluchtverkeer, overlast, routes, geluid en dergelijke inzichtelijk te maken. Gedachte is de ontwikkeling van een
Augemented Reality (AR)-visualisatielaag bovenop een landkaart en zo data te presenteren aan users. Hierdoor zullen omwonenden van een
luchthaven een beter beeld krijgen bij het huidige en voorspelde vluchtverkeer en hier respectievelijk minder last van ondervinden aangezien hier
vooraf rekening mee gehouden kan worden.
Hier ontwikkelen we verschillende componenten:
1: Een realtime data-extractiecomponent dat continu data verzameld en analyseert en o.b.v. daarvan vlucht route voorspellingen kan maken.
2: AR-visualisatielaag welke op een gebruiksvriendelijke manier complexe data eenvoudig op een landkaart kan projecteren.We ontwikkelen adoptief algoritme om users van een social interaction platform enkel relevante content te presenteren. Op deze manier willen we
sociale interactie tussen mensen (users) stimuleren door custom challenges’ waar iedereen op kan reageren met een eigen inzending van de
uitdaging. Hiervoor ontwikkelen we digitaal, op content gebaseerd, adoptief algoritme o.b.v. persoonlijke datapunten zoals interesses en historische
gebruik zonder repetitief te zijn. Daarnaast moet de software zichzelf ontwikkelen waardoor gebruiker met nieuwe en passende content in aanraking
komt.
Technische uitdaging is een tegenstrijdigheid van onvoorspelbare content/ challenges/ matches o.b.v. historische data. Door het gebruik van
historische data kan doorgaans enkel geëxtrapoleerd worden naar de toekomst waarbij de oorsprong van data duidelijk zichtbaar is. Dit dienen we
expliciet zien te voorkomen. Dit willen we gaan ontw. door analyses te doen van video’s.De basis van dit project is een bestaand platform dat gebruikt wordt voor het verwerken, behandelen en fabriceren van bestellingen van dichtingen die
gebruikt worden in de maakindustrie. Dit platform zorgt ervoor dat gebruikers niet alleen een volledig bestel en facturatiesysteem hebben, maar ook
direct een webshop op kunnen zetten waarbij zij klanten bestellingen kunnen laten plaatsen. Op dit moment is het platform voornamelijk gericht op
kleinere bedrijven die ook kleine bestellingen moeten verwerken.
Echter, vanuit grotere fabrikanten is er steeds vaker de vraag voor een dergelijke software, maar zij hebben zelf ERP en CRM systemen waar ze
gebruik van willen blijven maken. Hierdoor dient er dus een interface (API) te worden ontwikkeld tussen het platform en de ERP en CRM systemen van
de grote fabrikanten welke flexibel genoeg is om met veel bestaande ERP en CRM systemen om te kunnen gaan, en op zo’n manier dat het uitwisselen
van data kan gescheiden wordt zonder dat er aan de klantkant veel moet worden geconfigureerd zodat de tijd en inspanningen van de klant minimaal
zijn. Deze API moet vanaf de grond af worden opgebouwd.We ontwikkelen in dit project software waarmee sfeerhaarden zowel te bedienen zijn via een app, data kunnen verzamelen via een cloudomgeving en
een bepaald brandpatroon hanteren wat zelf ingesteld kan worden door de gebruiker. Het brandpatroon moet worden ingesteld door de gebruiker zelf
aan de hand van een bepaald visueel patroon wat ingevoerd kan worden met de veeg van een vinger over het scherm. Hiermee kan de gebruiker de
intensiteit per moment bepalen en hier de juiste brandduur aan toebedelen.
De interface tussen de hardware van de sfeerhaard en de app moet gemaakt worden op basis van het ecosysteem van hardware wat nu bestaat om
de haard te bedienen via een afstandsbediening. Nu moet deze hardware dus gaan communiceren met de app, wat niet via een standaard aan te
roepen API is, maar via een ouderwets protocol waar weinig documentatie over beschikbaar is en geen frameworks voor bestaan. De protocollen voor
het aansturen van de hardware zijn verouderd, weinig gedocumenteerd en geen beschikbare frameworks hebben. Het gebruik van deze protocollen is
niet standaard voor het aansturen van hardware met een app, waardoor we zelf een maatwerk oplossing moeten ontwikkelenIn dit project ontwikkelen we een nieuw centraal systeem binnen onze organisatie waarin bedrijfskritische datastromen op één centrale plek ingezien
en beheerd kunnen worden.
Doelstelling is de eigen complexe werkprocessen beheersbaar en controleerbaar te maken d.m.v. diverse systemen zodanig te integreren dat er
optisch vanuit 1 ‘Smart Media’ systeem gewerkt kan worden i.c.m. met integrale analysemethoden, calculatiemethodieken, en datacontrole binnen de
gehele organisatie. Hiervoor ontwikkelen we datagedreven sotftwarecomponenten.
Componenten:
1. Ontw. datagedreven calculatiemodule bedrijfskritische datastromen
2. Ontw. Python datacommunicatiemodule
3. Ontw. voorspellings- en validatiefuncties (controle)
Technische uitdating is een realtime systeem te ontwikkelen waarin users direct toegang hebben tot continu veranderende data hebben zonder delay
d.m.v. server Python modules die constant requests sturen om te controleren of alle API’s onderling van dezelfde data gebruik maken teneinde
borging weergeven en verwerken van de meest actuele data/ bestanden.Het afgelopen jaar is aanvrager hard gegroeid in het aantal nakijkopdrachten en plagiaatchecks die men uitvoert voor studenten. Met deze groei is ook de hoeveelheid werk toegenomen die het ons kost om alles in goede banen te leiden. Zo kost het steeds meer tijd om:
•	De kwaliteit van editors te testen en via een gestructureerde aanmeldingsprocedure toe te voegen aan ons systeem,
•	Kwaliteit van het nakijkwerk van de editors te controleren, 
•	Optimaal de opdrachten te koppelen aan de best geschikte editor op dat moment, 
•	De beschikbaarheid van de editors af te stemmen op het daadwerkelijk binnenkomende werk, 
•	Het stroomlijnen van het contact tussen student, support en editor. 

Omdat men steeds meer opdrachten ontvangt worden de knelpunten die we ondervinden onhoudbaar.. Zodra studenten document uploaden, converteren we deze documenten, tellen we automatisch woorden en doen we integriteitschecks op het document. Dit systeem heeft veel vertragingen en daarom kunnen we niet meer voldoen aan de gewenste response- en laadtijden (performance-issues).

In het SCRiBBR-systeem zitten momenteel 250 freelance editors en dit aantal zal alleen maar toenemen. Het wordt steeds lastiger om de vraag van de student af te stemmen met de beschikbaarheid van onze freelance editors. Er is een sterk seizoeneffect, het systeem dient ons op die piekmomenten door middel van meerdere databronnen beter te kunnen ondersteunen. Verder is de interactie van de plagiaatcheck onduidelijk en levert veel fout gemarkeerde resultaten op. Daarnaast vragen studenten om features die we momenteel nog niet in onze plagiaatcheck hebben verwerkt, zoals het markeren van bronnen, taalfouten en lay-outfouten in een document.SCRiBBR is ontwikkelaar en exploitant van een internationaal opererend nakijkplatform waar studenten hun scriptie na
kunnen laten kijken op taal door freelance taalkundigen (editors). Via het platform wordt een plagiaatcheck aangeboden,
hierbij worden overeenkomsten in de tekst via Ephorus opgehaald en gepresenteerd aan de gebruiker. Het formaat waarin
Ephorus de resultaten terug levert is een verouderde techniek. De kwaliteit van de data is onvolledig en moeilijk te verwerken.
Verder is het zo dat wat we van Ephorus terugkrijgen staccato is m.b.t. het vinden van afwijkingen. Ofwel, vaak is in de buurt
van het gevonden fragment gewoon een bronvermelding of quote te vinden, dit leidt tot foutieve resultaten.
De huidige HTML-representatie en Ephorus bieden hiervoor geen oplossingen. Data is dynamisch welke vanuit Ephorus en
student wordt aangeleverd, de input is vooraf daarmee onbekend. Beoogd doel is de ontwikkeling van technisch compleet
nieuwe plagiaatcheckmodule. Voor het realiseren worden een aantal nieuwe technieken ontwikkeld moeten gaan worden
zowel voor de serverapplicatie, de clientomgeving als een communicatie/interfacingprotocol.Er dient een model ontwikkeld te worden wat nieuwe orders automatisch koppelt aan de best mogelijke editor. Op basis van
reeds verzamelde karakteristieken (zie bijlage voor begrippenlijst en achtergrond karakteristieken) in het systeem dient
middels machine learning een continue, zelflerend model en functie ontwikkeld te worden. Deze functie is in de praktijk
meerdere modellen, aangezien er meerdere koppelscenario’s zijn.
Enkel de inkomende karakteristieken (brondata) is gedeeld. Voorbeelden van deze modellen zijn “automatisch koppelen bij
normale drukte overdag”, “automatisch koppelen tijdens sterk aanwezig seizoenseffect”, en “automatisch koppelen tijdens de
nacht”.
De huidige manier van filteren en sorteren van editors op basis van aanwezige karakteristieken sluit editors uit, maar maakt
geen keuze voor “de juiste editor”. De laatste stap voor koppelen is een “onderbuikgevoel” en gebeurt door support. Er wordt
niet gevalideerd/geleerd door het systeem waarom support deze keuze maakt.
Er dient een datamodel (functie in TensorFlow of PHP-ML) ontwikkeld te worden dat nieuwe orders automatisch koppelt aan
de best mogelijke editor. Op basis van reeds verzamelde karakteristieken in het systeem dient middels machine learning een
continue, zelflerend model ontwikkeld te worden. Hiervoor is geen bestaande programmatuur of datamodel beschikbaar, zoals
dat bijvoorbeeld bij image processing of natural language processing wel is. Er zijn meerdere strategieën voor het filteren en koppelen van “de juiste editor”. Er is een sterk seizoeneffect, daardoor bestaat
het te ontwikkelen datamodel in de praktijk uit meerdere modellen. Enkel de inkomende karakteristieken (brondata) worden
gedeeld. Voorbeelden van deze modellen zijn:
a. Automatisch koppelen overdag bij normale drukte
b. Automatisch koppelen tijdens extreme drukte en lage beschikbaarheid
c. Automatisch koppelen tijdens de nacht bij normale drukte
d. Automatisch koppelen aan editors die lange tijd geen orders hebben gehad, voorafgaand aan een drukke periode (lees:
activeren in december, januari heeft sterk seizoenseffect)De filtering/sortering gaan we verder ontwikkelen en programmeren, middels een datafiltering- en koppelingfunctie (Assignment applicatie met API).
De hierbij reeds beschreven technische problemen, oplossingsrichtingen en werkingsprincipes zijn nog steeds relevant en corresponderen met de
statusupdate en bijgevoegde bijlage.
Op basis van voortschrijdend inzicht in deze aanvraagperiode besloten om als werkingsprincipe een autonome "Bubble Context" te gaan ontwikkelen.
Het betreft een nieuwe Assignment applicatie met API interface (uitsluitend geprogrammeerd in de formele programmeertaal PHP). Het "assignment"
werkingsprincipe wordt hiermee afgesplitst van de bestaande monolithische applicatie. Deze gesplitste context wordt een "loosely coupled
microservice".Binnen dit project ontwikkelen we het “Academic Assistant” platform. Dit project komt voort uit het S&O-werk binnen uitgevoerd binnen project SC-01
‘Platform voor Plagiaatcontrole’. De scope van dit nieuwe project is breder dan alleen een platform voor plagiaatcontrole en bijbehorende modules.
Project SC-01 wordt daarmee afgesloten.
De eerste component een detectie-module genaamd de “reference list finder” is het technisch nieuwe werkingsprincipe dat we verder ontwikkelen
binnen dit project. Deze maakt gebruik van het getrainde detectie-algoritme uit project SC-01. In de periode september t/m december gaan we
starten met de ontwikkeling van een Word add-in component waarmee waarmee onze editors sneller kunnen gaan werken en Academic Assistant API
voor het uitwisselen van data uit het platform en de te ontwikkelen componenten.
A. Reference List Finder om een APA-bronnenlijst in een document te detecteren, en metadata te verzamelen.
B. Word add-in component. Deze MS Word add-in component ontsluit andere op het platform aangesloten componenten in de Word-omgeving van de
editor
C. Academic Assistant API: Het Academic Assistant platform zal door meerdere interfaces via een eigen ontwikkelde API uitgelezen kunnen worden en
worden geüniformiseerd voor flexibele verwerking door eigen ontwikkelde componenten.Bestaande bouw in aardbevingsgebieden (o.a. Groningen) zijn veelal niet gebouwd – en dus niet bestendig – voor aardbevingsbelasting. Gebouwen
kunnen deze krachten niet opnemen en gaan stuk. Bestaande bouw- en fysische simulaties/ tools ter bepaling van aardbevingsbelasting en
bestendigheid van bestaande bouw werken onvoldoende.
We ontwikkelen technisch nieuwe software ter toetsing van bestaande bouw op aardbevingsbestendigheid en daarmee in hoeverre gebouwen veilig
zijn. Dit omvat ontwikkeling van een softwareplatform waarin meerdere bouwkundige elementen tegelijk herkend worden, actuele fysische bepalingen,
3D simulaties en visualisaties realtime mogelijk zijn. Dit willen we toepasbaar maken in bestaande tools als FEM-software (Abaqus), bouwkundig
ontwerpsoftware (Revit) en de maatregelencatalogus van Centrum Veilig Wonen (CVW).
Het beschikbaar maken/ontwikkelen van de koppeling/interface, het gebruik van tools als Revit en Abaqus en activiteiten als modellering en
formulering van wiskundige en rekenkundige modellen zijn daarbij geen onderdeel van het S&O-werk of oplossen van de onder beschreven technische
knelpunten. Deze worden uitgevoerd door andere medewerkers binnen aanvrager welke geen onderdeel van de WBSO aanvraag / uren zijn.Agillox is actief in de professionele RFID- en smart sensortechnologie (wireless traceerbaarheid-technologie) waarin het ontwikkelen en integreren van
smart sensor oplossingen centraal staat. Uit de markt merken wij een sterke groei in vraag naar RFID-traceeroplossingen naar het traceren van
shared mobility-oplossingen (fietsen/e-bikes) met real-time en accurate datavoorzieningen.
Doelstelling:
Agillox wil een RFID Tag&Track systeem ontwikkelen dat toegepast kan worden voor shared mobility-oplossingen en als abonnementsvorm kan
worden aangeboden. Het gaat om een hardware sensor die geïntegreerd wordt met het frame van (e-)fietsen. Hiermee moet het mogelijk worden voor
gebruikers om direct met bijvoorbeeld een OV fiets door een detectiepoortje te lopen waarbij fiets en gebruiker automatisch herkent worden,
gekoppeld aan hun OV kaart.
Functionaliteiten:
- Automatische herkenning van tags en openen van gesloten deuren/(fietsen)stallingen zonder fysieke sleutel;
- Zelfdestructie van de RFID-chip in gevalle van diefstal of poging daartoe met automatische alarmering;
- Locatietracking voor gemakkelijk vinden van stallingen in een mobiele app
- Integratie automatische betalingssysteem voor gebruik vervoersmiddelVoor een klant gaat de aanvrager een nieuwe klantenportaal gaan ontwikkelen. Het gaat om een volledig nieuwe klantenportaal die ontwikkeld moet
worden met alle functionaliteiten die normaal gesproken in een klantenportaal zitten.
DOEL
Aanvrager gaat in dit project een volledige nieuwe techniek voor hen gebruiken, namelijk Angular. Dit is een nieuwe techniek op gebied van Single
Page Application waarbij een webapplicaties ontwikkeld kunnen worden, zonder lange laadtijden om de interface te laden.AlienTrick heeft een nieuwe weg ingeslagen en ervoor gekozen om twee nieuwe CMS'en te gaan gebruiken voor websites en webshops. Voor deze
CMS’en moeten verschillende functionaliteiten (packages) ontwikkeld worden om de CMS werkend te krijgen voor onze klanten.
We lopen hierbij tegen een aantal functionele knelpunten aan:
- Performance issues bij inzetten van packages.
- Stabiliteit in code
- Integratie met Angular waarbij we ervoor moeten zorgen dat de content via het CMS beheert kan worden en toch via Angular opgehaald en
geïnterpreteerd kan worden client site.Op basis van GPS willen we Augmented Reality (AR) gaan toepassen. We gaan de GPS van de telefoon vertalen naar de virtuele wereld waarin de
telefoon zich bevindt. Vervolgens gaan we in de virtuele wereld (geprojecteerd op de beelden van de camera) beelden projecteren (augmented
reality). De uitdaging binnen deze techniek is het omrekenen van de GPS naar de virtuele wereld en de precisie hiervan waarborgen. GPS is op de 5
meter nauwkeurig, wat betekent dat virtuele geprojecteerde items gaan driften wat we dienen te voorkomen.
Uitdaging zit erin om een realistische ervaring te krijgen op een klein scherm. De performance van de toepassing moet dusdanig zijn dat deze zo
realistisch mogelijk overkomt. Dit alles moet passen binnen de rekenkracht van een gemiddeld toestel. Terwijl voor een goede grafische weergave
juist veel rekenkracht en een goede grafische kaart vereist zijn.
Functionaliteit/componenten:
• We ontwikkelen een algoritme waarmee we de vertaling kunnen doen van GPS naar de virtuele wereld.
• Daarnaast zullen we een data-analyse functie met geïntegreerd algoritme ontwikkelen om de GPS positie stabiel te houden, zodat driften voorkomen
wordt.Om goede VR projecten te kunnen opleveren lopen we tegen verschillende uitdagingen aan. Hoe zorgen we ervoor dat de performance van VR goed
blijft t.o.v. van de kwaliteit van objecten die we in de wereld willen renderen en hoe kunnen we onze oplossingen herbruikbaar maken.
Doel van dit project is om een Virtual Reality Framework te ontwikkelen waarmee we zelf specifieke VR oplossingen kunnen ontwikkelen, waarin het
ontworpen design, techniek en performance altijd perfect intact blijft. In het Speur- & Ontwikkelingswerk zullen we de nieuwe technische
programmatuurprincipes ontwikkelen om het design en opmaak van repetitieve VR middelen te automatiseren in een gebruiksvriendelijke en veilige
omgeving.Klanten vragen onze ondersteuning bij diverse Hololens projecten. Doel van dit project is om een Hololens platform te ontwikkelen waarmee we zelf
specifieke Hololens oplossingen kunnen ontwikkelen, waarin het ontworpen design, techniek en performance altijd perfect intact blijft.
Dit houdt in dat de hologrammen die geprogrammeerd worden kunnen wijzigen in schaal en perspectief. Als je dus rondloopt in de ruimte worden de
hologrammen dus groter als je dichterbij komt. Daarnaast kan je er ook omheen lopen, dus ook de 3D ervaring moet kloppen. We moeten dus om
kunnen gaan met een enorme wirwar aan perspectief, schaal en dus data (door dat hologrammen vrij in de ruimte beleefd worden). Tevens het
schaalbaar krijgen van een Hologram is een uitdaging gezien beperkingen van devices en systemen.
We moeten de omgeving kunnen detecteren en op basis hiervan objecten in de ruimte plaatsen. We willen een virtuele wereld bijvoorbeeld op een
tafel plaatsen tot de rand van het tafel. Buiten de tafel moet geen rendering plaatsvinden. Hiervoor zijn vele algoritmes nodig om uit te rekenen, wat
de mesh is en hoe deze te vertalen is naar een oppervlakte.In dit project ontwikkelen we een online rapportageportaal voor kredietverstrekkers om automatisch provisiedata, welke per user/ account verschilt,
tijdsafhankelijk en variabel automatisch te kunnen bepalen en transparant in een dashboard kan weergeven. Dergelijke bepalingen worden m.b.v.
Excel handmatig bepaalt hetgeen erg tijdrovend en foutgevoelig is. Tegelijkertijd is dataweergave in een online poretaal met Excel niet mogelijk.
Vervolgens willen we data uit het te ontwikkelen portaal uitleesbaar maken voor andere systemen om deze te verwerken en automatisch rapportages
kunnen opstellen/ transacties kunnen uitvoeren. Op deze wordt een vernieuwende wijze van data-inzage en rapportages mogelijk gemaakt.
Doel & functionaliteit
Hiervoor ontwikkelen een nieuwe softwarecomponent met een eigen algoritme en interface waarmee de gebruikers zelf eigen business rules en
mutaties kunnen invoeren met validatie van het platform. Hierbij bieden we oplossing aan de grote variëteit aan regels, validatiestappen proces-flows
en maatwerk toepassingen. Te ontwikkelen in MVC.NET in combinatie met MSSQL database en een JSON Rest api.Ten behoeve van het visualiseren en configureren van videowalls in de beschikbare ruimte/ locaties, lichtval en andere omgevingsfactoren ontwikkelen
we een nieuw systeem om snel en gemakkelijk videowalls opstellingen inzichtelijk te maken via Augmentend Reality (AR). Doel is om via deze nieuwe
configurator o.b.v de verschillende omgevingsfactoren en eisen automatisch advies geven welke schermen het meest geschikt zijn en welke in
configuratie (aantal lengte en aantal breedte). Dit levert een preview op hoe de videowall in de ruimte geplaatst gaat worden voordat deze
geadviseerd, geoffreerd en besteld wordt. Dit moet in Augmented Reality geprojecteerd worden.
Doel & functionaliteit:
We ontwikkelen een AR-component om de concept configuratie te projecteren, zijnde een
AR-videoconfigurator waarin men o.b.v. afmetingen een advies krijgt van schermen en indeling en deze via Augmented Reality projecteert in de
werkelijkheid zodat de werking in de werkelijkheid gevisualiseerd wordt. Technische uitdaging is om configuratie stationair en onafhankelijk van
device/ camera beweging (bijv. smartphone) op de juiste positie en omgevingsfactoren te projecteren.We ontwikkelen een platform om data centraal te beheren en processen te automatiseren t.b.v. het inzichtelijk maken van het reparatieproces van
auto-elektronica en uiteindelijk reparatiekosten voor de eindklant te besparen.
Functionaliteit:
Ontwikkeling van een webplatform met een native App ervaring en automatische integratie van data uit verschillende bronnen, waaronder
kentekenherkenning d.m.v. camera, RDW datakoppeling, barcode scanner, koppelingen met garage software, koppeling met transporteur en
pushberichten.Alientrick merkt een toenemende vraag naar vanuit een webomgevingen/ browsers connectie te kunnen maken met de native software en
hardwarecomponenten van Android en iOS devices. Hiervoor gaan we op basis van Progressive Web App (PWA) technology (Javascript) een eigen
ontwikkelplatform ontwikkelen om intern effectiever nieuwe componenten, apps, en functionaliteiten te kunnen ontwikkelen t.b.v. door ons
ontwikkelde apps, websites. Hiervoor dient een geheel basis framework ontwikkeld te worden met uiteenlopende basisfunctionaliteiten en
componenten om als ontwikkelomgeving te dienen.
Te ontwikkelen PWA-(basis)componenten t.b.v. het native aanspreken en aanwenden van software taal en hardware componenten van mobile devices
op Android en iOS:
1. Integratie Payments module
2. Access Geolocation
3. Native Push Notifications systeem
4. Offline data caching
5. Credentials (authentication)
6. Native vibrations
7. Internal storage accessKrita is een open source project dat met als doel een complete en geavanceerde digitale schilderstudio wereldwijd aan kunstenaars aan te bieden.
Krita is geschreven in C++ met behulp van de Qt toolkit. Krita is ontwikkeld door Boudewijn Rempt Software in samenwerking met de Stichting Krita
Foundation en een wereldwijde groep vrijwilligers. Zij wordt reeds gebruikt door miljoenen gebruikers over de hele wereld, maar ook in het onderwijs
(bijvoorbeeld Artez Zwolle, AKV Tilburg en Breda) en in commerciële omgevingen zoals VFX-studio's in Zweden, Duitsland en de VS.
De digitale schildersapplicatie Krita biedt gebruikers vele instrumenten en resources (penselen, verlopen, patronen, etc.) ter gebruik in het creatieve
proces. Gebruikte resources zijn grote binaire objecten waarvan de metadata niet in de objecten opgeslagen is. Hierdoor kent implementatie van
resources een eindeloze stroom bugs, problemen en beperkingen.
Doel van dit project is om het resource management te ontwikkelen met en naar moderne standaarden der techniek en mogelijkheden. Huidige
knelpunten worden geanalyseerd en middels een requirement analysis zal zowel de back-end als front-end vanaf de basis opnieuw geprogrammeerd
worden. Hiermee ontstaat een modern, robuust en uitbreidbaar systeem voor resource management in Krita. Resources zijn ready to use inzetbaar
zonder beperkingen door beschikbaarheid van geheugen.mConsole is een portaal dat direct verbonden is met een medische database. De in eigen beheer ontwikkelde technologie zorgt ervoor dat
zorgverleners vanuit dit portaal toegang hebben tot het complete EPD-landschap van de patiënt/cliënt waarmee ze een behandelrelatie hebben.
Functionaliteiten:
1. We slaan data op o.b.v. van OpenEHR. Dit betekent dat we data opslaan als objecten met als gevolg vele nieuwe versie van dit object welke we
moeten bewaren. De hoeveelheid gegevens neemt in de loop van de tijd snel toe, waardoor de bruikbaarheid, onderhoudbaarheid en de responstijd
van de query afnemen. We ontwikkelen een dataopslagcomponent waarbij we data opslaan in JSON en relationele queries combineren met ‘schemaless’
data en opslaan (100% door Iancu Beheer BV).
2. AQL support: Om deze query's op een consistente manier samen te stellen, te parsen en te lanceren hebben we ondersteuning nodig voor de AQLzoektaal
van openEHR. (100% door Iancu Beheer BV)
3. We willen updates voor mConslole gaan uitvoeren via Docker zodat complete software images naar klanten worden gedistribueerd. De software
distributie zal stabiel zijn en elke klant zal dezelfde software configuratie hebben (100% door Code24)
4. Stateless services: De bedoeling is om onze stateful services (mConsole houdt de huidige sessie aan serverzijde) om te zetten in stateless waarbij
de sessie- of contextgegevens worden opgeslagen aan client-browserszijde. (50/50 tussen Code24 en Iancu Beheer).Voor het realiseren van een all-in-one EPD is een facturatie functionaliteit nodig. We willen dit in eigen beheer gaan ontwikkelen en integreren in
mConsole. De facturatie is afhankelijk van de van toepassing zijnde financieringsvorm en contractafspraken die gemaakt zijn met een zorgverzekering
of gemeente. Het systeem moet zeer flexibel zijn aangezien de financieringsvormen vanuit de overheid elk jaar wijzigen alsmede de contractafspraken
met zorgverzekeraars en gemeenten.
Regels voor zorgverzekeringen veranderen elk jaar. Maar er moet ook rekening gehouden worden met credit facturen die (zelfs als het over een aantal
jaar teruggaan) de regels van dat moment moeten hanteren. Dit alles over de verschillende financieringsvormen in de GGZ zorg die regelmatig
wijzigen.
Doel/functionaliteiten:
1. Agenda: Beschikbaarheid in kaart brengen via matching van agenda’s en beste voorstel genereren en voorleggen aan gebruiker. Hierbij het
matchen van agenda’s, checken en valideren.
2. Facturatie: Het zal mogelijk zijn om aan de hand van productregistraties in combinatie met contractafspraken en financieringsvormen factuurregels
te genereren die als input gebruikt kunnen worden voor een factuur. De Code24 library heeft een RuleProcessor; een proces dat aan de hand van XML
nodes input kan manipuleren. Hierdoor kunnen totaal berekeningen gedaan worden aan de hand van tijd of een procedure die is geregistreerd in
mConsole.Het eigen ontwikkelde mConsole portaal met directe verbinding met medische databases en het EPD landschap is op dit moment niet geschikt voor
mobiel gebruik vanwege de complexe UI-ervaring, veel en toenemende traffic door server-clientcommunicatie en potentiële
netwerkbeveiligingsproblemen. Hiervoor willen we een mobiele app ontwikkelen die toegang geeft tot (een beperkte set) mConsole-functies. De app
moet gecompileerd worden voor iOS, Android, en geoptimaliseerd voor het apparaat, zoveel mogelijk gebruikmakend van native
apparaatfunctionaliteit.
Doel/functionaliteiten mConsole mobile App:
- Beheren gegevensuitwisseling tussen de app en de (verschillende) versie(s) van mConsole uitgevoerd op verschillende organisaties waar mConsole
on-premises beschikbaar is.
- Beschikbaarheid mConsole-services vanaf een extern netwerk dan het intranet van de organisatie;
- Toegang tot dezelfde functionaliteiten als de desktopversie van mConsole (zie projecten 2018-01 en 2018-02), aangepast aan mobiele
gebruikerservaring, touch control en gegevensverkeersbeperkingen.
Binnen dit project is Sebastian Iancu verantwoordelijk voor het ontwikkelen van de REST API en technische testing.Aanvrager is voornemens een softwaremodule te ontwikkelen welke met moet
functioneren als een dynamische ontwikkelstraat. Met deze software wil
aanvrager het ontwikkel- en bugfix proces vereenvoudigen zodat zij eenvoudigere
complexe softwareoplossingen kunnen uitrollen welke gelijktijdig moeten
functioneren en communiceren met meerdere devices/platformen. De software moet
realtime bugs uit de programmatuur halen, herziene code generenen en opnieuw
uitrollen.
DOEL:
Door het werkproces te automatiseren - automatische frontend, unit tests,
quality checking en
building- kunnen wijzigingen die fouten veroorzaken in een vroeg stadium
opgespoord worden
en aangepast kunnen worden in een online/realtime setting.Aanvrager gaat een app ontwikkelen ten behoeve van tafelvoetbal voor
organisatie met een tafelvoetbaltafel. De app biedt de mogelijkheid scores bij
te houden, wedstrijden te spelen, toernooien op te zetten en ranglijsten bij te
houden.Het technische probleem ontstaat bij de ontwikkeling voor een klant waarbij er
verschillende partijen betrokken zijn. Data voor op websites wordt uit een
database gehaald en ontsloten via HTML templates. Voorheen was dit binnen één
framework op te lossen.
DOEL
Bij het scheiden van de rollen voor backend en frontend is de noodzaak ontstaan
om interfaces te ontwikkelen waarmee de communicatie tussen backend en frontend
wordt vastgelegd. Zowel de vastlegging, ontwikkeling van de interface als het
testen of alle mogelijke operaties gewenste resultaten oplevert, vormen een
technische uitdaging.Voor een rijkswaterstaat zal de aanvrager een gebruikersportal ontwikkelen.
Rijkswaterstaat (RWS) wint watergegevens — zoals waterstanden, golfhoogtes en
de waterkwaliteit — in ten behoeve van het primaire proces en/of wettelijke
verplichtingen. De watergegevens worden opgeslagen, bewerkt tot informatie
(verwachtingen, berichtgeving op maat, kengetallen) en uitgeleverd aan
eindgebruikers. Het presenteren en ontsluiten van meetgegevens is een
belangrijke schakel in de informatiecirkel, omdat hiermee de RWS-er, maar ook
de semi-professional buiten RWS en het publiek, concreet wordt voorzien van
essentiële informatie. Gebruikers kunnen via het Waterportaal (een deel van de)
gegevens opzoeken, selecties maken en gegevens bekijken op een kaart, grafiek
en/of in tabelvorm. Daarnaast wordt voldoende achtergrondinformatie op het
Waterportaal getoond om het gegevensaanbod begrijpelijk te maken voor
de verschillende doelgroepen.
DOEL
Aanvrager is voornemens een front-end voor het waterportaal te ontwikkelen
(niet WBSO) op basis van de gps-module, locatie ontstaat toegang tot relevante
informatie voor de specifieke gebruiker.
Technisch nieuw:
- Opslag en weergave data -> ontwikkeling buffering/cache
- Responsive design -> afhankelijke weergave nav. data-verwerkingAanvrager ontwikkelt voor haar opdrachtgever oplossingen met behulp van 'slimme
techologie'. Voorbeeld is het ontwikkelen van slimme werkplekken in gebouwen
die met behulp van sensoren meten of ze bezet zijn of niet. Door de data via
internet te versturen en via een Internet of Things platform ontstaan nieuwe
nieuwe databronnen die ingezet kunnen worden voor te ontwikkelen apps of data
analyse.
Andere voorbeelden zijn het detecteren van aanwezigheid van docenten of
studenten in gebouwen door middel van Beacon technologie, of WIFI access point
detectie. Voor slimme detectie ontwikkelt aanvrager software op basis van
principes uit computer vision. Zo wordt motion-detection gebruik om beweging
(en daarmee aanwezigheid) te detecteren in ruimtes in gebouwen.
Het nieuw te ontwikkelen platform zal allerlei soorten en in formaat wisselende
gegevens moeten verwerken via een multichannel interface. De technische
uitdaging zit hem in het snel terug reageren (enorme diversiteit en omvang van
data die drukken op de responsetijden) en daarnaast aansturen vanachterliggende
processen die zowel in de cloud als op locatie verwerkt wordt.
APPARATUUR MET TECHNISCHE KNELPUNTEN
1. iBeacons
2. (Smart) Camera'sAanvrager is voornemens software modules te ontwikkelen om de ontwikkeling van
verschillende aspecten van de core ontwikkeling te ondersteunen.
Het betreft hier:
- koppelingen met klantportalen: voor een klant gaan we een maatwerk
klantenportaal ontwikkelen. Data voor de portal wordt uit de ERP systemen van
de klant gehaald en ontsloten via HTML templates. Er wordt hierbij geen gebruik
gemaakt van standaard oplossingen. Bij het scheiden van de rollen voor backend
en frontend is de noodzaak ontstaan om interfaces te ontwikkelen waarmee de
communicatie tussen backend en frontend tot stand komt.Aanvrager is van zin een platform te ontwikkelen waarop ze verschillende
diensten kunnen ontwikkelen en aanbieden op het gebied van Sensoriek en VR
Binnen dit project voeren zij S&O uit op het de volgende gebieden:
De innovatie gebieden zijn:
- Internet of Things (IoT): het verbinden van 'real-world' objecten met het
internet door middel van sensoren, zorgt voor tal van nieuwe mogelijkheden, en
ook uitdagingen. Voorbeeld van zo'n toepassing is de uitbreiding van een
Foosball applicatie met sensoren die registreren welke spelers doelpunten
hebben gescoord vanuit welke positie. Een ander voorbeeld is de ontwikkeling
van een applicatie voor een Hogeschool, waarbij we met behulp van sensoren
inzichtelijk maken, welke werkplekken voor studenten beschikbaar zijn, wat de
geluidsoverlast is in het studiecentrum ed.
- Gamification: Door de innovatie op het gebied van IOT, ontstaat een enorme
uitbreiding van de beschikbare meetdata. Dit zorgt voor mogelijkheden en
uitdagingen om vanuit deze meetgegevens betekenisvolle informatie te
destilleren.
- VR: met de toename van de mogelijkheden op het gebied van VR-toepassingen,
neemt de vraag vanuit onze klanten toe om dergelijke toepassingen. Om aan deze
vraag te voldoen, zullen we onderzoek doen en software modules ontwikkelen.Aanvrager ontwikkelt in dit project softwaremodules teneinde de ontwikkeling van een geheel serverless framework: een technisch agnostisch systeem
dat kan interfacen tussen elke cloud infrastructuur service (backend) en maatwerk frontend applicaties. Hiervoor ontwikkelen we agnostische
technologie te ontwikkelen die werkt met modulaire interfaces en systemen is het mogelijk om de infrastructuur (authentication, SaaS services, FaaS
services, Headless CMS) als een service af te nemen waardoor de investeringen van organisaties in de ontwikkeling gaan in plaats van het beheer.
Dit betreft de ontwikkeling van technologie voor het beheer van de ontwikkelstraat, bots voor het automatiseren en het integreren van de
(micro)services (SaaS/BaaS/FaaS) met maatwerk applicaties. Technische blokkade in het programmeren is het integreren van meerdere databases en
microservices van verschillende vendors door middel van APIs en callsBeheer van infrastructuur en broncode van eigen ontwikkelde applicaties vergt veel inspanning en tijd. Aanvrager is voornemens om een omgeving te
ontwikkelen waarin organisaties één centrale plek kunnen creëren voor hun Brand Systeem, voor zowel content, media, visuele taal als technische
web-componenten.
Doelstelling is de ontwikkeling van een serverless SaaS omgeving die kan koppelen/ interfacen en ‘communiceren’ met meerdere databases en
microservices voor het opslaan van data en aanbieden van functionaliteit binnen de omgeving.
Door microservices, cloud functies en databases te ontwikkelen met kunnen we softwarebeheer automatiseren en innoveren t.a.v. digitaal
applicatiebeheer en functionaliteit. Hiervoor ontwikkelen we bots die cloud functions uitvoeren voor het leveren van functionaliteit en ontwikkelen we
een digitale straat ter beheer van utility api’s en headless cms’en.
Technische complex is de hoeveelheid microservices, api’s en functies die geïntegreerd moeten worden van verschillende vendors tot één SaaS
omgeving.De energiemarkt is erg dynamisch en zorgt continu voor verandering in de
bedrijfsprocessen. Anode werkt continu aan het automatiseren en optimaliseren
van deze bedrijfsprocessen. Betrouwbare en handige softwareapplicaties zijn dan
ook essentieel voor een efficiënte werking van het bedrijf.
Momenteel wordt gewerkt met een een groot aantal verschillende tools en
appllicaties welke momenteel zorgen voor een inefficiënte werkwijze en
tijdrovende procedures met betrekking tot reporting en kritische
bedrijfsprocessen.
Aanvrager gaat daarom een compleet beheersaplicatie voor de bedrijfsprocessen
van Anode ontwikkelen.
De belangrijkste doelen zijn:
- Op maatgemaakte intranetapplicatie (.NET Framework koppeling met SQL server)
maken voor het uitvoeren van unieke bedrijfsprocessen.
- Opzetten van een overzichtelijke en doordachte structuur die de uitvoering en
beschrijving van processen zal vereenvoudigen.
-Verdere automatisering: vermijden van tijdsverlies en fouten door manueel werk.
-De applicatie zal een consistente en flexibele manier van ontwikkelen mogelijk
maken.
-Herbruikbaar maken van code voor verschillende basis functies onder dezelfde
applicatieSucsez Groep is de softwareontwikkel entiteit van Heilbron Assurantiën. Er worden per jaar zo’n 54.000 schademeldingen verzuim geboekt in ons
eigen ontwikkelde SV polisbeheer systeem en dit stijgt ieder jaar exponentieel. We willen hiervoor een schaalbare SV controleapplicatie ontwikkelen
met geïntegreerde controlefuncties (software) om deze datastromen en communicatie te kunnen verwerken en een rekenmodule om direct complexe
verzuimberekeningen te doen en te communiceren naar ons SV systeem en derden applicaties als ANVA.
Doel van dit S&O-project is het ontwikkelen van een universele controlefunctie waarin de controle van huidige stromen met de nieuwe stromen
(parallel en asynchroon) inclusief uitzonderingen verwerkt. Hiervoor ontwikkelen we een universele bibliotheek (datavalidatiemodule) +
controlesoftware en rekenmodule.We ontwikkelen een softwaresysteem voor verzekeringsproducten dat bijvoorbeeld wordt ingezet als een offertetool voor autoverzekeringen waarbij
de volmachtafdeling zelf producten kan inregelen. Hierbij rekening houdend met het tonen en afschermen van relevante en irrelevante data (tonen
van de juiste premies, clausules, acceptatiecriteria, etc.). Doelstelling is dat aanvragers van verzekeringsproducten offertes en producten (zelfstandig)
kunnen berekenen met een directe terugkoppeling van het verzekeringsrisico aan de aanvrager en de volmachtafdeling alleen de uitval hoeft te
controleren. Hierdoor worden voor de “recht toe, recht aan” risico’s STP het offertetraject doorlopen waarbij de volmacht de controle heeft en
eenvoudig aanpassingen van producten kunnen doorvoeren.
Hiervoor ontwikkelen we een generiek softwaresysteem voor verzekeringsproducten waarbij op voorhand producten gedefinieerd kunnen worden met
bijbehorende calculaties voor getallen, tekst en UI opbouw. Dit wordt gekoppeld aan een webinterface van een bestaande portal (Mijn Upiva) maar de
schermen worden opgebouwd o.b.v. inrichting beheertool.
Componenten:
1. Backend product beheertool die door de appbeheerder onderhouden wordt
2. Online webinterface/ omgeving adviseurs en volmacht (front-end).Vanuit de eigen ontw. applicatie ASZ moeten er (premie)gegevens over en weer uitgewisseld worden met een andere eigen applicatie genaamd Finact.
Voor de zorgafdeling moeten er imports van zorgverzekeraars (nu veelal Excel bestanden) ingelezen worden waarbij iedere verzekeraar zijn eigen
dataformat hanteert. Dit zijn nu allemaal losse/ ongesorteerde koppelingen.
Er is een wildgroei aan diverse in- en externe data-import en systeemkoppelingen welke niet langer manueel gecontroleerd kunnen worden. Hiervoor
ontwikkelen we de Application linker als generieke beheerscomponentvan datastromen en systeemkoppelingen om gegevens foutloos uit te wisselen
en datastromen geautomatiseerd op te halen of verzoeken van externen zoals partners of verzekeraars omdat dit een bepaalde markstandaard is of
wegens compliancy redenen.
Hiervoor ontw. we een Application linker platform in- en externe systeem (o.a. ASZ – Finact connector) met rechtensysteem om bedrijfskritische data
veilige op te slaan en inzichtelijk te beheren voor en door precies te juiste users en systemen. Technische blokkade is het borgen van- en controleren
van een strikte gegevensuitwisseling met diverse partijen/ systemen aan enkel hen die daartoe rechten hebben.IFS Probity ontwikkelt datamanagementsoftware voor de utilities markt, daar waar gestandaardiseerde ERP-oplossingen als SAP te kort schieten. Dit
project omvat de ontwikkeling van een softwarematig detectiesysteem voor energie en gas aansluitingen om fraude op te sporen. Doel is proactieve
detectie van onveilige situaties per individuele aansluiting o.b.v. uitlezing en verzameling van data. Onveilige situaties zijn aansluitingen die illegaal
zijn aangepast voor o.a. Hennep, verzwaring, andere zekeringen, aftapping, etc. Hiervoor dient een zeer gevoelig detectiesysteem ontwikkeld te
worden. Doel van veroorzaker is immer niet op te vallen, waardoor minimale afwijking van de norm gedetecteerd moet worden teneinde detectie.
Doel van dit project is de ontwikkeling van:
- Datavalidatie component met automatische datavalidatie van inkomende data met hoge gevoeligheid om kleine variaties in data te detecteren.
- Data tracking component: sequentieel in time series opslaan en te compilen van data waarmee events uit grote hoeveelheden data als snapshot
inzichtelijk gemaakt worden om op een later in de tijd in te kunnen zien voor historische data en activiteiten-tracking.Binnen dit project ontwikkelt aanvrager proof of concept software om data van
LTO tapes in tape libraries via het S3 protocal voor object storage te
ontsluiten. De markt voor kleinere tapelibraries is aan het verschuiven
richting cloud. Maar tegelijkertijd gebruiken alle cloud providers tape voor
archive tier storage. Met een S3 object storage interface voor onze libraries
kunnen we deze markt beter bedienen.
DOEL:
1. Bestanden laden en opslaan op een tapelibrary, via een S3 restinterface die
zo veel volledig compatible is met S3.
2. Wanneer een bestand wordt gedownload door de client dan moet er meteen data
ontvangen worden aan de client zijde ook al is het volledige bestand nog niet
van de tape geladen. Er zal dus een klein deel van iedere file op snellere
storage beschikbaar moeten zijn. Het moet mogelijk zijn om meerder files
tegelijk te downloaden.
3. Wanneer een bestand wordt opgeslagen moet de server deze meteen ontvangen en
dus niet hoeven te wachten op het beschikbaar zijn van een drive en tape.
4. Prototype maakt gebruik van een library met 600 slots voor LTO-6 tapes en 12
LTO-6 tapedrives (1.5 petabyte data native ~= 3.75 compressed 2.5:1).Inadmin NV voert pensioen-, beleggings- en verzekeringsadministratie’s uit van beschikbare premieregelingen (=Defined Contribution, DC) voor
Premie Pensioen Instellingen (PPI’s), (ondernemings-) pensioenfondsen, vermogensbeheerders en-verzekeraars. Inadmin was voorheen onderdeel van
APG, maar is per mei 2018 overgenomen door de RiskCo Group.
Doelstelling:
Een technisch compleet nieuw financieel pensioensysteem voor premieregelingen. Kernonderdeel is de financiële middleware dat alle financiële
transacties afhandelt. Hiervoor worden nieuwe componenten ontwikkeld en in de middleware geïntegreerd worden. Er vind transitie plaats van de APG
systematiek naar het nieuw te ontwikkelen systeem dat SAP vervangt. Daarnaast wordt de ESB vervangen door Mulesoft. Impact: de huidige
financiële stroom, systemen en werkwijzen moeten opnieuw ontwikkeld en geïmplementeerd worden.
Componenten:
1. De bestaande datastroom wordt nu via een opdracht (een ‘boekingsdocument’) ingeladen naar SAP. We gaan over naar een nieuw financieel pakket
met een andere structuur (waarsch. Exact of Acumen). De bestaande datastructuur kan niet een op een worden gemapt met het nieuwe. De
informatie moet op een bepaalde manier aangeleverd worden, rekening houdend met alle parameters en regels binnen het boekingsformat. Hiervoor
ontwikkelen we een mapping module die converteert naar het gewenste gegevensformaat en ingeladen kan worden. 2. De interface is nu XML en gaat over naar JSON (soap naar Rest Call). De huidige communicatielaag voldoet dan niet meer. We gaan een nieuwe
communicatielayer ontwikkelen die het aanroepen middels REST Calls ondersteunt.
3. Een generieke boekingscomponent in .Net met behulp van .Net Classes.
4. Terugkoppeling vanuit systemen is nu niet mogelijk en wordt niet uitgevoerd. We willen een meer real-time controle uitoefenen waarbij we een
melding terugkrijgen wanneer een document is ingelezen vanuit het systeem.Aanvrager wil een switchbox ontwikkelen ten behoeve van het aansturen van
telefoons, tablets en andere devices om devices virtueel aan te sturen, dus
functies zichtbaar te maken en te laten interacteren in een retailsituatie.
Interactief presentatie op telefoonscherm bij oppakken/aanraken telefoonDemo toestellen in een winkel worden tot op de dag van vandaag aan een kabel
beveiligd. Dit beperkt de bewegingsvrijheid van de klant en er kan geen
vergelijk gemaakt worden met andere producten. Tevens beschikt de winkelier op
dit moment niet over de informatie welke toestellen de aandacht trekken in een
winkelomgeving. Hiervoor wil de aanvrager iets ontwikkelen voor het exact
positioneren van de producten in de winkel. (Met name t.o.v. de positie waar ze
horen te staan.)
Om te voorkomen dat klanten het product meenemen moet een bepaalde afstand
leiden tot een waarschuwingsalarm, gevolgd door een echt alarm indien ze van
plan zijn de winkel te verlaten. Voorwaarden van winkeliers zijn dat de
beveiliging niet dusdanig zichtbaar is, zodat de presentatie verstoord wordt.
(Zoals nu bestaande EAS poortjes bij de uitgang van een winkel.) De beveiliging
dient dus verwerkt te worden in het presentatiepaaltje en de bijbehorende
sensor.
DOEL
Het ontwikkelen van RF sensor met bijbehorend onopvallend paaltje en
softwareplatform. Binnen dit project zitten verschillende technische
uitdagingen welke door de aanvrager dmv. S&O zullen worden verholpen.Sycade is de werkmaatschappij van vijf zelfstandige ontwikkelaars. Alle participanten en de
medewerkers (4) in de werkmaatschappij ontwikkelen zelfstandig of in combinatie vanuit een enkele
locatie in Zwolle. Sycade en haar eigenaren zijn primair gespecialiseerd in MS .Net.
ontwikkelingsomgeving. Het opleidingsniveau van alle betrokkenen is HBO Informatica. In de afgelopen
periode heeft Sycade besloten dat individuele ontwikkelingen binnen projecten geoptimaliseerd kunnen
worden door het delen van kennis, maar vooral programmatuur. De programmatuur betreft een S&O
ontwikkeling.
Op basis van ervaringen binnen klantprojecten, de technische ontwikkelingen van .NET producten en de
wens om programmatuur herbruikbaar te maken, is besloten een Sycade architectuur/library te
ontwikkelen. De te ontwikkelen programmatuur dient integraal gebruik toe te staan ongeacht de
deelverzameling van modules die eventueel in projecten kan worden gehanteerd. Impliciet probleem is
een ontwerp te bedenken hoe deze modules in niet zelf ontwikkelde .NET omgeving met de minste
programmeringsinspanning te integreren zijn
Binnen het kader van deze aanvraag betreft het de ontwikkeling van een generieke intelligente Data
Access Layer, voor remote datastores. Op later termijn worden modules voor Business Intelligence,
Cloud en nieuwe technsche ontwikkelingen zoals containerization en microservice architecturen
voorzien.Klanten laten hun auto uitrusten met een GPS volgsysteem. Deze systemen communiceren via een mobiel netwerk met ons Multiviewer platform om
bijvoorbeeld de huidige locatie door te geven. De gegevens van het volgsysteem worden gebruikt voor o.a. rittenregistratie. De hoeveelheid data in
combinatie met de grote hoeveelheid queries zorgen ervoor dat de databases last krijgen van performance degradatie. Het duurt langer voordat
queries afgerond zijn. Tijdens piekmomenten is de server drukker met het lezen van de schijven dan met het uitvoeren van de daadwerkelijke queries.
Om de database minder te belasten willen we data ouder dan twee weken verplaatsen naar een oplossing die beter geschikt is voor grote
hoeveelheden data. Doordat de SQL-databases daardoor aanzienlijk kleiner zijn verwachten wij dat de performance van de database in orde blijft voor
actuele data. De gebruiker kan de data ouder dan twee weken inzien, maar zal mogelijk iets langer moeten wachten voor dit ingeladen is.
Het is met het huidige platform en tools niet mogelijk om data automatisch uit de juiste bron te lezen, zonder dat alle bestaande aanroepen gewijzigd
moeten worden. Hierdoor moet elke aanroep in de applicatie aangepast worden wat niet werkbaar is. Het is daarbij niet werkbaar om met de hand een
query op te stellen voor alle aanroepen in de code. Telkens als er een aanpassing in het datamodel gemaakt wordt met de hand alle queries langs
gegaan om ze te controleren op volledigheid.KODA wordt een ERP-systeem dat boeren in Zweden in staat stelt om (bijna) alle zaken omtrent hun kudde bij te houden. Het hoofddoel van het
project is om een systeem te creëren voor de melkregistratie en algemene dieren data. Een ander belangrijk doel van het project is om een systeem
aan te bieden dat is aangesloten op de lokale dierendatabase voor het beheren van de services die onze klant aan hun leden verkoopt (zoals
inseminaties, zwangerschapscontroles, melkregistratie, dehorning enz.)
Het systeem moet gegevens met diverse partijen koppelen, omdat de oplossing naadloos moet worden geïntegreerd in de database met dieren van
het land (gemeente), houder van de fokwaardenorganisatie, zuivelverwerkers, slachthuizen, de melkveebedrijven. Vanwege het aantal koppelingen
met externe systemen en vooral het koppelen met gemeentelijke systemen ontstaan een aantal programmatuurtechnische uitdagingen die nieuw voor
ons zijn.
1. Logging en Monitoring: We ontwikkelen een logging en monitoringplatform, zodat we aan de hand hiervan de juiste gegevens kunnen onttrekken.
We moeten de data te allen tijde kunnen volgen en de eigenschappen identificeren en begrijpen o.a. Waar is de data goed voor? Waarom hebben we
de data nodig?
2. Data-integriteit: De data die wij gaan opsturen naar allerlei systemen middels koppelingen moet altijd correct zijn, zodat er niet op meerdere
plekken vervuiling van data komt. De data moet gecontroleerd worden op echtheid en correctheid.De ontwikkeling van BI in zowel Symsys9 als SymsysWS moet functioneel tekort
schietende tools als MSSQL SSRS en Telerik vervangen. Hiervoor wordt een
volledig nieuwe reporting tool ontwikkeld die deze tekortkomingen opheft en
gebruikers in staat stelt binnen door de applicatiebeheerder onderhouden
permissies zelf relatief eenvoudig rapportages en dashboards samen te stellen.
Zelf rapportages samenstellen vereist altijd kennis, maar met name kennis van
SQL ontbreekt doorgaans op gebruikersniveau. BI zoals hier bedoeld is dan ook
zo gebruikersvriendelijk als mogelijk. Met eenvoudige selecties en simpel aan
te geven filters. Naast absolute eenvoud kunnen eigen rapportages beschikbaar
worden gemaakt voor andere gebruikers.
DOEL
Aanvrager wil een tool ontwikkelen welke via User friendly BI in principe alle
data uit MSSQL databases kan worden gebruikt voor allerhande rapportages,
binnen de beperkingen van permissies die voor gebruikers geldenEen grote kostenfactor wordt gevormd door correctieronden en toch nog
resterende fouten. Het streven right first time is zeer wenselijk, maar het
aantal correctieronden is in de praktijk nog steeds groot. De kosten hiervan
zijn fors. Wellicht nog forser zijn de kosten door verlaat, en nog erger,
onjuist opleveren (tot terugroepacties aan toe).
Nodig is direct kunnen beoordelen van bestanden, niet beperkt tot PDF’s van
artwork maar ook video en tekstdocumenten. Met juist versiebeheer. Door
meerdere mensen tegelijk op willekeurig welke locatie en gelijktijdig kunnen
aangeven van opmerkingen. Met hiërarchie, meteen een digitale handtekening voor
akkoord. Als onderdeel van een logisch werkproces.
Dit project sluit aan op de wens van iedere organisatie die controleren en
goedkeuren van bestanden minder frequent, direct goed en sneller wil laten
verlopen als onderdeel van het reguliere werkproces.
DOEL
Een tool waarmee zowel artwork, video als tekstbestanden kunnen worden
beoordeeld, gecontroleerd, van opmerkingen voorzien en geaccordeerd. Met juist
versiebeheer. Door meerdere mensen tegelijk op willekeurig welke locatie en
gelijktijdig kunnen aangeven van opmerkingen. Met hiërarchie, meteen een
digitale handtekening voor akkoord. Als onderdeel van een logisch werkproces.
In een eerder stadium is er door de aanvrager een comparetool voor pdf
ontwikkeld, maar door behoefte aan nieuwe functionaliteiten zijn er nieuwe
knelpunten opgekomen.eProcessing is voorzien in digitale stromen intern en extern naar klanten,
leveranciers en andere instanties. Op zich geen nieuw fenomeen, maar veelal met
de beperking van niet goed geïntegreerd zijn in de eigen backbone.
eProcessing zoals hier voor ogen is volledig afgestemd op Symsys9 en volgt
hiermee een lijn die eerder is gerealiseerd voor e-invoicing. Via een gateway
die de communicatie met ongeacht welke instantie mogelijk maakt.
Dit project sluit aan op de behoefte van met name grotere relaties om manuele
handelingen, decentralisatie en onoverzichtelijkheid verder uit te bannen.
DOEL
eProcessing van in- en uitgaande digitale documenten waaronder voorstellen,
orderstromen, bevestigingen, betalingen, etc. via een gateway en met volledige
aansluiting op alle relevante functies binnen Symsys9.Intelligent text is de samengevatte term voor technologie die zorgt dat copy
correct wordt vertaald én juist wordt toegepast. Zoals correct afbreken,
leesrichting. In principe in alle talen van de wereld. Elementaire fouten
worden hiermee voorkomen en het aantal correctieronden verminderd.
Intelligent text is bedoeld als controlemiddel gedurende het gehele werkproces,
van eerste productinfo tot final artwork.
Dit project sluit primair aan op de behoefte van relaties die SymsysWS (mede)
gebruiken voor hun packaging design projecten (waaronder welbekende grote
retailorganisaties) om de gedurende de uitvoering van deze projecten steeds te
kunnen worden geattendeerd op tekstuele onjuistheden. Secundair kan de functie
ook in bredere zin worden toegepast.
DOEL
Een tool die zorgt dat copy correct wordt vertaald en toegepast. Met alle
syntaxes, gekoppeld aan een omvangrijke database. Naast taal ook het correct
gebruik van punten, komma’s en wat anderszins warenwettelijk wordt vereist.Intelligent resource management beoogt een krachtige oplossing voor de optimale
inzet van resources met de minste inspanning. Met alle controles op voortgang
van en bestedingen binnen projecten, op beschikbaarheid en met directe
uitwisseling naar agenda’s, mobile devices en meer. Rekening houdend met de
acceptatie door gebruikers, dus per gebruiker of groep kunnen laten variëren
tussen heel vriendelijk en dwingend.
De basis bestaat uit twee vormen van planning. Project planning is in het
belang van tijdige doorloop van projecten. Met SymsysWS genereert door de
workflow, in Symsys9 op basis van offerte of template. Richting resources
bestaat hiermee al een wat vrijblijvende planning (het looplijstje: ‘klus moet
vrijdag klaar en je hebt er 5 uur voor’). Resource planning gaat hiermee verder
want hiermee wordt op exacte tijdstippen gepland. In beide gevallen op poules,
teams en meestal op individuen. Beide soorten planningen correleren volledig
met elkaar en dat maakt de toepassing mede uniek, want de soorten staan in
principe haaks op elkaar. Resources kunnen overigens ook apparaten, locaties
e.d. zijn.De diversiteit van BTW regelgeving binnen de EU leidt tot onnodige complexiteit
van de administratieve organisatie. Om te voldoen aan vereisten worden
administraties per land ingericht en maken de leveranciers van
boekhoudpakketten per land verschillende versies.
Aanmerkelijk eenvoudiger is een tool waarmee BTW conform vereisten als het ware
over administraties heen ligt. Vergelijkbaar met de doorgaans wel geïntegreerde
afhandeling van vreemde valuta en met de eenvoud van aanbieden van SEPA
betaalbestanden.
DOEL
Een add-on tool die regelt dat op relatief eenvoudige wijze welk BTW regime
moet worden toegepast. Met BTW codes die naast tarieven, toepassingen,
rubrieken tevens verwijzen naar de landeigenschappen. Zodat toepassing,
registratie en aangiften op landspecifieke wijze plaats vinden, geen bijzondere
inrichting van administraties nodig is en verschillende versies software
achterwege kunnen blijven.Exploitanten bieden steeds vaker een breed assortiment aan communicatiemogelijkheden.
Soms eenvoudig (print+online, TV+sponsoring), maar dit wordt
vaker een meer uitgebreide mix (print+online+video+plusproductie,
TV+sponsoring+online+evenement, etc.). Mediabureaus bedingen voor de
crossmediale inzet package prijzen.
Naast de nodige impact op de administratieve organisatie waarvoor andersoortige
veranderingen nodig zijn wordt het uitvoeren van campagnes hierdoor zeer
complex. Want de afspraak is wellicht met één partij, de uitvoering loopt over
verschillende partijen en via diverse kanalen. Om dit in goede banen te leiden
is directe interfacing met een veelheid van subsystemen benodigd en dat is wat
dit project beoogt.
De ‘klassieke’ plaatsingsopdracht die per mail wordt verzonden, wordt opgevolgd
door een systeem voor trafficken van radio en TV spots, meerdere systemen voor
trafficken van de diverse soorten online uitingen (display, SEO, social, video,
etc.), weer een ander systeem voor print buying enzovoorts.
Inventory media is nieuw fenomeen, waarbij een buying onderdeel van een
mediabureaugroep op voorhand op basis van aanname tegen gunstige voorwaarden
advertentieruimte inkoopt om deze later intern door te verkopen. Nu nog beperkt
tot online, maar later gemeengoed voor alle mediumtypen.
DOEL
Directe interfacing met een veelheid van media executiesystemen om de
complexiteit van managen van communicatiecampagnes via overzichtelijke digitale
processen Symsys onderhoudt en registreert binnen haar softwareomgeving SymsysWS voor de
afhandeling van private label packaging systemen ook alle relevante
productgegevens, waaronder ook gegevens inzake (in Nederland) KWID
(kwantitatieve ingrediënten declaratie) conform de Nederlandse Voedsel- en
Warenautoriteit. Daarvan alle verplichte en niet-verplichte omschrijvingen,
waarschuwingen, product iconen e.d. Overigens niet beperkt tot levensmiddelen,
want ook detergenten en petfood. Deze gegevens worden volop gebruikt bij het
vervaardigen van voorgedrukte verpakkingen, maar niet slecht indirect voor niet
voorverpakte producten.
Doel
Doel van dit project is te komen tot een component dat direct in verbinding
staat met uiteindelijk afrekensystemen zodat direct bij point of sale etiketten
worden geproduceerd met wettelijk vereiste gegevens.
Secundair moet het component een oplossing bieden voor geüniformeerde
etikettering voor artikelen die wel zijn voorverpakt en waar een eenvoudig
etiket als package design volstaat. Te denken valt aan kleding in
cellofaanverpakking.
Met dit component biedt aanvrager afnemers alle mogelijkheden om ook bij POS
locaties met actuele data aan wettelijke verplichtingen te voldoen. Secundair
serieuze verbeteringen van de snelheid van produceren en daarmee gepaard gaande
kostenbesparingen te realiseren waar het gaat om eenvoudig package design.Als onderdeel van het SymSys WS systeem is vraag vanuit de markt om een
voorraad/inkoop component op te nemen in het platform ten behoeve van private
label artikelen.
De markt vraagt hierbij om een flexibele oplossing waar inzet van
verschillende/wisselende leveranciers (OEM'-ers) geen invloed heef top interne
logistieke, adminsitratieve en afhandelingsprocessen (zowel de geautomatiseerde
aansturing als fysieke processen).
Het principe van dit project is:
- leveranciers van private label artikelen wordt periodiek gevraagd om opgave
van voorraadstanden
- leveranciers melden als een minimum voorraadstand dreigt te worden bereikt
- leveranciers vragen om goedkeuring voor aanvullen van voorraad die door
inkoopafdelingen van retailorganisaties al dan niet wordt geaccordeerd
- de berichtenstromen werken direct door naar ERP, PIM en logistieke systemen
- voorraden betreffen complete producten en ook halffabrikaten, ingrediënten
e.d.
- dit project bestaat uit een aantal softwarecomponenten die volledig zijn
embedded in de softwareomgeving SymsysWS dat door retailorganisaties al
anderszins wordt gebruikt voor de realisatie van private label producten.Advertising is volop in beweging. Klassieke media maken plaats voor de inzet van uiteenlopende online uitingen. Langlopende themacampagnes zijn
verruild voor kortlopende direct action. Tijdens de uitvoering van campagnes veranderd de inzet van media continu als resultaten in de vorm van
bereik en resultaat achter blijven alsook budgetbesteding wijzigt ten opzichte van wat is begroot wat in de hand wordt gewerkt door programmatic
trading. Bij gevolg is er een wirwar van veranderingen in opdrachtstromen die fouten in de hand werkt en ook doorwerkt in financieel-administratieve
processen.
DOEL
De opdrachtstromen en financiële afhandeling daarvan tussen mediabureaus en media-exploitanten optimaliseren door uitwisseling van absoluut
unieke gegevens waarvan de meest recente versie voorgaande versies overruled en waarbij uniciteit wordt gewaarborgd. Beoogd wordt een oplossing
op basis van blockchain technologie. Opdracht 1 is block 1, een wijziging van opdracht 1 is block 2 enz. Alleen al in Nederland gaat het om miljoenen
blocks voor opdrachten, facturen e.d. Mediabureaus en exploitanten zijn elk afzonderlijk broker met eigen ‘wallet’. Bestaande tools die in reeds
operationele blockchains (b.v. bitcoin en ethereum) worden gebruikt zijn door de grote hoeveelheid rekenkracht en dus ook energie die ze verbruiken
niet bruikbaar. De transactiekosten zouden veel te hoog worden en de snelheid veel te laag.Opdrachtgever is een energie-handelsbedrijf en wenst in verband met een
toenemende klantenportfolio (en dus werkdruk) functionaliteit toe te voegen aan
door ons eerder ontwikkelde maatwerk software. Het gaat hierbij om het
vastlggen, verwerking en afhandeling van contracten, het verwerken van
meetcijfers tot geconsolideerde maandtotalen, de facturatie van deze totalen en
afhandeling van aan facturatie gerelateerde informatiestromen.
Doelstelling
De volgende doelen zijn benoemd in het ontwikkeltraject:
-voorkomen van data redundantie en handelingen van medewerkers.
-Beter inzicht krijgen in het klantenportfolio en de lopende contracten.
-Het facturatieproces versnellen en daarmee een gunstigere cashflow te bereiken.
-Beter grip krijgen op het facturatie proces, daarmee fouten voorkomen en een
100% sluitende administratie te krijgen.
-Verliesposten verminderen door zaken die nu niet (op tijd) gefactureerd worden.Aanvrager ontwikkelt software in opdracht voor derden, om uiteindelijk haar
klanten beter te kunnen bedienen wil aanvrager voor zichzelf een applicatiesuite
ontwikkelen. Dit is nodig om concurrend te blijven ten opzichte van
anderen en om snel en accuraat modules te ontwikkelen maar zeker ook te
monitoren en beheren. Daarom wil aanvrager zelfstandig een web-applicatie suite
van modulen voor het midden-kleinbedrijf ontwikkelen.
Met de ontwikkeling van de suite wil aanvrager het volgene realiseren:
- Het ontwikkelen van een softwaretool ten behoeven van de operationele en
administratieve bedrijfsvoering, gebaseerd op de door aanvrager gehanteerde
uitgangspunten. Het vergroten van efficiency en behoeve van ontwikkeling en
dagelijkse bedrijfsvoering.
- Het ontwikkelen van modules voor het beheersen, monitoren en optimaliseren
van de werkprocessen voor projecten welke aanvrager uitvoert voor derden.Opdrachtgever is een energie-handelsbedrijf en wenst in verband met een
toenemende klantenportfolio (en dus werkdruk) functionaliteit toe te voegen aan
door ons eerder ontwikkelde maatwerk software. Het gaat hierbij om het
vastlggen, verwerking en afhandeling van contracten, het verwerken van
meetcijfers tot geconsolideerde maandtotalen, de facturatie van deze totalen en
afhandeling van aan facturatie gerelateerde informatiestromen.
Doelstelling
De volgende doelen zijn benoemd in het ontwikkeltraject:
-voorkomen van data redundantie en handelingen van medewerkers.
-Beter inzicht krijgen in het klantenportfolio en de lopende contracten.
-Het facturatieproces versnellen en daarmee een gunstigere cashflow te bereiken.
-Beter grip krijgen op het facturatie proces, daarmee fouten voorkomen en een
100% sluitende administratie te krijgen.
-Verliesposten verminderen door zaken die nu niet (op tijd) gefactureerd worden.
Hier voor wil men de volgende technisch nieuwe programmatuur ontwikkelen:
- Op maatgemaakte intranetapplicatie (.NET Framework koppeling met SQL server)
maken voor het uitvoeren van unieke bedrijfsprocessen.
- Opzetten van een overzichtelijke en doordachte structuur die de uitvoering en
beschrijving van processen zal vereenvoudigen.
-De applicatie zal een consistente en flexibele manier van ontwikkelen mogelijk
maken en hergebruik van code en automatiseren processen.Aanvrager ontwikkelt feedback-oplossingen voor online (mail, app en web), ten
behoeve van feedback op websites gaat aanvrager nu een technologie ontwikkelen
welke het mogelijk moet gaan maken om realtime feedback te geven op een
specifiek onderdeel of positie van een websites
Huidige feedback technologie richt zich op generieke feedback gekoppeld aan een
pagina waarbij locatie omshreven wordt.
Aanvrager wil een feedbackplatform ontwikkelen waarbij in de vorm van een
heatmap op iedere locatie in de website feedback gegeven kan worden, aan de
achterzijde wordt deze feedback dan middels screenshots gepositioneerd en
verwerkt (voor statistische analyse). -> usabilla inpage feedback module
Op dit moment verwerkt aanvrager gemiddeld 200 miljoen verzoeken per dag.
Iedere keer wanneer de software in wordt geladen op een pagina betekent dit een
verzoek aan onze servers (backend platform). Met een groei van ruim 200% jaar
op jaar moeten limieten continue op worden gerekt en worden gezocht naar nieuwe
manieren om door te schalen, aanvrager wil naast de userend (software) ook de
backend (platform) duurzaam en schaalbaar ontwikkelingen om groei te kunnen
blijven realiseren.Usabilla wil relevant kunnen inspelen op de feedback van gebruikers. Zij willen
hiertoe inzicht hebben in de user journey, de stappen die de gebruiker zet om
tot een bepaalde feedback te geven en de interacties die samen de journey
vormen. Hierbij is de huidige situatie aan de orde:
Nu is er geen oplossing om in kaart te brengen hoe gebruikersgedrag op
verschillende kanalen eruit ziet, vanuit een user journey van aaneengeschakelde
logische events.
Tevens is er geen oplossing om in kaart te brengen hoe gebruikers deze
interacties beleven en welke emoties dit oproept.
Daarnaast is er geen externe technologie om dit makkelijk binnen usabilla in
kaart te brengenHuidige emailmarketing software geeft alleen kwantitatief inzicht hoe email
presteert. Hierbij wordt bijvoorbeeld gemeten hoe vaak een email wordt geopend
(opening rate) en hoe vaak op een link in een email wordt geklikt (click
through rate). Usabilla Live voor e-mail zal kwalitatief en kwantitatief
inzicht geven in de prestaties en verbeterpunten van e-mails. Veel van onze
huidige klanten zijn op zoek naar een dergelijke oplossing welke op dit moment
nog niet wordt aangeboden in de markt. De oplossing van Usabilla betreft een
responsive feedback tool voor e-mails die door de verzender van de e-mail (e.g.
nieuwsbrief of orderbevestiging) volledig zelf geconfigureerd kan worden.
Analyse zal plaatsvinden middels een visueel dashboard waarbij zowel meta data als kwalitatieve responses worden meegenomen.
Daarnaast zal ook hier een unieke, visuele component worden toegevoegd aan het
feedback item: een screenshot (van eenonderdeel) van de nieuwsbrief waar de
aandacht naar uit gaat.
Usabilla Live voor email kan aan ieder emailbericht toe worden gevoegd door het
plaatsen van een stukje code. Dit stukje code zorgt ervoor dat ontvangers van
de email de mogelijkheid hebben een rating te geven en hun mening te geven.Usabilla Live for Apps wordt door de aanvrager ontwikkelde software waarmee
feedback kan worden gegeven in iOS en Android apps. Door het installeren van
een SDK binnen de app (Objective C SDK voor iOS en Java SDK voor Android) komt
de feedback functionaliteit beschikbaar.
De huidige technieken van Usabilla Live zijn niet congruent met apps. Binnen
dit project wordt het onderzoek naar en de ontwikkeling van deze technieken
toegelicht.
Deze periode ligt de S&O nadruk op:
- Het nemen van screenshots
- Het opnemen en opslaan van user-sessionsAanvrager verzamelt op dit moment erg veel feedback voor haar klanten. Deze
grotere klanten, e.g. op enterprise niveau, ontvangen ook steeds meer feedback.
In toenemende mate is het niet meer te behappen om al deze feedback manueel te verwerken. We zien dat sommige klanten speciale mensen aannemen die toegewijd
zijn aan het verwerken van de inkomende feedback. Deze situatie is niet
schaalbaar en zal daarom opgelost moeten worden.
De binnenkomende feedback past grofweg in vier categorieën; fouten / suggesties
/ complimenten / vragen. Binnen deze categorieën kan er veel feedback binnen
komen. Er moet een zelflerend algoritme worden ontwikkeld, welke binnenkomende
feedback zelf verder kan classificeren en groeperen. Hierdoor zal er in onze
dashboarding een top drie worden gepresenteerd, van de gebieden waarin aandacht
behoeft van onze klanten. De eerste stap is het automatisch classificeren en
groeperen van de feedback op basis van bestaande groeperingen reeds
gedefinieerd door de klant. Een vervolg hierop is het classificeren en
groeperen van niet bestaande groepen. Het algoritme zou dan zelf labels kunnen
creëren op basis van een feedback item.Op dit moment wordt de hosting van de aanvrager beheerd door een externe
parij.(Infrastructuur Amazon/serverbeheer Webslice). Door exponentieel gebruik
van onze software moeten zij veel schaalbaarder en flexibeler zijn.
Serverbeheer wil men onder eigen beheer brengen en ontwikkelen op basis van een
microservice architectuur.
DOEL
Aanvrager is van zins om een beheerscomponent voor Microservices te
ontwikkelen. Dit beheercomponent zal met Amazon communiceren en server
management taken overnemen. Dit is een 'unified tool' die snel en gemakkelijk
deployen mogelijk maakt en als er iets mis gaat gemakkelijk en snel kan
terugschakelen.
De functionaliteit om servers aan te maken is al aanwezig bij Amazon (geen
WBSO). Het automatiseren van scripts wordt ook gedaan (geen WBSO). Dit project
gaat over het onderzoek / prototype vele onderdelen van dit beheercomponent die
deze taken als een uniform benadering moeten realiseren. 3. Er moet een fallback zijn wanneer een infrastructuur niet naar behoren
werkt. De gebruikers moeten dan worden omgeleid naar de oude infrastructuur.
Het analyseren van de infrastructuur, terwijl deze non-homogeneous is. De
verschillende infrastructuren hebben een andere structuur, waarbij de analyse
van de infrastructuur en de health moeilijk te benaderen is. Dit is niet met
bestaande techniek op te lossen
4. In de wisseling van infrastructuur willen we dat we wel verbetering gaan
zien. Hiervoor moet een geautomatiseerde analyse plaatsvinden die tijdens de
wisseling de dit vergelijkt. Vergelijken van data uit verschillende
infrastructuren. Hierbij moet performance vergeleken worden tussen AWS en
Kubernetics. Ook dit is niet met bestaande technieken op te lossen.Usabilla verzamelt feedback op verschillende manieren, met verschillende
formulieren. Om de bezoeker een vertrouwd gevoel te geven, kunnen al deze
formulieren een andere stijl krijgen met verschillende kleuren, afwerkingen en
logo's. Dit is op dit moment mogelijk, echter neemt dat veel tijd in beslag van
de programmeurs en designers. Om beter op de toekomst voorbereid te zijn en de
laatste technieken te ondersteunen, zal men nieuwe feedbackformulieren
ontwikkelen. Deze nieuwe feedbackformulieren hebben een andere benadering van
het uiterlijk (lettertypes / kleuren / afwerking).
Om de dienstverlening schaalbaar te maken doet men onderzoek om een
customisation component te schrijven. Er is al een tool ontwikkeld die deze
customisations automatiseert (geen WBSO) als je kijkt naar het uiterlijk
(lettertypes / kleuren / afwerking).
DOEL
Aanvrager is van zin om creatie van knoppen te automatiseren. Op dit moment
gebeurt dat door de designer zelf handmatig. Dit wil men mogelijk maken in het
platform. Hierbij wil men onderzoek doen, hoe men programmeer technisch
plaatjes kan genereren, op basis van verschillende inputs (tekst / kleur /
vorm).Alle frontend-webproducten van Usabilla (visuele feedback, campagnes, in-page, e-mail) worden afzonderlijk en op hun eigen manier gebouwd. Dit
leidt tot een verspreide, moeilijk te onderhouden, moeilijk te veranderen reeks van producten. Het betekent ook dat we meerdere keren een (nieuwe)
functie moeten maken als we deze over verschillende producten willen hebben. Daarnaast levert het beveiligingsrisico's op, wat een groot gevaar is
omdat onze frontend-producten veel verkeer ontvangen. De resultaten zijn dat we niet kunnen voldoen aan functieverzoeken van klanten en een
beperkte beveiliging hebben.
We ontwikkelen een Adaptive Feedback Form, die we kunnen toepassen op al onze webproducten, die slim, snel, aanpasbaar, veilig en toegankelijk
zullen zijn. Dit form zal de basis vormen voor een nieuwe engine die we gaan ontwikkelen: een engine die op basis van onze conversie- en
formuliergegevens de betrokkenheid van het formulier door machine learning zal voorspellen. Op basis van de contextpagina's waarin het formulier is
ingesloten, kan het voorspellen welke vragen beter zullen presteren. Met dit lerende aspect zullen we onze dynamische formulieren gebruiken om het
formulier automatisch te vullen met de relevante inhoud voor de journey van de specifieke gebruiker.Usabilla biedt klanten 6 verschillende manieren om feedback van hun gebruikers te verzamelen. Deze 6 verschillende bronnen interpreteren,
verwerken en bewaren gegevens op verschillende manieren. Om data (producten) eenvoudig te kunnen manipuleren en analyseren, hebben we een
enkele structuur nodig waar de gegevens van alle bronnen naartoe vloeien, en een standaard manier om de gegevens te indexeren en aan te houden.
Deze structuur zal werken als een pijplijn en zal verantwoordelijk zijn voor de opname, identificatie, verwerking en persistentie van gegevens uit alle
verschillende bronnen.
We willen klanten de mogelijkheid te bieden om feedbackgegevens te importeren vanuit elke andere bron (bijv. via social medianetwerken,
klantenservicesystemen etc.) als een manier om een zeer holistische kijk op al hun feedback te hebben en te analyseren. Om feedback over alle
kanalen te vergelijken, kan de Smart Feedback Pipeline automatisch het schema/de structuur en kenmerken identificeren van de gegevens die door de
gebruikers worden verzonden. Hierdoor kan het systeem feedbackgegevens correct behouden en manipuleren vanaf elk aangepast kanaal dat de klant
mogelijk wil analyseren in Usabilla.Dit project beoogdt de ontwikkeling van een Auto-vertaling AI-engine die 40 verschillende talen ondersteunt. Een belangrijke factor om de intentie en
het sentiment van gebruikers te begrijpen, is om rekening te houden met branchespecifiek jargon en cultureel specifieke idiomatische uitdrukkingen.
Usabilla is actief in meerdere industrieën en elk heeft zijn eigen complexiteit, termen en betekenissen. Omdat we een platform voor kunstmatige
intelligentie creëren, is een van de moeilijkste concepten in machine learning modelclassificatie, taxonomie en training. De testgegevens moeten
consistent zijn.
Ondanks de verschillende oplossingen die er zijn, zoals IBM Watson, Google cloud natuurlijke taal-API die sentimentanalyse uitvoert en meertalige
ondersteuning biedt, is het grootste probleem dat deze alleen heel beperkt zijn in termen van taal coverage en ook de kwaliteit van de automatische
vertaling laat te wensen over.
Er is behoefte aan een meer geavanceerde automatische vertaling waarbij het sentiment van de feedback niet verloren gaat. Elke feedback campagne
/ product heeft verschillende vragen voor verschillende sectoren, wat het trainen van een model zeer uitdagend maakt, omdat de dataset divers is.Luchtvaartmaatschappijen bieden meestal de mogelijkheid om (luxe) artikelen te kunnen kopen tijdens een vlucht. Deze
artikelen zijn meestal dure artikelen. De vliegtuigtrolleys die deze goederen bevatten worden verzegeld en pas geopend
tijdens de vlucht. Toch worden deze artikelen gestolen, wat een grote verliespost oplevert voor luchtvaartmaatschappijen. Om
dit tegen te gaan wil iQue een track & trace systeem ontwikkelen dat de artikelen kan volgen zodat er meer inzicht komt
wanneer en waar artikelen worden gestolen. Daarnaast zal het systeem inzicht moeten leveren waar de artikelen zich op elk
gegeven moment bevinden. iQue wil een autonoom systeem ontwikkelen dat door middel van RFID techniek de artikelen kan
scannen in de trolley, zonder bekabeling of externe spanningsaansluiting. De artikelen dienen te worden voorzien van RFID
Transponders. In de trolley worden meerdere systemen geplaatst die zelfstandig periodieke ‘scans’ kan uitvoeren om de
inhoud van de trolley te bepalen. De systemen dienen met elkaar te kunnen communiceren zodat een volledig beeld van de
inhoud verkregen wordt. Dit wordt nog eens extra bemoeilijkt doordat de trolley van metaal is gemaakt en volledig gesloten
gelezen moet worden. Door middel van een draadloze communicatie (Wifi/Bluetooth) moet een volledige trolley uit te lezen
zijn.Op dit moment heeft aanvrager een cliënt/server applicatie, Medikad die lokaal
bij de klant werkt op de computer.Dit maakt het niet mogelijk om online
activiteiten te maken die 24/7 beschikbaar moeten zijn voor o.a. de patiënt.
De wens is dat de zorgverlener online de patiënt kan begeleiden, motiveren en
meten hoe het met de patiënt gaat. Hierdoor willen we via het internet een
omgeving maken waar de volgende functionaliteit bestaat:
a. Overzicht van afspraken, facturen en n.a.w.-gegevens van de patiënt
b. Kunnen invullen van opgegeven meetinstrumenten
c. Opgegeven oefeningen per datum kunnen uitvoeren
d. Feedback kunnen geven van patiënt naar zorgverlener en andersom
De nieuwe omgeving is een centrale plek die 24/7 beschikbaar is maar moet
communiceren met
decentrale systemen die niet 24/7 online zijn zoals een laptop of een pc. Dit
hoeft niet perse Medikad te zijn.Pluhz is ontwikkelaar en leverancier van diverse e-health producten. We zijn voornemens om een platform te ontwikkelen als ondersteuning bij het
organiseren van echospreekuren van radiologen bij huisartsenpraktijken. In eerste instantie gaat het om een planningssysteem voor het plannen en
maken van afspraken bij huisartsen. Een platform waar praktijken die additionele zorg willen aanbieden contact kunnen leggen met radiologen die
deze zorg aanbieden. Vervolgens kunnen patiënten een echospreekuur uitzoeken bij een locatie bij hen in de buurt.
Het daadwerkelijke technische probleem volgt hieruit. Medische gegevens en werklijsten kunnen in het ziekenhuis of in een diagnostisch centrum van
en naar de echoapparaten gestuurd worden met behulp van een DICOM of PACS systeem.
Echter, in het systeem dat wij gaan ontwikkelen doen zich een aantal problemen voor:
- De echo-apparaten die wij gebruiken zijn mobiel, en staan dus niet bij een vast ziekenhuis
- Medische gegevens moeten niet opgeslagen worden in een centraal systeem, maar juist op een veilige manier in de cloud opgeslagen worden en
deelbaar zijn met huisarts, patiënt en specialist.
- De gemaakte echo’s moeten gekoppeld worden aan gebruikersaccounts in ons eigen systeem.
- DICOM en PACS-systemen zijn toegespitst op hele specifieke toepassingen waar wij toe willen naar een generiek systeem wat ook toe te passen is
op andere medische specialisaties.Pluhz ontwikkelt nieuwe softwarecomponenten om het eigen ontwikkelde boekingssoftware technisch te integreren en te laten communiceren met
meerdere huisartsinformatiesystemen (HIS), om agenda’s in verschillende applicaties en in verschillende talen te kunnen synchroniseren.
Componenten:
1. Ontw. universeel & platform onafhankelijke connection-layer in Python dat veelgebruikte berichtformaten (JSON, SOAP, FHIR) ondersteunt zodat
verschillende huisartsinformatiesystemen en het Pluhz boekingssysteem met elkaar kunnen communiceren.
2. Ontwikkelen eigen conversie -en koppelmodule in Python die zowel events/berichten stuurt en ontvangt naar/van andere informatiesystemen via
een webhook systeem.
Technische blokkade is een systeem te ontwikkelen dat generiek is t.b.v. ondersteunging en data-uitwisseling tussen verschillende
huisartsinformatiesystemen, zodanig dat deze systemen automatische gekoppeld en geïntegreerd kunnen worden met behoud van beveilig (medische
gegevens) en autorisatie (informatiebevoegdheid).Posthuma Partners (PP) heeft een claimfilter ontwikkeld voor schades, waarvan
schadecomponenten gestandaardiseerd naar aspect en schadeomvang beschikbaar
komen. De percentielen vormen de basis voor de beslissing om de ingediende
schade al dan niet geautomatiseerd goed te keuren of toe te wijzen aan een
nader onderzoek. Het technisch deel van de filter bestaat uit het leggen van
relaties tussen de gestandaardiseerde componenten om inconsistenties op te
sporen.
DOEL / TECHNISCHE NIEUWHEID
Aanvrager wil een technisch nieuwe filter ontwikkelen voor bepaling van de
ziektekosten (zorgsector). Bovendien wil men via de filter de geautomatiseerde
afwerking v.d. notastroom mogelijk maken. Aanvrager ontwikkelt programmatuur
waarmee medische kosten geautomatiseerd kunnen worden gefilterd. Het betreft
hierbij de constante van veel gestandaardiseerde medische kosten. Echter hoe nu
de claim uit kunnen lezen en daarbij automatisch te bepalen of alle notities /
posten wel juist zijn opgevoerd? Hoe te bepalen waar wellicht gegevens
onvolkomen zijn ingevoerd?
EXTRA:
Idee is een aanvulling van de CMF software met een fraudedetectie module. Idee
is nu de integratie van een statistisch model in de software welke intuïtief
kan achterhalen of gegevens in orde zijn. Idee is dat de software ieder detail
van de voorgestelde reparatie automatisch controleert en nagaat of de bewuste
gegevens kloppen.Vanuit de zorgmarkt is er een behoefte naar betere en transparantere methoden
en tools voor financieel beheer en planning. Aanvrager speelt hierop in door
een concreet software product te ontwikkelen.
DOEL
Naarmate zorginstellingen commerciëler worden en scherper aan de wind moeten
zeilen, wordt het belang van betrouwbare prognoses voor budgetten en
reserveringen steeds zwaarwegender. Daarnaast kent de zorgsector een eigen,
unieke financieringsinstrument in de vorm van de DBC- (Diagnose Behandel
Combinaties) en DOT- (DBC Op weg naar Transparantie) gebaseerde declaraties.
Deze fundamenteel andere declaratiewijze dan de traditionele claim-afhandeling
bij een verzekeraar, vraagt om een eigen analyse en aanpak.
TECHNISCH NIEUW
Aanvrager wil nu een tweeledige oplossing ontwikkelen: Men wil nu toe naar een
geïntegreerd software framework - bestaande uit een 1) IFM oplossing (voor
intern gebruik) en een 2) expert applicatie (voor gebruiker met diepgaande
kennis). Deze worden in één generieke oplossing geïntegreerd: idee is de
ontwikkeling van web technologie. Idee hierbij is een webtechnologie waarmee
het mogelijk wordt de applicatie extern van de instelling te hosten. Er dienen
veel dynamische koppelingen tussen bestanden te worden ontwikkeld waartoe
aanvrager een snel werkende intuïtieve interface wil ontwikkelen.De Werkhervatting Gedeeltelijk Arbeidsgeschikten (WGA) is een complexe regeling
rond de uitkeringsaanspraken die een werknemer kan maken na 2 jaar ziekte.
Werkgevers zijn zelf aansprakelijk voor deze uitkering en vooral kleinere
bedrijven zijn gebaat hiervoor een reserve aan te houden. De berekening van de
WGA is specialistisch werk waarvoor Posthuma Partners consultancy wil aanbieden.
DOEL
PP gaat een complete WGA-applicatie ontwikkelen. We ontwikkelen code voor een
webapplicatie. We doen dat binnen de ASP. NET omgeving met MVC (model view
control). Dit is een omgeving die volop in ontwikkeling is en vele
mogelijkheden kent om een web-applicatie vorm te geven. Idee is dat hiermee een
Management Informatie Systeem mogelijk is: berekeningen worden vastgelegd,
automatisch geïnterpreteerd en gevalideerd en vervolgens vergeleken met eerdere
berekeningen. Deze berekeningen gebeuren op grondslagen die automatisch worden
gekozen / bepaald door de software.
De software bepaalt automatisch versiebeheer (doet updating wanneer nodig).De aanvrager ontwikkelt een compleet nieuwe versie van de zelf ontwikkelde
toepassing TripleJump DataProcessor applicatie, een toepassing voor
artikelbeheer. Om de software intuïtiever te maken werd DataProcessor sterk
vereenvoudigd en werden veranderingen in de look-and-feel doorgevoerd.
DataProcessor ondersteunde alle standaard brancheformaten en eigen formaten
zowel voor het im- en exporteren van artikelgegevens als voor het
classificeren. Matching-routines maakten het mogelijk om het eigen bestand
direct te koppelen aan artikelbestanden van leveranciers en/of afnemers.Aanvrager wil hun extensieve productdatabase en functies aan kunnen sluiten op
diverse webshops op basis van magenta. Idee is om hiervoor een plugin te
ontwikkelen waardoor deze data en functies kunnen worden aangesproken.
DOEL
- Onderzoeken en Ontwikkelen van een eigen plugin manager, met daarin een
datafeed plugin naar Magenta
- plugin zal diverse data moeten kunnen inlezen verwerken en aanspreekbaar
kunnen maken voor Magentaaanvrager wil een eigen module gaan ontwikkelen voor het beheer van artikelen.
Het Inmiddels bevat ons systeem ruim 1.500.000 producten en 20.000
kwaliteitsregels. Momenteel zorgen deze regels voor de bepaling van de
kwaliteit van een product. Met de omvang van onze huidige product database en
groeiend aantal resellers welke zijn aangesloten gaat het prijs/margebeheer een
steeds omvangrijker karwei worden. Dit te ontwikkelen systeem zal autonoom de
prijzen en kwaliteits-regels moeten gaan beheren en is in de huidige staat niet
langer houdbaar.
DOEL
- Het berekenen van een prijs per product, meerdere malen per dag, eventueel
real-time. De module berekent deze prijzen aan de hand van informatie verzameld
uit eigen data (bezoekers informatie, product views, product orders), 3rd party
data (prijsvergelijkers) en door middel van een te ontwikkelen prijsrobot.
- Per reseller moet een eigen prijs kunnen worden gehanteerd per individueel
product.Aanvrager ontwikkelt sinds 2012 een softwarepakket (Saninet Easy) voor het op
gebruiksvriendelijke wijze tekenen van badkamers in 3d. Dit pakket voldoet nu
al niet meer aan de hedendaagse eisen en technologie: Techniek (XNA) is
verouderd en opkomst van VR als geaccepteerde technologie.
Doel
Hierdoor wil men van de grond af een nieuw pakket ontwikkelen die dubbel
inzetbaar moeten zijn: Enerzijds door de showroomhouder, op locatie in VR het
beeld van de toekomstige badkamer bieden. Anderzijds door de klanten die hun
toekomstige badkamer op een mobile device in 3d en VR kunnen bekijken.
Aanvrager wil dit pakket binnen de Unity ontwikkelomgeving ontwikkelen in C#.
Aangezien dit een ontwikkelomgeving voor een game-engine betreft worden hier
technische knelpunten voor verwacht.Aanvrager heeft 2 applicaties DataProcessor en Eezybrige. Dataprocessor ondersteunt alle standaard brancheformaten en eigen formaten zowel voor
het im- en exporteren van artikelgegevens. Matching-routines maakten het mogelijk om het eigen bestand direct te koppelen aan artikelbestanden
van leveranciers en/of afnemers. EezyBridge is een volledig zelf ontwikkeld web-based Digital Asset Management systeem. De problemen die
EezyBridge oplost voor onze klanten, is met name het opslaan, beheren en distribueren van digitale bestanden (foto, audio, video).
We willen een interface ontwikkelen tussen beide applicaties die zorgt voor optimale beheersbaarheid van artikelen, assets en de combinatie tussen
beiden. Een gebruiker die gebruik maakt van zowel DPTJ, als EezyBridge, heeft de mogelijkheid de gegevens uit beide applicaties in bulk aan elkaar te
koppelen en uit te wisselen, zonder hierbij opnieuw in te loggen.
FUNCTIONALITEITEN
1: De grote hoofdbrekens zitten met name in de performance van de applicatie. Ook de klanten (groothandels) met miljoenen artikelen moeten
uiteindelijk moeiteloos gebruik kunnen maken van de applicatie. Bovendien is er een afhankelijkheid van de internetverbinding van de gebruiker. Ook
bij tragere netwerken, moet de applicatie nog goed werken. Aangezien in DPTJ de Client en de Server gescheiden zijn, is het complex om dit te
realiseren zonder te veel concessies aan de performance te doen. 2: het overhalen van 10.000’en assets is bij het importeren niet ongebruikelijk. Momenteel kan een grote import al enkele uren duren, maar met de
toevoeging van assets in EezyBridge, wordt dit gemakkelijk vervijfvoudigd. Dit is echter ook voor een nachtelijke run niet meer acceptabel.
3: Een generieke manier van afhandeling en vastlegging in database is noodzakelijk, om oneindig programmeerwerk te voorkomen.
4: de artikelen worden getoond in een grid-weergave. Het veranderen van een veldje ergens in de regel, kan direct invloed hebben op gegenereerde
tekst elders in de regel. Bij het opbouwen van het scherm moet dus (in geheugen) direct de tekst gegenereerd worden, maar bij elke regelaanpassing
moet deze ververst worden (en regel-aanpassingen kunnen ook in bulk).
5: de normale gang van zaken is dat de DPTJ-Client een request afvuurt naar de server en wacht op een antwoord. Wanneer een time-out optreedt
(waar we zeker mee te maken krijgen), ontvangt de DPTJ-Client dus nooit reactie en werkt deze functionaliteit dus helemaal niet meer. Eén probleem
welke we zeker kunnen verwachten, is de korte time-out tijd die Azure hanteert m.b.t. WCF-aanroepen t.o.v. de huidige standaard IIS time-outs. De
imports en exports (met validatie en verwerking) uit DPTJ kunnen tot uren duren. Het gebruik van de standaard CLR-dll (Common Language Runtime)
is niet meer mogelijk. Hiervoor ontwikkelen we een 'broker' functie.Uitwisseling van gegevens in de (zorg) keten van onze klanten wordt steeds
belangrijker. Wij hebben een aantal modules gericht op specifieke
berichtenuitwisseling in diverse sectoren. Hierop is doorontwikkeling gewenst
om tegemoet te kunnen blijven komen aan de wens van de klanten.
DOEL
Ontwikkelen van een landingsplatform om meerdere certificaten te kunnen
ondersteunen: per bestaande toepassing SBV-z en BRP het ondersteunen van
meerdere organisatie(code)s in één klant omgeving. Daarnaast is het ook
wenselijk om een validatiemechanisme in het berichtenverkeer te ontwikkelen en
integreren, verschillende stromen te herzien en generieke aansluiting te maken
op het Landelijk Schakel Punt (LSP).De REGAS applicatie is in de loop der jaren een monoliet geworden: een complexe
applicatie met veel legacy en een web van dependency’s. Dit moet ontward
worden. In 2015 is er een architectuur evaluatie geweest onder externe
begeleiding waarbij een nieuwe referentie architectuur is opgesteld conform
Microservices: losse, onafhankelijk opererende stukjes functionaliteit met een
eigen interface en data laag welke eenvoudig toe te voegen, vervangen en
verwijderen zijn.
DOEL
Niet alleen alle nieuwe features, maar ook alle bestaande ontwarren en
doorontwikkelen naar microservices.
FUNCTIONALITEITEN / TECHNSICHE NIEUWHEID
-> Er wordt veel redundantie gemaakt. Dit moet zorgvuldig gebeuren.
-> Er zal een orchestratie tussen de services plaatsvinden.
-> Datalayer doorontwikkelen: elke service krijgt z’n eigen subset aan data.
Deze moeten met elkaar in sync gebracht worden.
-> Synchrone verwerking converteren naar a-synchrone verwerking.
-> API ontwikkelen welke compatible is en blijft bij doorontwikkeling naar
microservices.REGAS is een erkende speler op het gebied van formele (veelal medische)
berichten. Zij ontwikkelen robuuste procesoplossingen maar hebben daarentegen
nauwelijks ervaring met nieuwe 100%web/app based communicatieoplossingen. Toch
wordt door haar klanten tegenwoordig verwacht dat de oplossingen niet alleen
formeel en robuust zijn, maar ook de traditionele formele interactie via
intranets, workstations en face to face ontstijgt.
Daarnaast krijgen de integratie van online tools voor het efficiënter, en
daarmee goedkoper, faciliteren van zorg en hulpverlening een steeds
duidelijkere plek in onze samenleving. Steeds meer delen van zorg vinden niet
meer face-to-face plaats. REGAS is primair gericht op de ondersteuning van de
professional. Maar de markt vraagt nu in toename om te integratie van online
hulpverlening. REGAS biedt hiervoor een uitstekende basis van dossier, maar
voorziet nog niet in oplossingen als social tagging, chat & slow chat, online
aanmeldingen en vragenlijsten. De integratie van deze oplossingen vragen een
nieuwe set aan features die bruikbaar en configureerbaar moeten zijn. Dit
vraagt tevens aanpassingen aan de architectuur en infrastructuur; deze is nu
(nog) niet geënt op grotere volumes van verwerken.
Beoogd doel
Ontwikkelen van nieuwe oplossingen in zowel functionaliteit als techniek om
REGAS voor substantieel meer gebruikers via meerdere ingangen te laten werken.In toenemende mate wordt verwacht dat data op allerlei manieren worden
gepresenteerd: afhankelijk van het moment dat iemand zich in een proces
bevindt, wil men andere zaken kunnen vastleggen. Aanvrager beschikt weliswaar
over een basisregistratie, echter het inrichten van een bord met widgets in een
volledig nieuwe software oplossing – gevoed middels webservices – dient het
mogelijk te maken om een nieuwe interface naar eigen inzicht te configureren.
DOEL
Aanvrager wil toe naar ontwikkeling van een widget board, een alternatieve
weergave van data, waarin direct acties uitgevoerd kunnen worden door
eindgebruikers, welk volledig zelf in te richten is.
TECHNISCH IDEE
Het betreft hierbij een widget board , heel naar eigen inzicht in te richten,
waarbij gebruikers direct acties kunnen uitvoeren. Deze bestaat uit:
-> EEN CONFIGUREERBARE INTERFACE voor eindgebruikers: idee is een systeem
waarbij de klant bijna alles zelf kan indelen en configureren. Idee betreft het
opzetten van een systeem waarin alle afzonderlijke onderdelen in de huidige
gebruikersinterface afzonderlijk functioneren / zijn losgekoppeld. Idee is dat
hierbij alle onderlinge afhankelijkheden worden opgeheven en elk onderdeel in
zijn eigen component geplaatst wordt. De widget die op een pagina geplaatst
wordt. Er zijn géén volwassen of goed onderhouden CMS frameworks op C#/.Net of
Java EE beschikbaar. Regas zal een eigen softwareoplossing ontwikkelen.De registratie van cliëntgegevens vraagt steeds meer van een zorgprofessional.
Op frequente basis wordt meer en meer informatie vastgelegd over én ook door
cliënten. Dit sluit aan bij de groeiende behoefte om meer informatie / gegevens
om een compleet ziektebeeld van een cliënt te kunnen vastleggen en als gevolg
hiervan een zo goed mogelijke diagnose en vervolgbehandeling op te stellen.
Maar hoe kunnen we deze informatie efficiënter verzamelen? Is tenminste een
deel van die informatie niet te voorspellen?
DOEL
Binnen het project Repetitive Registration wil aanvrager een technische
oplossing ontwikkelen om de mogelijkheden terugkerende en/of voorspelbare
elementen sneller te herkennen en eenvoudiger vast te leggen. Een optimale user
experience speelt hierbij een grote rol. Hierbij zijn de doelen:
- De oplossing is schaalbaar waardoor geen beperkingen in het aantal
registratieniveaus optreden. Hiermee dient subregistratie mogelijk te zijn.
Bovendien sluiten rapportages beter aan en is de performance veel beter.
- Een taak / afspraak is als zodanig via een ingebouwde techniek herkenbaar.
- Gegevens van registratie moeten aan elkaar gekoppeld kunnen worden zodat deze
bijvoorbeeld in een rapport of kalender view toonbaar zijn.
- Voorts wil Regas via de software een synchronisatie tussen Regas afspraken en
de eigen client kunnen realiseren.Binnen A&O-services, het pensioenfonds voor de sector afbouw en onderhoud,
heeft men te maken met een breed scala van samenwerkende afdelingen die een
immense hoeveelheid gegevens berekenen, bundelen, opleveren en beoordelen in
een Pensioen Administratie Systeem.
In de huidige situatie is echter nog sprake van diverse losse systemen en komen
handmatige handelingen nog veelvuldig voor. Het betreft een ketting van losse
onderdelen die verschillende onderdelen van de pensioenrapportage ondersteunen.
DOEL
RiskCo is nu voornemens om een Reken Rapportage Platform te ontwikkelen waarbij
via een centraal systeem – bestaande uit een aantal generieke componenten – de
verschillende rekenketens worden ondersteund. Deze rekenunit dient:
* veel breder inzetbaar te zijn;
* het complexe jaarwerkproces veel meer te stroomlijnen;
* aantal overdrachtsmomenten tussen afdelingen terug te brengen (nu faalfactor,
nl. bron van rekenfouten);
* rapportageproces toekomstbestendig te maken.
Aanleverprocessen van data, rapporten, staten en verslagen dienen via het Reken
Rapportage Platform zoveel mogelijk te worden geautomatiseerd. Hiertoe worden
talrijke rekenketens uitgevoerd in deelmodellen, zoals:
* Aansprakenmodel;
* Actuariële factoren model;
* Mutatieverkoopmodel;
* Voorzieningenmodel.Solvency II richt zich op versterking van het toezicht op de financiële sector.
Hiermee wordt een beter inzicht verkregen in de financiële positie van
financiële dienstverleners - waaronder banken en verzekeraars - waardoor de
kans op solvabiliteitsproblemen in de sector wordt verkleind.
Voor het berekenen van de risico's van pensioenfondsen en verzekeraars is het
in het kader van Solvency II noodzakelijk om een groot aantal scenario´s (bv.
overlijdensrisico, rente ontwikkelingen, rente risico etc.) door te rekenen.Dit
wordt Asset and Liability Management (ALM) genoemd.
ProductXpress is een high-performance, schaalbare, platform onafhankelijke
software gericht op en geoptimaliseerd voor het uitvoeren van allerlei
berekeningen.
DOEL:
Bovengenoemde scenario's samenhangend en technisch onder te brengen binnen
ProductXpress-modellen.Binnen RiskCo worden voor diverse klanten financiële productmodellen ontwikkeld
in ProductXpress. Deze modellen dekken verschillende branches af binnen de
financiële wereld (b.v. Levensverzekeringen, Pensioenen, Schadeverzekeringen,
etc.). Om de kwaliteit te borgen van deze modellen worden regelmatig reviews
uitgevoerd als onderdeel van het QA proces. Bij het uitvoeren van deze reviews
moeten een grote hoeveelheid structuren en wiskundige definities worden
geanalyseerd om de kwaliteit van de modellen te beoordelen. Een groot gedeelte
van dit analyseproces omvat het doorlopen van verbanden en hiërarchieën in de
modellen (het ‘inventariseren’ van een model). Dit onderdeel van het reviewen
wil aanvrager automatiseren via ontwikkeling van een softwaretool.
DOEL
Het automatiseren van deze ‘inventarisatie’ handelingen zou de hoeveelheid
repetitief werk kunnen reduceren waardoor de reviewer zich kan richten op het
daadwerkelijk evalueren van de kwaliteit van de modellen. Door de reductie in
de benodigde tijd voor het uitvoeren van een review is het tevens mogelijk om
regelmatiger reviews te kunnen uitvoeren, waardoor mogelijke problemen met de
kwaliteit eerder in het modelleerproces ontdekt worden en deze problemen tegen
lagere kosten opgelost kunnen worden. Het is een gegeven dat het oplossen van
fouten en kwaliteitsproblemen tijdens de ontwikkeling van modellen en/of
software veel goedkoper is naarmate dit eerder in het proces plaats vindt.Bij supply chain finance financiert een koper met een sterke kredietwaardigheid de toeleverancier, die een lagere kredietwaardigheid heeft. De cost of
capital v.d. leverancier is dan hoger, en zo kan hij profiteren van de betere credit rating van zijn klant. Idee: (1) een MKB-ondernemer koopt goederen
en (2) ontvangt een invoice. Vervolgens stuurt hij de financier (lender) het bericht (3) dat hij zijn goederen betaalt; (4) de financier verzorgt 95% van
de betaling aan de leverancier.
(5A) Koper betaalt de financier en vervolgens maakt de financier 3% (5b) over als invoice maturity over aan de leverancier.Dit is een nieuw project waarbij onderdelen uit de projecten van RiskCo-10 zijn ondergebracht en worden voortgezet (onderdeel 1 en 2). Het doel van
het ontwikkelen van dit platform is om een uitermate efficiënt administratiesysteem te verkrijgen waardoor pensioenuitvoering met aanmerkelijk
minder inzet kan worden gedaan.
Functionaliteiten:
1. Ontwikkeling bi-temporale database, inclusief eigen query taal (Dit onderdeel komt voort uit Riskco10 en zal worden voortgezet binnen dit nieuwe
project).
2. Workflow (was voorheen ‘BPEL’)
3. Framework generieke pensioenadministratie, inclusief toepassing feitenadministratie op pensioen
4. Ontwikkeling DSL ten behoeve van business functions
5. Ontwikkeling generieke data validatie software, inclusief plausibiliteitscontroles, wachtkamerfunctionaliteit
6. Generieke raadpleegschermen
7. Event search scheduling and execution
8. Generieke extract en rapportages ten behoeve van jaarwerk en DNB
9. Synchronisatie
10. Data-uitwisseling (nieuw)Servoy maakt een ontwikkel, test en productie platform voor desktop, browser en
mobiele applicaties. In 2015 is versie 8.0 gelanceerd, die naast Java- en Web
clients ook RIA clients en volledige mobiele apps (voor on— en offline gebruik)
kan genereren. Servoy biedt een 4GL ontwikkelomgeving waarmee klanten in staat
worden gesteld om snel en met relatief programmeurs volledige complexe
applicaties zoals ERPs en SCM systemen uit te rollen. Het product bestaat
momenteel uit twee belangrijke bestanddelen, de "core" ontwikkelomgeving en het
“Applicatie framework" (een set van standaard componenten die door klanten
gebruikt worden voor security, monetization, provisioning, etc.). Omdat veel
onderdelen van het framework worden ontwikkeld in de eigen ontwikkelomgeving,
loopt ontwikkeling van het framework altijd iets achter de "core" omgeving aan.
Voor klanten zijn deze twee onderdelen echter onlosmakelijk met elkaar
verbonden. Doordat klanten relatief weinig technische kennis hoeven te hebben
om met Servoy te ontwikkelen, vragen zij ook vaak advies aan Servoy aangaande
QA, deployment en operations. Servoy denkt haar klanten in de toekomst met
versie 9.0 nog beter te kunnen gaan ondersteunen door niet alleen een
ontwikkelomgeving, maar ook een grootschalige globale run-time omgeving plus de
bijbehorende operations aan te bieden (Platform-as-a-Service).Alchemy is een innovatieve tool waarmee analyses en transformaties van software
broncode uitgevoerd kunnen worden. In tegenstelling tot wat in de markt
gangbaar is, namelijk het bouwen van zware van programmeertaal afhankelijke
parsers, is Alchemy gebaseerd op linguïstische technieken en analyses die
uitgevoerd worden op tekst. Alchemy is dan ook onafhankelijk van
programmeertaal en lichtgewicht. Voorbeelden die al met Alchemy ondersteund
worden zijn
(zie voor infomatie: http://alchemyapi.com)
- Analyse van onderhoudbaarheid van systemen, van oude Cobol legacy systemen
tot en met moderne websystemen en PLC-systemen in tunnels
- Monitoring van de constructiekwaliteit van software tijdens het
ontwikkelproces. Door het lichtgewicht aspect van Alchemy kunnen eenvoudig
maatwerk metingen/analyses ingericht worden. Bij gebruik bij monitoring kunnen
daardoor de systeem specifieke architectuur-richtlijnen gecontroleerd worden en
wordt veel herstelwerk voorkomen.
- Reconstructie van de architectuur van systemen.TestMonitor is een online testregistratietool voor handmatig testen. De tool is speciaal ontworpen voor complexe ERP implementaties. Wij geloven dat
elke gebruiker in een organisatie een goede tester is, mits deze de juiste structuur en hulpmiddelen krijgt aangereikt. Omdat ERP implementaties
complex zijn en vaak te weinig draagvlak krijgen, willen wij juist die gebruikers als testers laten meetesten tijdens een dergelijke implementaties.
Hiervoor ontwikkelen we een compleet nieuwe TestMonitor. Naast deze “enterprise” versie, willen we ook een “lite” versie maken, waarmee we ook de
kleine testers voor kleine projecten willen bedienen.
1. Notificaties: over meerdere platformen notificaties mogelijk maken en deze volledig gebruikersafhankelijk te laten zijn. Iedere gebruiker moet zijn
eigen notificaties kunnen instellen via config.scherm vanaf de ontwerpzijde van TestMonitor tot en met het issuemanagement.
2. Data handling & Import: De hoeveelheden data nemen toe en moeten op een slimme wijze verwerkt worden. Veel data geeft
indexeringsproblemen, opslagproblemen, risico op fouttoleranties en moet uiteindelijk ook via elke browser weer snel ontsluitbaar zijn.
3. Screen Capture en annotatie: browser onafhankelijkheid is niet nu niet mogelijk. De schermprintfunctionaliteit moet op alle browsers werken in
combinatie met de verschillende operating systems. Daarnaast willen we de mogelijkheid bieden om annotaties toe te voegen.U-lab is een bedrijf dat zich specialiseert in maatwerk interactieve systemen. Dit project betreft het U-lab platform 2.0. Het doel is om een platform te
creëren dat multifunctioneel, multi-device en meertalig is. Bovendien moet de programmatuur flexibel, schaalbaar en herbruikbaar worden. Hiervoor is
het van belang dat het platform generiek en modulair ontwikkeld wordt.
Aanvrager richt zich de komende periode op de ontwikkeling van een unit testing framework. Aanvrager wil Laravel projecten en onderdelen
automatisch testen. Hierbij worden onderlinge afhankelijkheden tussen verschillende componenten bepaald en getest.Aanvrager ontwikkelt een systeem voor golfbanen, genaamd Golflab. Verschillende functies en modules worden ontwikkeld zodat deze ook te
gebruiken zijn binnen het eigen platform. De komende periode ontwikkelt aanvrager een generieke interface voor externe systemen om met
verschillende kassa– en boekhoudsystemen te communiceren.Het project betreft de ontwikkeling van HomeDNA. Dit is een applicatie om klantprocessen bij de verkoop en verhuur van woningen digitaal te
ondersteunen. Een driedimensionale oplossing voor makelaars, kopers en opdrachtgevers. Het woningdossier biedt o.a. een workflow voor het
afhandelen van gedefinieerde processen. Ook biedt het functionaliteit om te koppelen met specifieke (nieuwbouw) projectenwebsites en kunnen
gebruikers zelf datasets definiëren.Foox online is een grote webshop en leverancier van allerlei levensmiddelen voor groothandels. Op dit moment maakt men gebruik van handscanners
van Motorola met barcodes en een bestaand backordersysteem. Men wil de barcodescanner vervangen middels een App. Dit betekent dat de telefoon
de scanfunctie zal hebben en dat de functionaliteit op een telefoon werkend moet worden gekoppeld aan bestaande systemen. Daarnaast draait het
platform op verouderde technologie en is belasting te groot. Hiervoor gaan we een oplossing m.b.v. webservices programmeren.
FUNCTIONALITEITEN
1. Scanner functie: Voor deze app dient er gebruik te kunnen worden gemaakt van een barcode scanner die diverse barcodes aan kan waaronder EAN
en QR. We integreren een plug-in gecombineerd met een Java library. Na het updaten van code in een library kun je niet meer eenvoudig updaten als
er een nieuwe versie van de library uitkomt, omdat je daarmee de aangepaste code weer overschrijft.
2. Webservices: De webshop draait een verouderde versie van het Laravel platform waarvoor geen plugins / tools meer worden (door)ontwikkeld en
draait op een behoorlijke belasting en kan eigenlijk niet veel extra verkeer gebruiken. Doordat er geen extra belasting op de server kan worden geduld
dient er een zeer efficiënte opslagfunctie middels webservices te worden ontwikkeld.U-lab is de ontwikkelaar van websites als Golfardennen.com (Durbuy en 5nations) en bijbehorende Reserverings- en boekingssysteem voor de
golfbanen. Deze maken gebruik op dit moment van een ander Amerikaanse systeem (ihotelligence) voor het boeken van arrangementen en
hotelkamers. Deze 2 systemen leven nu naast elkaar en moeten met elkaar geïntegreerd worden via een te ontwikkelen datalaag. Er dient een
combinatie boeking te kunnen worden gedaan voor hotel en golfbaan. Alleen wordt er voor beide systemen gebruik gemaakt van een ander pakket.
Belangrijkste uitdaging in het retrieven van data uit de systemen en matchen van deze data in de tussenlaag. Omdat het een combinatie boeking
betreft is de beschikbaarheid een onzekere factor. Daardoor dient er real-time te worden gecontroleerd wat de beschikbaarheid is zonder dat de
gebruiker hier onnodig lang op hoeft te wachten.
Component: Combineren van de datalagen:
We ontwikkelen een validatiefunctie (integratielaag) die de stamgegevens van de boekingen verzamelt via een caching-principe, tagt en kenmerkt
zodat de applicaties dat kunnen herkennen en efficiënt en effectief op kunnen ophalen bij opvraging en valideren.U-lab heeft een eigen framework ontwikkeld voor het ondersteunen van diverse eigen ontwikkelde e-commerce platformen. Door gebruik te maken
van hybride app techniek is de hoeveelheid CPU-kracht beperkt tot 1 thread van de lokale machine i.p.v. de server CPU’s. Dit is tegelijkertijd het
knelpunt: zwaardere search query’s met hogere CPU-kracht, zoals het doorzoeken en vergelijken van >60.000 items in zeer korte tijd is met de
huidige broncode niet mogelijk. De broncode architectuur is niet toegerust op deze item aantallen en ongestructureerd opgebouwd.
Hiervoor gaan we middels VueJS een nieuwe softwarecomponent ontwikkelen naar extended search queries in de interne database via de front-end
met ondersteuning van meerdere entries, filters en autocomplete functie voor searchqueries. Daarnaast ontwikkelen we een tussenlaag waarin prijzen
worden berekend indien niet beschikbaar en worden opgeslagen voor een volgende aanvraag waardoor de berekentijd automatisch zal afnemen. Dit
integreren we vervolgens in ons eigen ontwikkelde platformen en laten deze op technisch nieuwe wijze samenwerken.U-lab wil een generieke engine ontwikkelen waarmee het mogelijk wordt om userfiles op een uniforme wijze te verwerken. Met behulp hiervan kunnen
we een overzicht (authenticatie) creëren waarin zichtbaar is wie er toegang heeft tot welke userfiles. Daardoor wordt het mogelijk om onbevoegden
toegang te ontzeggen tot bepaalde bestanden.
Het doel is het ontwikkelen van een losstaande applicatie waarin een CDN wordt ontwikkeld die RESTful kan worden aangesproken. Die CDN moet de
bestanden kunnen verwerken en aanleveren. Door de verschillende soorten bestanden (met ieder zijn eigen configuratie -en beveiligingsinstellingen)
moet er een complexe, dynamische oplossing worden bedacht.Het doel is om een module te ontwikkelen om van buitenaf informatie door te geven welke verwerkt zal worden om muziekinformatie weer te geven.
Dit wordt vervolgens doorgegeven aan een API van het dashboard die het kan verwerken op een scherm. Daarvoor moet er een interface komen met
de Sonos speakers welke informatie ophaalt en deze vertaalt naar informatie welke bruikbaar is voor het dashboard. Ook willen we een interface met
het lokale netwerk te ontwikkeld worden welke de informatie van de Sonos speakers ophaalt en deze naar het dashboard stuurt. Sonos biedt hiervoor
geen ondersteuning.Het door ons ontwikkelde Foox online platform heeft zich ontwikkeld tot totaalleverancier/ inkoopsysteem voor groothandels en diverse organisaties
(o.a. levensmiddelen, kantoorartikelen etens- en rookwaren). Door significante groei in users/ datastromen voldoet het initieel ontwerp van
voorraadbeheer, transport en productaanbevelingen niet meer. Momenteel is het instellen van productaanbevelingen per klantengroep is een
tijdrovend en foutgevoelig proces en moet handmatig per seizoen worden aangepast. Om tijd te besparen, gebruikersfouten te voorkomen en een
betere klantervaring te leveren is er behoefte aan een zelflerend systeem die per gebruikersgroep producten kan aanbevelen.
In dit project ontwikkelen we een AI-systeem te dat o.b.v. bestelhistorie en andere soorten inputdata productaanbevelingen kan genereren naar
gebruikers/ groepen met een automatisch zeer nauwkeurig voorraadbeheersysteem, transport en productaanbevelingen.
Technische uitdaging is correct voorspellen van de aanbevelingen en het systeem zelfsturend te maken o.b.v. van de outputdata
(productaanbevelingen) o.b.v. continue veranderingen in onvoorspelbaar koopgedrag, productpopulariteit, beperkt houdbare producten en ander
variabelen teneinde effectief voorraadbeheer.Huidige etiketteermachines labelen in lijn te verwerken product en loggen daarbij verschillende datapunten als aantallen van gelabelde producten,
gewichten, producttype, snelheid, ingrediënten, allergie informatie e.d. Data wordt momenteel lokaal per machine opgeslagen en is enkel toegankelijk
via de lokale interface van de machine.
Om gelogde data te kunnen ontsluiten naar een algeheel, vanuit een centraal punt te monitoren platform met in- en externe (ERP) systemen (klanten)
en vanuit gekoppelde systemen data in te zien, aan te passen en analyse mogelijk te maken, ontwikkelen we een generieke API software datacommunicatielaag
teneinde een bi-directionele data-uitwisseling tussen individuele machines/lijnen en tussen in- en externe databases.
Technische blokkade is een communicatielaag te ontwikkelen die generiek is met correcte data-uitwisseling tussen verschillende klant ERP en interne
databases, zodanig dat data automatisch gekoppeld en geïntegreerd/ vertaald kan worden naar de juiste labeling en terugmelding logdata.Om de energietransitie te bevorderen ontwikkelen we een nieuw softwaresysteem om gebruikers (consumenten) actief) te adviseren hoe zij hun
woonhuis duurzamer kunnen maken (bijv. middels de vloer te isoleren/zonnepanelen te plaatsen). Te ontwikkelen in de programmeertalen Flutter
(Java/Kotlin) en Dart (cross-platform). Beide zeer nieuwe talen (stable release 7.05.2019 en 19.06.2019 respectievelijk).
Doelstelling is via het systeem woningen te visualiseren en zichtbaar te maken wat en hoe er verduurzaamd kan worden. Tegelijkertijd willen we de
potentieel besparing automatisch (realtime) berekenen a.d.h.v. woning/gebouw karakteristieken (o.a. energielabel, beglazing, bouwperiode etc.)
welke maatregel het meest energiebesparend en kosteneffectief is. Resulterend in een offerte aanvraag via het platform bij aangesloten bedrijven.
Componenten:
- Flutter-based iOS en Android front- en backend;
- Backend systeem vanuit NodeJS en TypeScript teneinde PDK en CBS data-extractie via JSON;
- Backend docker container, deployment systeem layers en (web)platformBinnen IBM BPM is het geautomatiseerd testen een onderbelicht punt in de
software. Binnen een project wordt er veel tijd besteed aan testen wat nu veel
handmatige acties betreft. Dit betekent dat ontwikkelaars tijd besteden aan
testen i.p.v. ontwikkelen.
Beoogd doel:
Het doel is om in de aankomende periode een test suite te ontwikkelen voor IBM
BPM waarbij een tester zonder zware technische kennis, testcases kan
automatiseren en beheren. De oplossing wordt een standalone applicatie
ontwikkeld in Java die applicaties, gerealiseerd in IBM BPM, kan inlezen,
gecreëerde testcases kan vasthouden en uit kan voeren op een aangegeven
doelsysteem (test omgeving). De suite moet in staat zijn om, unit tests,
regressie testen, performance testen uit te voeren en hier verslagleggen over
te geven.Autonome softwaretoepassingen worden steeds belangrijker onderdeel van de
samenleving (o.a. principe van zelfrijdende auto's en algoritmisch handelen in
aandelen). Door de grote hoeveelheid data in bedrijfsprocessen zijn er in BPMprocessen
kansen om op termijn een proces meer autonoom te laten verlopen, met
als doel Straight Through Processing te behalen. Robotisering van processtappen
en voorspellend analyseren van procesverloop zijn belangrijk projectonderdeel.
DOEL
Software-ontwikkeling voor autonome processen op basis van machine learning.
Hierbij wordt gebruik gemaakt van Natural Language Processing (NLP) om
cognitieve taken van gebruikers over te kunnen nemen. Idee is o.b.v. deze
processor een applicatie te ontwikkelen die in staat is om verschillende
voorspellingen te doen aan de hand van procesdata. Hiertoe ontwikkelen van 3
componenten:
1). Vergaren van inputdata voor NLP-processor d.m.v. een datascraper.
Datascraper vergaart data, brengt deze samen, ontdubbelt deze en maakt de data
geschikt voor language parsing.
2). Processor voor documentclassificatie. Deze moet in staat zijn om o.b.v. de
inhoud van een document deze te classificeren om vervolgens het juiste proces
te kunnen starten.
3). Processor voor inhoudsanalyse, welke inhoud kan onttrekken aan het
document, op basis waarvan vervolgens in een proces business rules getriggerd
kunnen worden. Hierdoor hoeft een document niet handmatig doorgelezen te worden
om de data te onttrekken.